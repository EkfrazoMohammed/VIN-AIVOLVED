{"version":3,"file":"static/js/361.c4368352.chunk.js","mappings":";2PAWO,MAAMA,EACXC,WAAAA,GACEC,KAAKC,SAAW,KAChBD,KAAKE,QAAU,IAAIC,IACnBH,KAAKI,UAAW,EAChBJ,KAAKK,eAAYC,CACnB,CAKAC,OAAAA,CAAQC,EAAOC,EAAOC,EAAMC,GAC1B,MAAMC,EAAYH,EAAMI,UAAUF,GAC5BG,EAAWL,EAAMM,SAEvBH,EAAUI,SAAQC,GAAMA,EAAG,CACzBT,QACAU,QAAST,EAAMS,QACfJ,WACAK,YAAaC,KAAKC,IAAIX,EAAOD,EAAMa,MAAOR,MAE9C,CAKAS,QAAAA,GACMvB,KAAKC,WAGTD,KAAKI,UAAW,EAEhBJ,KAAKC,SAAWuB,EAAAA,EAAiBC,KAAKC,QAAQ,KAC5C1B,KAAK2B,UACL3B,KAAKC,SAAW,KAEZD,KAAKI,UACPJ,KAAKuB,cAGX,CAKAI,OAAAA,GAA2B,IAAnBjB,EAAAkB,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,GAAAA,UAAA,GAAOE,KAAKC,MACdC,EAAY,EAEhBhC,KAAKE,QAAQc,SAAQ,CAACP,EAAOD,KAC3B,IAAKC,EAAMwB,UAAYxB,EAAMyB,MAAML,OACjC,OAEF,MAAMK,EAAQzB,EAAMyB,MACpB,IAEIC,EAFAC,EAAIF,EAAML,OAAS,EACnBQ,GAAO,EAGX,KAAOD,GAAK,IAAKA,EACfD,EAAOD,EAAME,GAETD,EAAKG,SACHH,EAAKI,OAAS9B,EAAMM,WAGtBN,EAAMM,SAAWoB,EAAKI,QAExBJ,EAAKK,KAAK9B,GACV2B,GAAO,IAIPH,EAAME,GAAKF,EAAMA,EAAML,OAAS,GAChCK,EAAMO,OAINJ,IACF7B,EAAM6B,OACNrC,KAAKO,QAAQC,EAAOC,EAAOC,EAAM,aAG9BwB,EAAML,SACTpB,EAAMwB,SAAU,EAChBjC,KAAKO,QAAQC,EAAOC,EAAOC,EAAM,YACjCD,EAAMS,SAAU,GAGlBc,GAAaE,EAAML,MAAM,IAG3B7B,KAAKK,UAAYK,EAEC,IAAdsB,IACFhC,KAAKI,UAAW,EAEpB,CAKAsC,SAAAA,CAAUlC,GACR,MAAMmC,EAAS3C,KAAKE,QACpB,IAAIO,EAAQkC,EAAOC,IAAIpC,GAavB,OAZKC,IACHA,EAAQ,CACNwB,SAAS,EACTf,SAAS,EACTgB,MAAO,GACPrB,UAAW,CACTgC,SAAU,GACVC,SAAU,KAGdH,EAAOI,IAAIvC,EAAOC,IAEbA,CACT,CAOAuC,MAAAA,CAAOxC,EAAOyC,EAAOC,GACnBlD,KAAK0C,UAAUlC,GAAOK,UAAUoC,GAAOE,KAAKD,EAC9C,CAOAE,GAAAA,CAAI5C,EAAO0B,GACJA,GAAUA,EAAML,QAGrB7B,KAAK0C,UAAUlC,GAAO0B,MAAMiB,QAAQjB,EACtC,CAMAmB,GAAAA,CAAI7C,GACF,OAAOR,KAAK0C,UAAUlC,GAAO0B,MAAML,OAAS,CAC9C,CAMAP,KAAAA,CAAMd,GACJ,MAAMC,EAAQT,KAAKE,QAAQ0C,IAAIpC,GAC1BC,IAGLA,EAAMwB,SAAU,EAChBxB,EAAMa,MAAQQ,KAAKC,MACnBtB,EAAMM,SAAWN,EAAMyB,MAAMoB,QAAO,CAACC,EAAKC,IAAQpC,KAAKqC,IAAIF,EAAKC,EAAIE,YAAY,GAChF1D,KAAKuB,WACP,CAEAU,OAAAA,CAAQzB,GACN,IAAKR,KAAKI,SACR,OAAO,EAET,MAAMK,EAAQT,KAAKE,QAAQ0C,IAAIpC,GAC/B,SAAKC,GAAUA,EAAMwB,SAAYxB,EAAMyB,MAAML,OAI/C,CAMA8B,IAAAA,CAAKnD,GACH,MAAMC,EAAQT,KAAKE,QAAQ0C,IAAIpC,GAC/B,IAAKC,IAAUA,EAAMyB,MAAML,OACzB,OAEF,MAAMK,EAAQzB,EAAMyB,MACpB,IAAIE,EAAIF,EAAML,OAAS,EAEvB,KAAOO,GAAK,IAAKA,EACfF,EAAME,GAAGwB,SAEXnD,EAAMyB,MAAQ,GACdlC,KAAKO,QAAQC,EAAOC,EAAOqB,KAAKC,MAAO,WACzC,CAMA8B,MAAAA,CAAOrD,GACL,OAAOR,KAAKE,QAAQ4D,OAAOtD,EAC7B,EAIF,IAAAuD,EAA+B,IAAIjE,ECjNnC,MAAMkE,EAAc,cACdC,EAAgB,CACpBC,QAAO,CAACC,EAAMC,EAAIC,IACTA,EAAS,GAAMD,EAAKD,EAO7BG,KAAAA,CAAMH,EAAMC,EAAIC,GACd,MAAME,GAAKD,EAAAA,EAAAA,GAAaH,GAAQH,GAC1BQ,EAAKD,EAAGE,QAASH,EAAAA,EAAAA,GAAaF,GAAMJ,GAC1C,OAAOQ,GAAMA,EAAGC,MACZD,EAAGE,IAAIH,EAAIF,GAAQM,YACnBP,CACN,EACAQ,OAAM,CAACT,EAAMC,EAAIC,IACRF,GAAQC,EAAKD,GAAQE,GAIjB,MAAMQ,EACnB9E,WAAAA,CAAY+E,EAAKC,EAAQC,EAAMZ,GAC7B,MAAMa,EAAeF,EAAOC,GAE5BZ,GAAKc,EAAAA,EAAAA,GAAQ,CAACJ,EAAIV,GAAIA,EAAIa,EAAcH,EAAIX,OAC5C,MAAMA,GAAOe,EAAAA,EAAAA,GAAQ,CAACJ,EAAIX,KAAMc,EAAcb,IAE9CpE,KAAKsC,SAAU,EACftC,KAAKmF,IAAML,EAAI7D,IAAMgD,EAAca,EAAInE,aAAewD,GACtDnE,KAAKoF,QAAUC,EAAAA,EAAQP,EAAIQ,SAAWD,EAAAA,EAAQE,OAC9CvF,KAAKwF,OAASpE,KAAKqE,MAAM3D,KAAKC,OAAS+C,EAAIY,OAAS,IACpD1F,KAAK0D,UAAY1D,KAAKuC,OAASnB,KAAKqE,MAAMX,EAAI/D,UAC9Cf,KAAK2F,QAAUb,EAAIc,KACnB5F,KAAK6F,QAAUd,EACf/E,KAAK8F,MAAQd,EACbhF,KAAK+F,MAAQ5B,EACbnE,KAAKgG,IAAM5B,EACXpE,KAAKiG,eAAY3F,CACnB,CAEA4F,MAAAA,GACE,OAAOlG,KAAKsC,OACd,CAEA6D,MAAAA,CAAOrB,EAAKV,EAAI1D,GACd,GAAIV,KAAKsC,QAAS,CAChBtC,KAAKO,SAAQ,GAEb,MAAM0E,EAAejF,KAAK6F,QAAQ7F,KAAK8F,OACjCM,EAAU1F,EAAOV,KAAKwF,OACtBa,EAASrG,KAAK0D,UAAY0C,EAChCpG,KAAKwF,OAAS9E,EACdV,KAAK0D,UAAYtC,KAAKqE,MAAMrE,KAAKqC,IAAI4C,EAAQvB,EAAI/D,WACjDf,KAAKuC,QAAU6D,EACfpG,KAAK2F,QAAUb,EAAIc,KACnB5F,KAAKgG,KAAMd,EAAAA,EAAAA,GAAQ,CAACJ,EAAIV,GAAIA,EAAIa,EAAcH,EAAIX,OAClDnE,KAAK+F,OAAQb,EAAAA,EAAAA,GAAQ,CAACJ,EAAIX,KAAMc,EAAcb,IAElD,CAEAR,MAAAA,GACM5D,KAAKsC,UAEPtC,KAAKwC,KAAKV,KAAKC,OACf/B,KAAKsC,SAAU,EACftC,KAAKO,SAAQ,GAEjB,CAEAiC,IAAAA,CAAK9B,GACH,MAAM0F,EAAU1F,EAAOV,KAAKwF,OACtBzE,EAAWf,KAAK0D,UAChBsB,EAAOhF,KAAK8F,MACZ3B,EAAOnE,KAAK+F,MACZH,EAAO5F,KAAK2F,MACZvB,EAAKpE,KAAKgG,IAChB,IAAI3B,EAIJ,GAFArE,KAAKsC,QAAU6B,IAASC,IAAOwB,GAASQ,EAAUrF,IAE7Cf,KAAKsC,QAGR,OAFAtC,KAAK6F,QAAQb,GAAQZ,OACrBpE,KAAKO,SAAQ,GAIX6F,EAAU,EACZpG,KAAK6F,QAAQb,GAAQb,GAIvBE,EAAU+B,EAAUrF,EAAY,EAChCsD,EAASuB,GAAQvB,EAAS,EAAI,EAAIA,EAASA,EAC3CA,EAASrE,KAAKoF,QAAQhE,KAAKC,IAAI,EAAGD,KAAKqC,IAAI,EAAGY,KAE9CrE,KAAK6F,QAAQb,GAAQhF,KAAKmF,IAAIhB,EAAMC,EAAIC,GAC1C,CAEAiC,IAAAA,GACE,MAAMC,EAAWvG,KAAKiG,YAAcjG,KAAKiG,UAAY,IACrD,OAAO,IAAIO,SAAQ,CAACC,EAAKC,KACvBH,EAASpD,KAAK,CAACsD,MAAKC,OAAK,GAE7B,CAEAnG,OAAAA,CAAQoG,GACN,MAAMC,EAASD,EAAW,MAAQ,MAC5BJ,EAAWvG,KAAKiG,WAAa,GACnC,IAAK,IAAI7D,EAAI,EAAGA,EAAImE,EAAS1E,OAAQO,IACnCmE,EAASnE,GAAGwE,IAEhB,EChHa,MAAMC,EACnB9G,WAAAA,CAAYS,EAAOsG,GACjB9G,KAAK+G,OAASvG,EACdR,KAAKgH,YAAc,IAAI7G,IACvBH,KAAKiH,UAAUH,EACjB,CAEAG,SAAAA,CAAUH,GACR,KAAKI,EAAAA,EAAAA,GAASJ,GACZ,OAGF,MAAMK,EAAmBC,OAAOC,KAAKC,EAAAA,EAASC,WACxCC,EAAgBxH,KAAKgH,YAE3BI,OAAOK,oBAAoBX,GAAQ9F,SAAQ0G,IACzC,MAAM5C,EAAMgC,EAAOY,GACnB,KAAKR,EAAAA,EAAAA,GAASpC,GACZ,OAEF,MAAM6B,EAAW,CAAC,EAClB,IAAK,MAAMgB,KAAUR,EACnBR,EAASgB,GAAU7C,EAAI6C,KAGxBC,EAAAA,EAAAA,GAAQ9C,EAAI+C,aAAe/C,EAAI+C,YAAc,CAACH,IAAM1G,SAASgE,IACxDA,IAAS0C,GAAQF,EAAcnE,IAAI2B,IACrCwC,EAAczE,IAAIiC,EAAM2B,KAE1B,GAEN,CAMAmB,eAAAA,CAAgB/C,EAAQgD,GACtB,MAAMC,EAAaD,EAAOE,QACpBA,EAsGV,SAA8BlD,EAAQiD,GACpC,IAAKA,EACH,OAEF,IAAIC,EAAUlD,EAAOkD,QACrB,IAAKA,EAEH,YADAlD,EAAOkD,QAAUD,GAGfC,EAAQC,UAGVnD,EAAOkD,QAAUA,EAAUb,OAAOe,OAAO,CAAC,EAAGF,EAAS,CAACC,SAAS,EAAOE,YAAa,CAAC,KAEvF,OAAOH,CACT,CArHoBI,CAAqBtD,EAAQiD,GAC7C,IAAKC,EACH,MAAO,GAGT,MAAMK,EAAatI,KAAKuI,kBAAkBN,EAASD,GAYnD,OAXIA,EAAWE,SAmFnB,SAAkBI,EAAYT,GAC5B,MAAM5F,EAAU,GACVoF,EAAOD,OAAOC,KAAKQ,GACzB,IAAK,IAAIzF,EAAI,EAAGA,EAAIiF,EAAKxF,OAAQO,IAAK,CACpC,MAAMoG,EAAOF,EAAWjB,EAAKjF,IACzBoG,GAAQA,EAAKtC,UACfjE,EAAQkB,KAAKqF,EAAKlC,OAEtB,CAEA,OAAOE,QAAQiC,IAAIxG,EACrB,CA1FMyG,CAAS3D,EAAOkD,QAAQG,YAAaJ,GAAYW,MAAK,KACpD5D,EAAOkD,QAAUD,CAAA,IAChB,SAKEM,CACT,CAKAC,iBAAAA,CAAkBxD,EAAQgD,GACxB,MAAMP,EAAgBxH,KAAKgH,YACrBsB,EAAa,GACbrG,EAAU8C,EAAOqD,cAAgBrD,EAAOqD,YAAc,CAAC,GACvDQ,EAAQxB,OAAOC,KAAKU,GACpBrH,EAAOoB,KAAKC,MAClB,IAAIK,EAEJ,IAAKA,EAAIwG,EAAM/G,OAAS,EAAGO,GAAK,IAAKA,EAAG,CACtC,MAAM4C,EAAO4D,EAAMxG,GACnB,GAAuB,MAAnB4C,EAAK6D,OAAO,GACd,SAGF,GAAa,YAAT7D,EAAoB,CACtBsD,EAAWnF,QAAQnD,KAAK8H,gBAAgB/C,EAAQgD,IAChD,SAEF,MAAMe,EAAQf,EAAO/C,GACrB,IAAIuC,EAAYtF,EAAQ+C,GACxB,MAAMF,EAAM0C,EAAc5E,IAAIoC,GAE9B,GAAIuC,EAAW,CACb,GAAIzC,GAAOyC,EAAUrB,SAAU,CAE7BqB,EAAUpB,OAAOrB,EAAKgE,EAAOpI,GAC7B,SAEA6G,EAAU3D,SAGTkB,GAAQA,EAAI/D,UAMjBkB,EAAQ+C,GAAQuC,EAAY,IAAI1C,EAAUC,EAAKC,EAAQC,EAAM8D,GAC7DR,EAAWnF,KAAKoE,IALdxC,EAAOC,GAAQ8D,CAMnB,CACA,OAAOR,CACT,CASAnC,MAAAA,CAAOpB,EAAQgD,GACb,GAA8B,IAA1B/H,KAAKgH,YAAY+B,KAGnB,YADA3B,OAAOe,OAAOpD,EAAQgD,GAIxB,MAAMO,EAAatI,KAAKuI,kBAAkBxD,EAAQgD,GAElD,OAAIO,EAAWzG,QACbkC,EAASX,IAAIpD,KAAK+G,OAAQuB,IACnB,QAFT,CAIF,ECvHF,SAASU,EAAUC,EAAOC,GACxB,MAAMC,EAAOF,GAASA,EAAMhB,SAAW,CAAC,EAClCmB,EAAUD,EAAKC,QACf/H,OAAmBf,IAAb6I,EAAK9H,IAAoB6H,EAAkB,EACjDzF,OAAmBnD,IAAb6I,EAAK1F,IAAoByF,EAAkB,EACvD,MAAO,CACL5H,MAAO8H,EAAU3F,EAAMpC,EACvBgI,IAAKD,EAAU/H,EAAMoC,EAEzB,CAsCA,SAAS6F,EAAwB9I,EAAO+I,GACtC,MAAMlC,EAAO,GACPmC,EAAWhJ,EAAMiJ,uBAAuBF,GAC9C,IAAInH,EAAGsH,EAEP,IAAKtH,EAAI,EAAGsH,EAAOF,EAAS3H,OAAQO,EAAIsH,IAAQtH,EAC9CiF,EAAKlE,KAAKqG,EAASpH,GAAGuH,OAExB,OAAOtC,CACT,CAEA,SAASuC,EAAWC,EAAOf,EAAOgB,GAAuB,IAAd7B,EAAArG,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,GAAAA,UAAA,GAAU,CAAC,EACpD,MAAMyF,EAAOwC,EAAMxC,KACb0C,EAA8B,WAAjB9B,EAAQ+B,KAC3B,IAAI5H,EAAGsH,EAAMO,EAAcC,EAE3B,GAAc,OAAVpB,EAAJ,CAIA,IAAK1G,EAAI,EAAGsH,EAAOrC,EAAKxF,OAAQO,EAAIsH,IAAQtH,EAAG,CAE7C,GADA6H,GAAgB5C,EAAKjF,GACjB6H,IAAiBH,EAAS,CAC5B,GAAI7B,EAAQQ,IACV,SAEF,MAEFyB,EAAaL,EAAM9B,OAAOkC,IACtBE,EAAAA,EAAAA,GAASD,KAAgBH,GAAyB,IAAVjB,IAAesB,EAAAA,EAAAA,GAAKtB,MAAWsB,EAAAA,EAAAA,GAAKF,MAC9EpB,GAASoB,EAEb,CACA,OAAOpB,EACT,CAmBA,SAASuB,EAAUpB,EAAOqB,GACxB,MAAMC,EAAUtB,GAASA,EAAMhB,QAAQsC,QACvC,OAAOA,QAAwBjK,IAAZiK,QAAwCjK,IAAfgK,EAAKT,KACnD,CAcA,SAASW,EAAiBC,EAAQC,EAAUC,GAC1C,MAAMC,EAAWH,EAAOC,KAAcD,EAAOC,GAAY,CAAC,GAC1D,OAAOE,EAASD,KAAgBC,EAASD,GAAc,CAAC,EAC1D,CAEA,SAASE,EAAoBhB,EAAOiB,EAAQC,EAAUpK,GACpD,IAAK,MAAM2J,KAAQQ,EAAOE,wBAAwBrK,GAAMyI,UAAW,CACjE,MAAMN,EAAQe,EAAMS,EAAKX,OACzB,GAAIoB,GAAajC,EAAQ,IAAQiC,GAAYjC,EAAQ,EACnD,OAAOwB,EAAKX,KAEhB,CAEA,OAAO,IACT,CAEA,SAASsB,EAAaC,EAAYC,GAChC,MAAM,MAAC3K,EAAO4K,YAAad,GAAQY,EAC7BT,EAASjK,EAAM6K,UAAY7K,EAAM6K,QAAU,CAAC,IAC5C,OAACC,EAAA,OAAQR,EAAQnB,MAAOM,GAAgBK,EACxCiB,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,KACf9D,EAlCR,SAAqBgE,EAAYC,EAAYrB,GAC3C,MAAO,GAAPsB,OAAUF,EAAWG,GAAE,KAAAD,OAAID,EAAWE,GAAE,KAAAD,OAAItB,EAAKT,OAASS,EAAK3J,KACjE,CAgCcmL,CAAYR,EAAQR,EAAQR,GAClCZ,EAAOyB,EAAOtJ,OACpB,IAAIgI,EAEJ,IAAK,IAAIzH,EAAI,EAAGA,EAAIsH,IAAQtH,EAAG,CAC7B,MAAMD,EAAOgJ,EAAO/I,IACb,CAACmJ,GAAQ5B,EAAO,CAAC8B,GAAQ3C,GAAS3G,EAEzC0H,GADmB1H,EAAKkJ,UAAYlJ,EAAKkJ,QAAU,CAAC,IACjCI,GAASjB,EAAiBC,EAAQ/C,EAAKiC,GAC1DE,EAAMI,GAAgBnB,EAEtBe,EAAMkC,KAAOlB,EAAoBhB,EAAOiB,GAAQ,EAAMR,EAAK3J,MAC3DkJ,EAAMmC,QAAUnB,EAAoBhB,EAAOiB,GAAQ,EAAOR,EAAK3J,OAE1CkJ,EAAMoC,gBAAkBpC,EAAMoC,cAAgB,CAAC,IACvDhC,GAAgBnB,CAC/B,CACF,CAEA,SAASoD,EAAgB1L,EAAOgL,GAC9B,MAAMW,EAAS3L,EAAM2L,OACrB,OAAO/E,OAAOC,KAAK8E,GAAQC,QAAO1E,GAAOyE,EAAOzE,GAAK8D,OAASA,IAAMa,OACtE,CA4BA,SAASC,EAAYhC,EAAMpI,GAEzB,MAAM+H,EAAeK,EAAKY,WAAWvB,MAC/B6B,EAAOlB,EAAKQ,QAAUR,EAAKQ,OAAOU,KACxC,GAAKA,EAAL,CAIAtJ,EAAQA,GAASoI,EAAKiC,QACtB,IAAK,MAAMpB,KAAUjJ,EAAO,CAC1B,MAAMuI,EAASU,EAAOE,QACtB,IAAKZ,QAA2BnK,IAAjBmK,EAAOe,SAAsDlL,IAA/BmK,EAAOe,GAAMvB,GACxD,cAEKQ,EAAOe,GAAMvB,QACe3J,IAA/BmK,EAAOe,GAAMS,oBAA4E3L,IAA7CmK,EAAOe,GAAMS,cAAchC,WAClEQ,EAAOe,GAAMS,cAAchC,EAEtC,EACF,CAEA,MAAMuC,EAAsBxC,GAAkB,UAATA,GAA6B,SAATA,EACnDyC,EAAmBA,CAACC,EAAQC,IAAWA,EAASD,EAAStF,OAAOe,OAAO,CAAC,EAAGuE,GAIlE,MAAME,EAqBnB7M,WAAAA,CAAYS,EAAOyJ,GACjBjK,KAAKQ,MAAQA,EACbR,KAAK6M,KAAOrM,EAAMsM,IAClB9M,KAAK2J,MAAQM,EACbjK,KAAK+M,gBAAkB,CAAC,EACxB/M,KAAKoL,YAAcpL,KAAKgN,UACxBhN,KAAKiN,MAAQjN,KAAKoL,YAAYzK,KAC9BX,KAAKiI,aAAU3H,EAEfN,KAAKkN,UAAW,EAChBlN,KAAKmN,WAAQ7M,EACbN,KAAKoN,iBAAc9M,EACnBN,KAAKqN,oBAAiB/M,EACtBN,KAAKsN,gBAAahN,EAClBN,KAAKuN,gBAAajN,EAClBN,KAAKwN,qBAAsB,EAC3BxN,KAAKyN,oBAAqB,EAC1BzN,KAAK0N,cAAWpN,EAChBN,KAAK2N,UAAY,GACjB3N,KAAK4N,8BAAgCA,mBACrC5N,KAAK6N,2BAA6BA,gBAElC7N,KAAK8N,YACP,CAEAA,UAAAA,GACE,MAAMxD,EAAOtK,KAAKoL,YAClBpL,KAAKiH,YACLjH,KAAK+N,aACLzD,EAAK0D,SAAW3D,EAAUC,EAAKQ,OAAQR,GACvCtK,KAAKiO,cAEDjO,KAAKiI,QAAQiG,OAASlO,KAAKQ,MAAM2N,gBAAgB,WACnDC,QAAQC,KAAK,qKAEjB,CAEAC,WAAAA,CAAYrE,GACNjK,KAAK2J,QAAUM,GACjBqC,EAAYtM,KAAKoL,aAEnBpL,KAAK2J,MAAQM,CACf,CAEA8D,UAAAA,GACE,MAAMvN,EAAQR,KAAKQ,MACb8J,EAAOtK,KAAKoL,YACZmD,EAAUvO,KAAKwO,aAEfC,EAAWA,CAACjD,EAAMkD,EAAGC,EAAGC,IAAe,MAATpD,EAAekD,EAAa,MAATlD,EAAeoD,EAAID,EAEpEE,EAAMvE,EAAKwE,SAAUC,EAAAA,EAAAA,GAAeR,EAAQO,QAAS5C,EAAgB1L,EAAO,MAC5EwO,EAAM1E,EAAK2E,SAAUF,EAAAA,EAAAA,GAAeR,EAAQU,QAAS/C,EAAgB1L,EAAO,MAC5E0O,EAAM5E,EAAK6E,SAAUJ,EAAAA,EAAAA,GAAeR,EAAQY,QAASjD,EAAgB1L,EAAO,MAC5E4O,EAAY9E,EAAK8E,UACjBC,EAAM/E,EAAKgF,QAAUb,EAASW,EAAWP,EAAKG,EAAKE,GACnDK,EAAMjF,EAAKkF,QAAUf,EAASW,EAAWJ,EAAKH,EAAKK,GACzD5E,EAAKmF,OAASzP,KAAK0P,cAAcb,GACjCvE,EAAKqF,OAAS3P,KAAK0P,cAAcV,GACjC1E,EAAKsF,OAAS5P,KAAK0P,cAAcR,GACjC5E,EAAKgB,OAAStL,KAAK0P,cAAcL,GACjC/E,EAAKQ,OAAS9K,KAAK0P,cAAcH,EACnC,CAEAf,UAAAA,GACE,OAAOxO,KAAKQ,MAAMqP,KAAKC,SAAS9P,KAAK2J,MACvC,CAEAqD,OAAAA,GACE,OAAOhN,KAAKQ,MAAMuP,eAAe/P,KAAK2J,MACxC,CAMA+F,aAAAA,CAAcM,GACZ,OAAOhQ,KAAKQ,MAAM2L,OAAO6D,EAC3B,CAKAC,cAAAA,CAAehH,GACb,MAAMqB,EAAOtK,KAAKoL,YAClB,OAAOnC,IAAUqB,EAAKgB,OAClBhB,EAAKQ,OACLR,EAAKgB,MACX,CAEA4E,KAAAA,GACElQ,KAAK2B,QAAQ,QACf,CAKAwO,QAAAA,GACE,MAAM7F,EAAOtK,KAAKoL,YACdpL,KAAKmN,QACPiD,EAAAA,EAAAA,GAAoBpQ,KAAKmN,MAAOnN,MAE9BsK,EAAK0D,UACP1B,EAAYhC,EAEhB,CAKA+F,UAAAA,GACE,MAAM9B,EAAUvO,KAAKwO,aACfqB,EAAOtB,EAAQsB,OAAStB,EAAQsB,KAAO,IACvC1C,EAAQnN,KAAKmN,MAMnB,IAAIjG,EAAAA,EAAAA,GAAS2I,GAAO,CAClB,MAAMvF,EAAOtK,KAAKoL,YAClBpL,KAAKmN,MAlRX,SAAkC0C,EAAMvF,GACtC,MAAM,OAACgB,EAAA,OAAQR,GAAUR,EACnBgG,EAA2B,MAAhBhF,EAAOE,KAAe,IAAM,IACvC+E,EAA2B,MAAhBzF,EAAOU,KAAe,IAAM,IACvCnE,EAAOD,OAAOC,KAAKwI,GACnBW,EAAQ,IAAIC,MAAMpJ,EAAKxF,QAC7B,IAAIO,EAAGsH,EAAMhC,EACb,IAAKtF,EAAI,EAAGsH,EAAOrC,EAAKxF,OAAQO,EAAIsH,IAAQtH,EAC1CsF,EAAML,EAAKjF,GACXoO,EAAMpO,GAAK,CACT,CAACkO,GAAW5I,EACZ,CAAC6I,GAAWV,EAAKnI,IAGrB,OAAO8I,CACT,CAmQmBE,CAAyBb,EAAMvF,QACvC,GAAI6C,IAAU0C,EAAM,CACzB,GAAI1C,EAAO,EAETiD,EAAAA,EAAAA,GAAoBjD,EAAOnN,MAE3B,MAAMsK,EAAOtK,KAAKoL,YAClBkB,EAAYhC,GACZA,EAAKiC,QAAU,GAEbsD,GAAQzI,OAAOuJ,aAAad,KAC9Be,EAAAA,EAAAA,GAAkBf,EAAM7P,MAE1BA,KAAK2N,UAAY,GACjB3N,KAAKmN,MAAQ0C,EAEjB,CAEA5B,WAAAA,GACE,MAAM3D,EAAOtK,KAAKoL,YAElBpL,KAAKqQ,aAEDrQ,KAAK4N,qBACPtD,EAAKiE,QAAU,IAAIvO,KAAK4N,mBAE5B,CAEAiD,qBAAAA,CAAsBC,GACpB,MAAMxG,EAAOtK,KAAKoL,YACZmD,EAAUvO,KAAKwO,aACrB,IAAIuC,GAAe,EAEnB/Q,KAAKqQ,aAGL,MAAMW,EAAa1G,EAAK0D,SACxB1D,EAAK0D,SAAW3D,EAAUC,EAAKQ,OAAQR,GAGnCA,EAAKT,QAAU0E,EAAQ1E,QACzBkH,GAAe,EAEfzE,EAAYhC,GACZA,EAAKT,MAAQ0E,EAAQ1E,OAKvB7J,KAAKiR,gBAAgBH,IAGjBC,GAAgBC,IAAe1G,EAAK0D,WACtC/C,EAAajL,KAAMsK,EAAKiC,QAE5B,CAMAtF,SAAAA,GACE,MAAMH,EAAS9G,KAAKQ,MAAMsG,OACpBoK,EAAYpK,EAAOqK,iBAAiBnR,KAAKiN,OACzCmE,EAAStK,EAAOuK,gBAAgBrR,KAAKwO,aAAc0C,GAAW,GACpElR,KAAKiI,QAAUnB,EAAOwK,eAAeF,EAAQpR,KAAKuR,cAClDvR,KAAKkN,SAAWlN,KAAKiI,QAAQuJ,QAC7BxR,KAAK+M,gBAAkB,CAAC,CAC1B,CAMA0E,KAAAA,CAAMnQ,EAAOoQ,GACX,MAAOtG,YAAad,EAAM6C,MAAO0C,GAAQ7P,MACnC,OAACsL,EAAA,SAAQ0C,GAAY1D,EACrBiB,EAAQD,EAAOE,KAErB,IAEIpJ,EAAGoB,EAAK2H,EAFRwG,EAAmB,IAAVrQ,GAAeoQ,IAAU7B,EAAKhO,QAAgByI,EAAKsH,QAC5DC,EAAOvQ,EAAQ,GAAKgJ,EAAKiC,QAAQjL,EAAQ,GAG7C,IAAsB,IAAlBtB,KAAKkN,SACP5C,EAAKiC,QAAUsD,EACfvF,EAAKsH,SAAU,EACfzG,EAAS0E,MACJ,CAEH1E,GADEvD,EAAAA,EAAAA,GAAQiI,EAAKvO,IACNtB,KAAK8R,eAAexH,EAAMuF,EAAMvO,EAAOoQ,IACvCxK,EAAAA,EAAAA,GAAS2I,EAAKvO,IACdtB,KAAK+R,gBAAgBzH,EAAMuF,EAAMvO,EAAOoQ,GAExC1R,KAAKgS,mBAAmB1H,EAAMuF,EAAMvO,EAAOoQ,GAGtD,MAAMO,EAA6BA,IAAqB,OAAfzO,EAAI+H,IAAoBsG,GAAQrO,EAAI+H,GAASsG,EAAKtG,GAC3F,IAAKnJ,EAAI,EAAGA,EAAIsP,IAAStP,EACvBkI,EAAKiC,QAAQnK,EAAId,GAASkC,EAAM2H,EAAO/I,GACnCuP,IACEM,MACFN,GAAS,GAEXE,EAAOrO,GAGX8G,EAAKsH,QAAUD,EAGb3D,GACF/C,EAAajL,KAAMmL,EAEvB,CAaA6G,kBAAAA,CAAmB1H,EAAMuF,EAAMvO,EAAOoQ,GACpC,MAAM,OAACpG,EAAA,OAAQR,GAAUR,EACnBiB,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,KACf0G,EAAS5G,EAAO6G,YAChBC,EAAc9G,IAAWR,EACzBK,EAAS,IAAIsF,MAAMiB,GACzB,IAAItP,EAAGsH,EAAMC,EAEb,IAAKvH,EAAI,EAAGsH,EAAOgI,EAAOtP,EAAIsH,IAAQtH,EACpCuH,EAAQvH,EAAId,EACZ6J,EAAO/I,GAAK,CACV,CAACmJ,GAAQ6G,GAAe9G,EAAOmG,MAAMS,EAAOvI,GAAQA,GACpD,CAAC8B,GAAQX,EAAO2G,MAAM5B,EAAKlG,GAAQA,IAGvC,OAAOwB,CACT,CAaA2G,cAAAA,CAAexH,EAAMuF,EAAMvO,EAAOoQ,GAChC,MAAM,OAACjC,EAAA,OAAQE,GAAUrF,EACnBa,EAAS,IAAIsF,MAAMiB,GACzB,IAAItP,EAAGsH,EAAMC,EAAOxH,EAEpB,IAAKC,EAAI,EAAGsH,EAAOgI,EAAOtP,EAAIsH,IAAQtH,EACpCuH,EAAQvH,EAAId,EACZa,EAAO0N,EAAKlG,GACZwB,EAAO/I,GAAK,CACVsM,EAAGe,EAAOgC,MAAMtP,EAAK,GAAIwH,GACzBgF,EAAGgB,EAAO8B,MAAMtP,EAAK,GAAIwH,IAG7B,OAAOwB,CACT,CAaA4G,eAAAA,CAAgBzH,EAAMuF,EAAMvO,EAAOoQ,GACjC,MAAM,OAACjC,EAAA,OAAQE,GAAUrF,GACnB,SAAC+H,EAAW,aAAKC,EAAW,KAAOtS,KAAKkN,SACxC/B,EAAS,IAAIsF,MAAMiB,GACzB,IAAItP,EAAGsH,EAAMC,EAAOxH,EAEpB,IAAKC,EAAI,EAAGsH,EAAOgI,EAAOtP,EAAIsH,IAAQtH,EACpCuH,EAAQvH,EAAId,EACZa,EAAO0N,EAAKlG,GACZwB,EAAO/I,GAAK,CACVsM,EAAGe,EAAOgC,OAAMc,EAAAA,EAAAA,GAAiBpQ,EAAMkQ,GAAW1I,GAClDgF,EAAGgB,EAAO8B,OAAMc,EAAAA,EAAAA,GAAiBpQ,EAAMmQ,GAAW3I,IAGtD,OAAOwB,CACT,CAKAqH,SAAAA,CAAU7I,GACR,OAAO3J,KAAKoL,YAAYmB,QAAQ5C,EAClC,CAKA8I,cAAAA,CAAe9I,GACb,OAAO3J,KAAKoL,YAAYyE,KAAKlG,EAC/B,CAKAC,UAAAA,CAAWX,EAAOkC,EAAQnB,GACxB,MAAMxJ,EAAQR,KAAKQ,MACb8J,EAAOtK,KAAKoL,YACZtC,EAAQqC,EAAOlC,EAAMuC,MAK3B,OAAO5B,EAJO,CACZvC,KAAMiC,EAAwB9I,GAAO,GACrCuH,OAAQoD,EAAOE,QAAQpC,EAAMuC,MAAMS,eAEZnD,EAAOwB,EAAKX,MAAO,CAACK,QAC/C,CAKA0I,qBAAAA,CAAsBC,EAAO1J,EAAOkC,EAAQtB,GAC1C,MAAM+I,EAAczH,EAAOlC,EAAMuC,MACjC,IAAI1C,EAAwB,OAAhB8J,EAAuBC,IAAMD,EACzC,MAAM7K,EAAS8B,GAASsB,EAAOE,QAAQpC,EAAMuC,MACzC3B,GAAS9B,IACX8B,EAAM9B,OAASA,EACfe,EAAQc,EAAWC,EAAO+I,EAAa5S,KAAKoL,YAAYzB,QAE1DgJ,EAAMtR,IAAMD,KAAKC,IAAIsR,EAAMtR,IAAKyH,GAChC6J,EAAMlP,IAAMrC,KAAKqC,IAAIkP,EAAMlP,IAAKqF,EAClC,CAKAgK,SAAAA,CAAU7J,EAAO8J,GACf,MAAMzI,EAAOtK,KAAKoL,YACZmB,EAAUjC,EAAKiC,QACfoF,EAASrH,EAAKsH,SAAW3I,IAAUqB,EAAKgB,OACxC5B,EAAO6C,EAAQ1K,OACfmR,EAAahT,KAAKiQ,eAAehH,GACjCY,EA5YUoJ,EAACF,EAAUzI,EAAM9J,IAAUuS,IAAazI,EAAK4I,QAAU5I,EAAK0D,UAC3E,CAAC3G,KAAMiC,EAAwB9I,GAAO,GAAOuH,OAAQ,MA2YxCkL,CAAYF,EAAUzI,EAAMtK,KAAKQ,OACzCmS,EAAQ,CAACtR,IAAK8R,OAAOC,kBAAmB3P,IAAK0P,OAAOE,oBACnDhS,IAAKiS,EAAU7P,IAAK8P,GArf/B,SAAuBtK,GACrB,MAAM,IAAC5H,EAAG,IAAEoC,EAAG,WAAE+P,EAAU,WAAEC,GAAcxK,EAAMyK,gBACjD,MAAO,CACLrS,IAAKmS,EAAanS,EAAM8R,OAAOE,kBAC/B5P,IAAKgQ,EAAahQ,EAAM0P,OAAOC,kBAEnC,CA+e2CM,CAAcV,GACrD,IAAI5Q,EAAG+I,EAEP,SAASwI,IACPxI,EAASoB,EAAQnK,GACjB,MAAM8H,EAAaiB,EAAO6H,EAAWxH,MACrC,QAAQrB,EAAAA,EAAAA,GAASgB,EAAOlC,EAAMuC,QAAU8H,EAAWpJ,GAAcqJ,EAAWrJ,CAC9E,CAEA,IAAK9H,EAAI,EAAGA,EAAIsH,IACViK,MAGJ3T,KAAK0S,sBAAsBC,EAAO1J,EAAOkC,EAAQtB,IAC7C8H,MALkBvP,GAUxB,GAAIuP,EAEF,IAAKvP,EAAIsH,EAAO,EAAGtH,GAAK,IAAKA,EAC3B,IAAIuR,IAAJ,CAGA3T,KAAK0S,sBAAsBC,EAAO1J,EAAOkC,EAAQtB,GACjD,MAGJ,OAAO8I,CACT,CAEAiB,kBAAAA,CAAmB3K,GACjB,MAAMkC,EAASnL,KAAKoL,YAAYmB,QAC1BxE,EAAS,GACf,IAAI3F,EAAGsH,EAAMZ,EAEb,IAAK1G,EAAI,EAAGsH,EAAOyB,EAAOtJ,OAAQO,EAAIsH,IAAQtH,EAC5C0G,EAAQqC,EAAO/I,GAAG6G,EAAMuC,OACpBrB,EAAAA,EAAAA,GAASrB,IACXf,EAAO5E,KAAK2F,GAGhB,OAAOf,CACT,CAMA8L,cAAAA,GACE,OAAO,CACT,CAKAC,gBAAAA,CAAiBnK,GACf,MAAMW,EAAOtK,KAAKoL,YACZE,EAAShB,EAAKgB,OACdR,EAASR,EAAKQ,OACdK,EAASnL,KAAKwS,UAAU7I,GAC9B,MAAO,CACLoK,MAAOzI,EAAS,GAAKA,EAAO0I,iBAAiB7I,EAAOG,EAAOE,OAAS,GACpE1C,MAAOgC,EAAS,GAAKA,EAAOkJ,iBAAiB7I,EAAOL,EAAOU,OAAS,GAExE,CAKA7J,OAAAA,CAAQqI,GACN,MAAMM,EAAOtK,KAAKoL,YAClBpL,KAAKmG,OAAO6D,GAAQ,WACpBM,EAAK2J,MAlpBT,SAAgBnL,GACd,IAAIoL,EAAGtF,EAAGuF,EAAGC,EAWb,OATIlN,EAAAA,EAAAA,GAAS4B,IACXoL,EAAIpL,EAAMuL,IACVzF,EAAI9F,EAAMwL,MACVH,EAAIrL,EAAMyL,OACVH,EAAItL,EAAM0L,MAEVN,EAAItF,EAAIuF,EAAIC,EAAItL,EAGX,CACLuL,IAAKH,EACLI,MAAO1F,EACP2F,OAAQJ,EACRK,KAAMJ,EACNK,UAAoB,IAAV3L,EAEd,CA+nBiB4L,EAAO3F,EAAAA,EAAAA,GAAe/O,KAAKiI,QAAQ0M,KAjqBpD,SAAqBlF,EAAQE,EAAQzG,GACnC,IAAwB,IAApBA,EACF,OAAO,EAET,MAAMwF,EAAI1F,EAAUyG,EAAQvG,GACtByF,EAAI3F,EAAU2G,EAAQzG,GAE5B,MAAO,CACLmL,IAAK1F,EAAEtF,IACPiL,MAAO5F,EAAErF,IACTkL,OAAQ5F,EAAErN,MACVkT,KAAM9F,EAAEpN,MAEZ,CAopB0DsT,CAAYtK,EAAKmF,OAAQnF,EAAKqF,OAAQ3P,KAAK6T,mBACnG,CAKA1N,MAAAA,CAAO6D,GAAO,CAEd3H,IAAAA,GACE,MAAMyK,EAAM9M,KAAK6M,KACXrM,EAAQR,KAAKQ,MACb8J,EAAOtK,KAAKoL,YACZyJ,EAAWvK,EAAKuF,MAAQ,GACxBiF,EAAOtU,EAAMuU,UACb7O,EAAS,GACT5E,EAAQtB,KAAKsN,YAAc,EAC3BoE,EAAQ1R,KAAKuN,YAAesH,EAAShT,OAASP,EAC9C0T,EAA0BhV,KAAKiI,QAAQ+M,wBAC7C,IAAI5S,EAMJ,IAJIkI,EAAKiE,SACPjE,EAAKiE,QAAQlM,KAAKyK,EAAKgI,EAAMxT,EAAOoQ,GAGjCtP,EAAId,EAAOc,EAAId,EAAQoQ,IAAStP,EAAG,CACtC,MAAM6S,EAAUJ,EAASzS,GACrB6S,EAAQ/B,SAGR+B,EAAQ/O,QAAU8O,EACpB9O,EAAO/C,KAAK8R,GAEZA,EAAQ5S,KAAKyK,EAAKgI,GAEtB,CAEA,IAAK1S,EAAI,EAAGA,EAAI8D,EAAOrE,SAAUO,EAC/B8D,EAAO9D,GAAGC,KAAKyK,EAAKgI,EAExB,CASAI,QAAAA,CAASvL,EAAOzD,GACd,MAAM8D,EAAO9D,EAAS,SAAW,UACjC,YAAiB5F,IAAVqJ,GAAuB3J,KAAKoL,YAAYmD,QAC3CvO,KAAKmV,6BAA6BnL,GAClChK,KAAKoV,0BAA0BzL,GAAS,EAAGK,EACjD,CAKAuH,UAAAA,CAAW5H,EAAOzD,EAAQ8D,GACxB,MAAMuE,EAAUvO,KAAKwO,aACrB,IAAI6G,EACJ,GAAI1L,GAAS,GAAKA,EAAQ3J,KAAKoL,YAAYyE,KAAKhO,OAAQ,CACtD,MAAMoT,EAAUjV,KAAKoL,YAAYyE,KAAKlG,GACtC0L,EAAUJ,EAAQvH,WACfuH,EAAQvH,SA5jBjB,SAA2B4H,EAAQ3L,EAAOsL,GACxC,OAAOM,EAAAA,EAAAA,GAAcD,EAAQ,CAC3BpP,QAAQ,EACRsP,UAAW7L,EACXwB,YAAQ7K,EACRmV,SAAKnV,EACL2U,UACAtL,QACAK,KAAM,UACNrJ,KAAM,QAEV,CAijB4B+U,CAAkB1V,KAAKuR,aAAc5H,EAAOsL,IAClEI,EAAQlK,OAASnL,KAAKwS,UAAU7I,GAChC0L,EAAQI,IAAMlH,EAAQsB,KAAKlG,GAC3B0L,EAAQ1L,MAAQ0L,EAAQG,UAAY7L,OAEpC0L,EAAUrV,KAAK0N,WACZ1N,KAAK0N,SA/kBd,SAA8B4H,EAAQ3L,GACpC,OAAO4L,EAAAA,EAAAA,GAAcD,EACnB,CACEpP,QAAQ,EACRqI,aAASjO,EACT2J,aAAcN,EACdA,QACAK,KAAM,UACNrJ,KAAM,WAGZ,CAokByBgV,CAAqB3V,KAAKQ,MAAM+Q,aAAcvR,KAAK2J,QACtE0L,EAAQ9G,QAAUA,EAClB8G,EAAQ1L,MAAQ0L,EAAQpL,aAAejK,KAAK2J,MAK9C,OAFA0L,EAAQnP,SAAWA,EACnBmP,EAAQrL,KAAOA,EACRqL,CACT,CAMAF,4BAAAA,CAA6BnL,GAC3B,OAAOhK,KAAK4V,uBAAuB5V,KAAK4N,mBAAmB/B,GAAI7B,EACjE,CAOAoL,yBAAAA,CAA0BzL,EAAOK,GAC/B,OAAOhK,KAAK4V,uBAAuB5V,KAAK6N,gBAAgBhC,GAAI7B,EAAML,EACpE,CAKAiM,sBAAAA,CAAuBC,GAAsC,IAAzB7L,EAAApI,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,GAAAA,UAAA,GAAO,UAAW+H,EAAK/H,UAAAC,OAAA,EAAAD,UAAA,QAAAtB,EACzD,MAAM4F,EAAkB,WAAT8D,EACT8L,EAAQ9V,KAAK+M,gBACbgJ,EAAWF,EAAc,IAAM7L,EAC/B0C,EAASoJ,EAAMC,GACfC,EAAUhW,KAAKwN,sBAAuByI,EAAAA,EAAAA,GAAQtM,GACpD,GAAI+C,EACF,OAAOD,EAAiBC,EAAQsJ,GAElC,MAAMlP,EAAS9G,KAAKQ,MAAMsG,OACpBoK,EAAYpK,EAAOoP,wBAAwBlW,KAAKiN,MAAO4I,GACvDM,EAAWjQ,EAAS,IAAA0F,OAAIiK,EAAY,SAAQ,QAASA,EAAa,IAAM,CAACA,EAAa,IACtFzE,EAAStK,EAAOuK,gBAAgBrR,KAAKwO,aAAc0C,GACnDkF,EAAQhP,OAAOC,KAAKC,EAAAA,EAASuN,SAASgB,IAItC9N,EAASjB,EAAOuP,oBAAoBjF,EAAQgF,GADlCf,IAAMrV,KAAKuR,WAAW5H,EAAOzD,EAAQ8D,IACamM,GAalE,OAXIpO,EAAOG,UAGTH,EAAOG,QAAU8N,EAKjBF,EAAMC,GAAY3O,OAAOkP,OAAO7J,EAAiB1E,EAAQiO,KAGpDjO,CACT,CAMAwO,kBAAAA,CAAmB5M,EAAO6M,EAAYtQ,GACpC,MAAM1F,EAAQR,KAAKQ,MACbsV,EAAQ9V,KAAK+M,gBACbgJ,EAAW,aAAAnK,OAAa4K,GACxB9J,EAASoJ,EAAMC,GACrB,GAAIrJ,EACF,OAAOA,EAET,IAAIzE,EACJ,IAAgC,IAA5BzH,EAAMyH,QAAQV,UAAqB,CACrC,MAAMT,EAAS9G,KAAKQ,MAAMsG,OACpBoK,EAAYpK,EAAO2P,0BAA0BzW,KAAKiN,MAAOuJ,GACzDpF,EAAStK,EAAOuK,gBAAgBrR,KAAKwO,aAAc0C,GACzDjJ,EAAUnB,EAAOwK,eAAeF,EAAQpR,KAAKuR,WAAW5H,EAAOzD,EAAQsQ,IAEzE,MAAMlO,EAAa,IAAIzB,EAAWrG,EAAOyH,GAAWA,EAAQK,YAI5D,OAHIL,GAAWA,EAAQyO,aACrBZ,EAAMC,GAAY3O,OAAOkP,OAAOhO,IAE3BA,CACT,CAMAqO,gBAAAA,CAAiB1O,GACf,GAAKA,EAAQC,QAGb,OAAOlI,KAAKqN,iBAAmBrN,KAAKqN,eAAiBjG,OAAOe,OAAO,CAAC,EAAGF,GACzE,CAMA2O,cAAAA,CAAe5M,EAAM6M,GACnB,OAAQA,GAAiBrK,EAAmBxC,IAAShK,KAAKQ,MAAMsW,mBAClE,CAKAC,iBAAAA,CAAkBzV,EAAO0I,GACvB,MAAMgN,EAAYhX,KAAKoV,0BAA0B9T,EAAO0I,GAClDiN,EAA0BjX,KAAKqN,eAC/BwJ,EAAgB7W,KAAK2W,iBAAiBK,GACtCJ,EAAiB5W,KAAK4W,eAAe5M,EAAM6M,IAAmBA,IAAkBI,EAEtF,OADAjX,KAAKkX,oBAAoBL,EAAe7M,EAAMgN,GACvC,CAACH,gBAAeD,iBACzB,CAMAO,aAAAA,CAAclC,EAAStL,EAAO9B,EAAYmC,GACpCwC,EAAmBxC,GACrB5C,OAAOe,OAAO8M,EAASpN,GAEvB7H,KAAKuW,mBAAmB5M,EAAOK,GAAM7D,OAAO8O,EAASpN,EAEzD,CAMAqP,mBAAAA,CAAoBL,EAAe7M,EAAMhC,GACnC6O,IAAkBrK,EAAmBxC,IACvChK,KAAKuW,wBAAmBjW,EAAW0J,GAAM7D,OAAO0Q,EAAe7O,EAEnE,CAKAoP,SAAAA,CAAUnC,EAAStL,EAAOK,EAAM9D,GAC9B+O,EAAQ/O,OAASA,EACjB,MAAM+B,EAAUjI,KAAKkV,SAASvL,EAAOzD,GACrClG,KAAKuW,mBAAmB5M,EAAOK,EAAM9D,GAAQC,OAAO8O,EAAS,CAG3DhN,SAAW/B,GAAUlG,KAAK2W,iBAAiB1O,IAAaA,GAE5D,CAEAoP,gBAAAA,CAAiBpC,EAAShL,EAAcN,GACtC3J,KAAKoX,UAAUnC,EAAStL,EAAO,UAAU,EAC3C,CAEA2N,aAAAA,CAAcrC,EAAShL,EAAcN,GACnC3J,KAAKoX,UAAUnC,EAAStL,EAAO,UAAU,EAC3C,CAKA4N,wBAAAA,GACE,MAAMtC,EAAUjV,KAAKoL,YAAYmD,QAE7B0G,GACFjV,KAAKoX,UAAUnC,OAAS3U,EAAW,UAAU,EAEjD,CAKAkX,qBAAAA,GACE,MAAMvC,EAAUjV,KAAKoL,YAAYmD,QAE7B0G,GACFjV,KAAKoX,UAAUnC,OAAS3U,EAAW,UAAU,EAEjD,CAKA2Q,eAAAA,CAAgBH,GACd,MAAMjB,EAAO7P,KAAKmN,MACZ0H,EAAW7U,KAAKoL,YAAYyE,KAGlC,IAAK,MAAOjJ,EAAQ6Q,EAAMC,KAAS1X,KAAK2N,UACtC3N,KAAK4G,GAAQ6Q,EAAMC,GAErB1X,KAAK2N,UAAY,GAEjB,MAAMgK,EAAU9C,EAAShT,OACnB+V,EAAU/H,EAAKhO,OACf6P,EAAQtQ,KAAKC,IAAIuW,EAASD,GAE5BjG,GAKF1R,KAAKyR,MAAM,EAAGC,GAGZkG,EAAUD,EACZ3X,KAAK6X,gBAAgBF,EAASC,EAAUD,EAAS7G,GACxC8G,EAAUD,GACnB3X,KAAK8X,gBAAgBF,EAASD,EAAUC,EAE5C,CAKAC,eAAAA,CAAgBvW,EAAOoQ,GAAgC,IAAzBZ,IAAAlP,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,KAAAA,UAAA,GAC5B,MAAM0I,EAAOtK,KAAKoL,YACZyE,EAAOvF,EAAKuF,KACZxG,EAAM/H,EAAQoQ,EACpB,IAAItP,EAEJ,MAAM2V,EAAQC,IAEZ,IADAA,EAAInW,QAAU6P,EACTtP,EAAI4V,EAAInW,OAAS,EAAGO,GAAKiH,EAAKjH,IACjC4V,EAAI5V,GAAK4V,EAAI5V,EAAIsP,EACnB,EAIF,IAFAqG,EAAKlI,GAEAzN,EAAId,EAAOc,EAAIiH,IAAOjH,EACzByN,EAAKzN,GAAK,IAAIpC,KAAK6N,gBAGjB7N,KAAKkN,UACP6K,EAAKzN,EAAKiC,SAEZvM,KAAKyR,MAAMnQ,EAAOoQ,GAEdZ,GACF9Q,KAAKiY,eAAepI,EAAMvO,EAAOoQ,EAAO,QAE5C,CAEAuG,cAAAA,CAAehD,EAAS3T,EAAOoQ,EAAO1H,GAAO,CAK7C8N,eAAAA,CAAgBxW,EAAOoQ,GACrB,MAAMpH,EAAOtK,KAAKoL,YAClB,GAAIpL,KAAKkN,SAAU,CACjB,MAAMgL,EAAU5N,EAAKiC,QAAQ4L,OAAO7W,EAAOoQ,GACvCpH,EAAK0D,UACP1B,EAAYhC,EAAM4N,GAGtB5N,EAAKuF,KAAKsI,OAAO7W,EAAOoQ,EAC1B,CAKA0G,KAAAA,CAAMC,GACJ,GAAIrY,KAAKkN,SACPlN,KAAK2N,UAAUxK,KAAKkV,OACf,CACL,MAAOzR,EAAQ6Q,EAAMC,GAAQW,EAC7BrY,KAAK4G,GAAQ6Q,EAAMC,GAErB1X,KAAKQ,MAAM8X,aAAanV,KAAK,CAACnD,KAAK2J,SAAU0O,GAC/C,CAEAE,WAAAA,GACE,MAAM7G,EAAQ9P,UAAUC,OACxB7B,KAAKoY,MAAM,CAAC,kBAAmBpY,KAAKwO,aAAaqB,KAAKhO,OAAS6P,EAAOA,GACxE,CAEA8G,UAAAA,GACExY,KAAKoY,MAAM,CAAC,kBAAmBpY,KAAKoL,YAAYyE,KAAKhO,OAAS,EAAG,GACnE,CAEA4W,YAAAA,GACEzY,KAAKoY,MAAM,CAAC,kBAAmB,EAAG,GACpC,CAEAM,aAAAA,CAAcpX,EAAOoQ,GACfA,GACF1R,KAAKoY,MAAM,CAAC,kBAAmB9W,EAAOoQ,IAExC,MAAMiH,EAAW/W,UAAUC,OAAS,EAChC8W,GACF3Y,KAAKoY,MAAM,CAAC,kBAAmB9W,EAAOqX,GAE1C,CAEAC,cAAAA,GACE5Y,KAAKoY,MAAM,CAAC,kBAAmB,EAAGxW,UAAUC,QAC9C,ECphCF,SAASgX,EAAqBvO,GAC5B,MAAMrB,EAAQqB,EAAKgB,OACbvD,EAnBR,SAA2BkB,EAAOtI,GAChC,IAAKsI,EAAM6P,OAAOC,KAAM,CACtB,MAAMC,EAAe/P,EAAM+B,wBAAwBrK,GACnD,IAAIoH,EAAS,GAEb,IAAK,IAAI3F,EAAI,EAAGsH,EAAOsP,EAAanX,OAAQO,EAAIsH,EAAMtH,IACpD2F,EAASA,EAAO6D,OAAOoN,EAAa5W,GAAG8I,WAAW0I,mBAAmB3K,IAEvEA,EAAM6P,OAAOC,MAAOE,EAAAA,EAAAA,GAAalR,EAAOmR,MAAK,CAACC,EAAGhF,IAAMgF,EAAIhF,KAE7D,OAAOlL,EAAM6P,OAAOC,IACtB,CAQiBK,CAAkBnQ,EAAOqB,EAAK3J,MAC7C,IACIyB,EAAGsH,EAAM2P,EAAMxH,EADfxQ,EAAM4H,EAAMqQ,QAEhB,MAAMC,EAAmBA,KACV,QAATF,IAA4B,QAAVA,KAIlBpD,EAAAA,EAAAA,GAAQpE,KAEVxQ,EAAMD,KAAKC,IAAIA,EAAKD,KAAKoY,IAAIH,EAAOxH,IAASxQ,IAE/CwQ,EAAOwH,EAAA,EAGT,IAAKjX,EAAI,EAAGsH,EAAO3B,EAAOlG,OAAQO,EAAIsH,IAAQtH,EAC5CiX,EAAOpQ,EAAMwQ,iBAAiB1R,EAAO3F,IACrCmX,IAIF,IADA1H,OAAOvR,EACF8B,EAAI,EAAGsH,EAAOT,EAAMyQ,MAAM7X,OAAQO,EAAIsH,IAAQtH,EACjDiX,EAAOpQ,EAAM0Q,gBAAgBvX,GAC7BmX,IAGF,OAAOlY,CACT,CA2FA,SAASuY,EAAWC,EAAO1X,EAAM2I,EAAQ1I,GAMvC,OALIwF,EAAAA,EAAAA,GAAQiS,GA5Bd,SAAuBA,EAAO1X,EAAM2I,EAAQ1I,GAC1C,MAAM0X,EAAahP,EAAO2G,MAAMoI,EAAM,GAAIzX,GACpC2X,EAAWjP,EAAO2G,MAAMoI,EAAM,GAAIzX,GAClCf,EAAMD,KAAKC,IAAIyY,EAAYC,GAC3BtW,EAAMrC,KAAKqC,IAAIqW,EAAYC,GACjC,IAAIC,EAAW3Y,EACX4Y,EAASxW,EAETrC,KAAKoY,IAAInY,GAAOD,KAAKoY,IAAI/V,KAC3BuW,EAAWvW,EACXwW,EAAS5Y,GAKXc,EAAK2I,EAAOU,MAAQyO,EAEpB9X,EAAK+X,QAAU,CACbF,WACAC,SACA3Y,MAAOwY,EACPzQ,IAAK0Q,EACL1Y,MACAoC,MAEJ,CAII0W,CAAcN,EAAO1X,EAAM2I,EAAQ1I,GAEnCD,EAAK2I,EAAOU,MAAQV,EAAO2G,MAAMoI,EAAOzX,GAEnCD,CACT,CAEA,SAASiY,EAAsB9P,EAAMuF,EAAMvO,EAAOoQ,GAChD,MAAMpG,EAAShB,EAAKgB,OACdR,EAASR,EAAKQ,OACdoH,EAAS5G,EAAO6G,YAChBC,EAAc9G,IAAWR,EACzBK,EAAS,GACf,IAAI/I,EAAGsH,EAAMvH,EAAM0X,EAEnB,IAAKzX,EAAId,EAAOoI,EAAOpI,EAAQoQ,EAAOtP,EAAIsH,IAAQtH,EAChDyX,EAAQhK,EAAKzN,GACbD,EAAO,CAAC,EACRA,EAAKmJ,EAAOE,MAAQ4G,GAAe9G,EAAOmG,MAAMS,EAAO9P,GAAIA,GAC3D+I,EAAOhI,KAAKyW,EAAWC,EAAO1X,EAAM2I,EAAQ1I,IAE9C,OAAO+I,CACT,CAEA,SAASkP,EAAWC,GAClB,OAAOA,QAA8Bha,IAApBga,EAAON,eAA4C1Z,IAAlBga,EAAOL,MAC3D,CA8BA,SAASM,EAAiB1S,EAAYI,EAAS4B,EAAOF,GACpD,IAAI6Q,EAAOvS,EAAQwS,cACnB,MAAMhU,EAAM,CAAC,EAEb,IAAK+T,EAEH,YADA3S,EAAW4S,cAAgBhU,GAI7B,IAAa,IAAT+T,EAEF,YADA3S,EAAW4S,cAAgB,CAACpG,KAAK,EAAMC,OAAO,EAAMC,QAAQ,EAAMC,MAAM,IAI1E,MAAM,MAAClT,EAAA,IAAO+H,EAAA,QAAKD,EAAA,IAASiL,EAAA,OAAKE,GAnCnC,SAAqB1M,GACnB,IAAIuB,EAAS9H,EAAO+H,EAAKgL,EAAKE,EAiB9B,OAhBI1M,EAAW6S,YACbtR,EAAUvB,EAAW8S,KAAO9S,EAAW6G,EACvCpN,EAAQ,OACR+H,EAAM,UAEND,EAAUvB,EAAW8S,KAAO9S,EAAW8G,EACvCrN,EAAQ,SACR+H,EAAM,OAEJD,GACFiL,EAAM,MACNE,EAAS,UAETF,EAAM,QACNE,EAAS,OAEJ,CAACjT,QAAO+H,MAAKD,UAASiL,MAAKE,SACpC,CAgB6CqG,CAAY/S,GAE1C,WAAT2S,GAAqB3Q,IACvBhC,EAAWgT,oBAAqB,GAC3BhR,EAAMkC,MAAQ,KAAOpC,EACxB6Q,EAAOnG,GACGxK,EAAMmC,SAAW,KAAOrC,EAClC6Q,EAAOjG,GAEP9N,EAAIqU,EAAUvG,EAAQjT,EAAO+H,EAAKD,KAAY,EAC9CoR,EAAOnG,IAIX5N,EAAIqU,EAAUN,EAAMlZ,EAAO+H,EAAKD,KAAY,EAC5CvB,EAAW4S,cAAgBhU,CAC7B,CAEA,SAASqU,EAAUN,EAAMrB,EAAGhF,EAAG/K,GAU/B,IAAc2R,EAAMC,EAAIC,EAHtB,OANI7R,GASkB6R,EARC9G,EACrBqG,EAAOU,EADPV,GAQUO,EAREP,MAQIQ,EARE7B,GASC8B,EAAKF,IAASE,EAAKD,EAAKD,EARrB5G,EAAGgF,IAEzBqB,EAAOU,EAASV,EAAMrB,EAAGhF,GAEpBqG,CACT,CAMA,SAASU,EAASC,EAAG7Z,EAAO+H,GAC1B,MAAa,UAAN8R,EAAgB7Z,EAAc,QAAN6Z,EAAc9R,EAAM8R,CACrD,CAEA,SAASC,EAAiBvT,EAAUwT,EAAmBC,GAAO,IAAxB,cAACC,GAAcF,EACnDxT,EAAW0T,cAAkC,SAAlBA,EACb,IAAVD,EAAc,IAAO,EACrBC,CACN,ED6yBAC,EAAAA,EAAAA,GA10BqB5O,EAAA,WAKD,CAAC,IAAE4O,EAAAA,EAAAA,GALF5O,EAAA,qBAUS,OAAI4O,EAAAA,EAAAA,GAVb5O,EAAA,kBAeM,MCgBZ,MAAM6O,UAAsB7O,EAgDzCoF,kBAAAA,CAAmB1H,EAAMuF,EAAMvO,EAAOoQ,GACpC,OAAO0I,EAAsB9P,EAAMuF,EAAMvO,EAAOoQ,EAClD,CAOAI,cAAAA,CAAexH,EAAMuF,EAAMvO,EAAOoQ,GAChC,OAAO0I,EAAsB9P,EAAMuF,EAAMvO,EAAOoQ,EAClD,CAOAK,eAAAA,CAAgBzH,EAAMuF,EAAMvO,EAAOoQ,GACjC,MAAM,OAACpG,EAAA,OAAQR,GAAUR,GACnB,SAAC+H,EAAW,aAAKC,EAAW,KAAOtS,KAAKkN,SACxCoD,EAA2B,MAAhBhF,EAAOE,KAAe6G,EAAWC,EAC5C/B,EAA2B,MAAhBzF,EAAOU,KAAe6G,EAAWC,EAC5CnH,EAAS,GACf,IAAI/I,EAAGsH,EAAMvH,EAAMuZ,EACnB,IAAKtZ,EAAId,EAAOoI,EAAOpI,EAAQoQ,EAAOtP,EAAIsH,IAAQtH,EAChDsZ,EAAM7L,EAAKzN,GACXD,EAAO,CAAC,EACRA,EAAKmJ,EAAOE,MAAQF,EAAOmG,OAAMc,EAAAA,EAAAA,GAAiBmJ,EAAKpL,GAAWlO,GAClE+I,EAAOhI,KAAKyW,GAAWrH,EAAAA,EAAAA,GAAiBmJ,EAAKnL,GAAWpO,EAAM2I,EAAQ1I,IAExE,OAAO+I,CACT,CAKAuH,qBAAAA,CAAsBC,EAAO1J,EAAOkC,EAAQtB,GAC1C8R,MAAMjJ,sBAAsBC,EAAO1J,EAAOkC,EAAQtB,GAClD,MAAMyQ,EAASnP,EAAO+O,QAClBI,GAAUrR,IAAUjJ,KAAKoL,YAAYN,SAEvC6H,EAAMtR,IAAMD,KAAKC,IAAIsR,EAAMtR,IAAKiZ,EAAOjZ,KACvCsR,EAAMlP,IAAMrC,KAAKqC,IAAIkP,EAAMlP,IAAK6W,EAAO7W,KAE3C,CAMAoQ,cAAAA,GACE,OAAO,CACT,CAKAC,gBAAAA,CAAiBnK,GACf,MAAMW,EAAOtK,KAAKoL,aACZ,OAACE,EAAA,OAAQR,GAAUR,EACnBa,EAASnL,KAAKwS,UAAU7I,GACxB2Q,EAASnP,EAAO+O,QAChBpR,EAAQuR,EAAWC,GACrB,IAAMA,EAAOhZ,MAAQ,KAAOgZ,EAAOjR,IAAM,IACzC,GAAKyB,EAAOkJ,iBAAiB7I,EAAOL,EAAOU,OAE/C,MAAO,CACLuI,MAAO,GAAKzI,EAAO0I,iBAAiB7I,EAAOG,EAAOE,OAClD1C,QAEJ,CAEAgF,UAAAA,GACE9N,KAAKwN,qBAAsB,EAE3BmO,MAAM7N,aAEO9N,KAAKoL,YACbvB,MAAQ7J,KAAKwO,aAAa3E,KACjC,CAEA1D,MAAAA,CAAO6D,GACL,MAAMM,EAAOtK,KAAKoL,YAClBpL,KAAKiY,eAAe3N,EAAKuF,KAAM,EAAGvF,EAAKuF,KAAKhO,OAAQmI,EACtD,CAEAiO,cAAAA,CAAe2D,EAAMta,EAAOoQ,EAAO1H,GACjC,MAAMkG,EAAiB,UAATlG,GACR,MAACL,EAAOyB,aAAa,OAACN,IAAW9K,KACjC2a,EAAO7P,EAAO+Q,eACdnB,EAAa5P,EAAOgR,eACpBC,EAAQ/b,KAAKgc,aACb,cAACnF,EAAa,eAAED,GAAkB5W,KAAK+W,kBAAkBzV,EAAO0I,GAEtE,IAAK,IAAI5H,EAAId,EAAOc,EAAId,EAAQoQ,EAAOtP,IAAK,CAC1C,MAAM+I,EAASnL,KAAKwS,UAAUpQ,GACxB6Z,EAAU/L,IAASgM,EAAAA,EAAAA,GAAc/Q,EAAOL,EAAOU,OAAS,CAACmP,OAAMwB,KAAMxB,GAAQ3a,KAAKoc,yBAAyBha,GAC3Gia,EAAUrc,KAAKsc,yBAAyBla,EAAG2Z,GAC3ClS,GAASsB,EAAOE,SAAW,CAAC,GAAGP,EAAOU,MAEtC3D,EAAa,CACjB6S,aACAC,KAAMsB,EAAQtB,KACdE,oBAAqBhR,GAASwQ,EAAWlP,EAAO+O,UAAavQ,IAAUE,EAAMkC,MAAQpC,IAAUE,EAAMmC,QACrG0C,EAAGgM,EAAauB,EAAQE,KAAOE,EAAQE,OACvC5N,EAAG+L,EAAa2B,EAAQE,OAASN,EAAQE,KACzCK,OAAQ9B,EAAa2B,EAAQtT,KAAO3H,KAAKoY,IAAIyC,EAAQlT,MACrD0T,MAAO/B,EAAatZ,KAAKoY,IAAIyC,EAAQlT,MAAQsT,EAAQtT,MAGnD6N,IACF/O,EAAWI,QAAU4O,GAAiB7W,KAAKoV,0BAA0BhT,EAAGwZ,EAAKxZ,GAAG8D,OAAS,SAAW8D,IAEtG,MAAM/B,EAAUJ,EAAWI,SAAW2T,EAAKxZ,GAAG6F,QAC9CsS,EAAiB1S,EAAYI,EAAS4B,EAAOF,GAC7CyR,EAAiBvT,EAAYI,EAAS8T,EAAMT,OAC5Ctb,KAAKmX,cAAcyE,EAAKxZ,GAAIA,EAAGyF,EAAYmC,EAC7C,CACF,CASA0S,UAAAA,CAAWC,EAAMnH,GACf,MAAM,OAAClK,GAAUtL,KAAKoL,YAChB5B,EAAW8B,EAAON,wBAAwBhL,KAAKiN,OAClDb,QAAO9B,GAAQA,EAAKY,WAAWjD,QAAQ2U,UACpCrS,EAAUe,EAAOrD,QAAQsC,QACzBE,EAAS,GAEToS,EAAYvS,IAChB,MAAMa,EAASb,EAAKY,WAAWsH,UAAUgD,GACnCsH,EAAM3R,GAAUA,EAAOb,EAAKQ,OAAOU,MAEzC,IAAI0Q,EAAAA,EAAAA,GAAcY,IAAQC,MAAMD,GAC9B,OAAO,GAIX,IAAK,MAAMxS,KAAQd,EACjB,SAAkBlJ,IAAdkV,IAA2BqH,EAASvS,QASxB,IAAZC,IAAqD,IAAhCE,EAAOuS,QAAQ1S,EAAKT,aAClCvJ,IAAZiK,QAAwCjK,IAAfgK,EAAKT,QAC3BY,EAAOtH,KAAKmH,EAAKT,OAEfS,EAAKX,QAAUgT,GACjB,MAWJ,OAJKlS,EAAO5I,QACV4I,EAAOtH,UAAK7C,GAGPmK,CACT,CAMAwS,cAAAA,CAAetT,GACb,OAAO3J,KAAK0c,gBAAWpc,EAAWqJ,GAAO9H,MAC3C,CAUAqb,cAAAA,CAAejT,EAAckT,EAAM3H,GACjC,MAAM/K,EAASzK,KAAK0c,WAAWzS,EAAcuL,GACvC7L,OAAkBrJ,IAAV6c,EACV1S,EAAOuS,QAAQG,IACd,EAEL,OAAmB,IAAXxT,EACJc,EAAO5I,OAAS,EAChB8H,CACN,CAKAqS,SAAAA,GACE,MAAM7S,EAAOnJ,KAAKiI,QACZqC,EAAOtK,KAAKoL,YACZE,EAAShB,EAAKgB,OACd8R,EAAS,GACf,IAAIhb,EAAGsH,EAEP,IAAKtH,EAAI,EAAGsH,EAAOY,EAAKuF,KAAKhO,OAAQO,EAAIsH,IAAQtH,EAC/Cgb,EAAOja,KAAKmI,EAAOmO,iBAAiBzZ,KAAKwS,UAAUpQ,GAAGkJ,EAAOE,MAAOpJ,IAGtE,MAAMib,EAAelU,EAAKkU,aAG1B,MAAO,CACLhc,IAHUgc,GAAgBxE,EAAqBvO,GAI/C8S,SACA9b,MAAOgK,EAAOgS,YACdjU,IAAKiC,EAAOiS,UACZC,WAAYxd,KAAKid,iBACjBhU,MAAOqC,EACPsR,QAASzT,EAAKyT,QAEdtB,MAAO+B,EAAe,EAAIlU,EAAKsU,mBAAqBtU,EAAKuU,cAE7D,CAMAtB,wBAAAA,CAAyBzS,GACvB,MAAOyB,aAAa,OAACN,EAAA,SAAQkD,EAAUrE,MAAOM,GAAehC,SAAU0S,KAAMgD,EAAS,aAAEC,IAAiB5d,KACnG6d,EAAaF,GAAa,EAC1BxS,EAASnL,KAAKwS,UAAU7I,GACxB2Q,EAASnP,EAAO+O,QAChB4D,EAAWzD,EAAWC,GAC5B,IAGI6B,EAAMpT,EAHND,EAAQqC,EAAOL,EAAOU,MACtBlK,EAAQ,EACRO,EAASmM,EAAWhO,KAAK4J,WAAWkB,EAAQK,EAAQ6C,GAAYlF,EAGhEjH,IAAWiH,IACbxH,EAAQO,EAASiH,EACjBjH,EAASiH,GAGPgV,IACFhV,EAAQwR,EAAON,SACfnY,EAASyY,EAAOL,OAASK,EAAON,SAElB,IAAVlR,IAAesB,EAAAA,EAAAA,GAAKtB,MAAWsB,EAAAA,EAAAA,GAAKkQ,EAAOL,UAC7C3Y,EAAQ,GAEVA,GAASwH,GAGX,MAAMgR,GAAcoC,EAAAA,EAAAA,GAAcyB,IAAeG,EAAuBxc,EAAZqc,EAC5D,IAAIhD,EAAO7P,EAAO2O,iBAAiBK,GAWnC,GAREqC,EADEnc,KAAKQ,MAAMud,kBAAkBpU,GACxBmB,EAAO2O,iBAAiBnY,EAAQO,GAGhC8Y,EAGT5R,EAAOoT,EAAOxB,EAEVvZ,KAAKoY,IAAIzQ,GAAQ6U,EAAc,CACjC7U,EArZN,SAAiBA,EAAM+B,EAAQ+S,GAC7B,OAAa,IAAT9U,GACKqB,EAAAA,EAAAA,GAAKrB,IAEN+B,EAAOgR,eAAiB,GAAK,IAAMhR,EAAOzJ,KAAOwc,EAAa,GAAK,EAC7E,CAgZaG,CAAQjV,EAAM+B,EAAQ+S,GAAcD,EACvC9U,IAAU+U,IACZlD,GAAQ5R,EAAO,GAEjB,MAAMkV,EAAanT,EAAOoT,mBAAmB,GACvCC,EAAWrT,EAAOoT,mBAAmB,GACrC7c,EAAMD,KAAKC,IAAI4c,EAAYE,GAC3B1a,EAAMrC,KAAKqC,IAAIwa,EAAYE,GACjCxD,EAAOvZ,KAAKqC,IAAIrC,KAAKC,IAAIsZ,EAAMlX,GAAMpC,GACrC8a,EAAOxB,EAAO5R,EAEViF,IAAa8P,IAEf3S,EAAOE,QAAQP,EAAOU,MAAMS,cAAchC,GAAgBa,EAAOsT,iBAAiBjC,GAAQrR,EAAOsT,iBAAiBzD,IAItH,GAAIA,IAAS7P,EAAO2O,iBAAiBoE,GAAa,CAChD,MAAMQ,GAAWjU,EAAAA,EAAAA,GAAKrB,GAAQ+B,EAAOwT,qBAAqBT,GAAc,EACxElD,GAAQ0D,EACRtV,GAAQsV,EAGV,MAAO,CACLtV,OACA4R,OACAwB,OACAI,OAAQJ,EAAOpT,EAAO,EAE1B,CAKAuT,wBAAAA,CAAyB3S,EAAOoS,GAC9B,MAAM9S,EAAQ8S,EAAM9S,MACdhB,EAAUjI,KAAKiI,QACf4U,EAAW5U,EAAQ4U,SACnB0B,GAAkBxP,EAAAA,EAAAA,GAAe9G,EAAQsW,gBAAiBC,KAChE,IAAIjC,EAAQxT,EACZ,GAAIgT,EAAMa,QAAS,CACjB,MAAMY,EAAaX,EAAW7c,KAAKid,eAAetT,GAASoS,EAAMyB,WAC3D7K,EAAiC,SAAzB1K,EAAQoV,aAphB5B,SAAmC1T,EAAOoS,EAAO9T,EAASuV,GACxD,MAAMJ,EAASrB,EAAMqB,OACf/D,EAAO+D,EAAOzT,GACpB,IAAIkI,EAAOlI,EAAQ,EAAIyT,EAAOzT,EAAQ,GAAK,KACvC8U,EAAO9U,EAAQyT,EAAOvb,OAAS,EAAIub,EAAOzT,EAAQ,GAAK,KAC3D,MAAM+U,EAAUzW,EAAQwV,mBAEX,OAAT5L,IAGFA,EAAOwH,GAAiB,OAAToF,EAAgB1C,EAAM1S,IAAM0S,EAAMza,MAAQmd,EAAOpF,IAGrD,OAAToF,IAEFA,EAAOpF,EAAOA,EAAOxH,GAGvB,MAAMvQ,EAAQ+X,GAAQA,EAAOjY,KAAKC,IAAIwQ,EAAM4M,IAAS,EAAIC,EAGzD,MAAO,CACLC,MAHWvd,KAAKoY,IAAIiF,EAAO5M,GAAQ,EAAI6M,EAGzBlB,EACdlC,MAAOrT,EAAQyV,cACfpc,QAEJ,CA2fUsd,CAA0BjV,EAAOoS,EAAO9T,EAASuV,GAjjB3D,SAAkC7T,EAAOoS,EAAO9T,EAASuV,GACvD,MAAMqB,EAAY5W,EAAQoV,aAC1B,IAAItU,EAAMuS,EAaV,OAXIY,EAAAA,EAAAA,GAAc2C,IAChB9V,EAAOgT,EAAM1a,IAAM4G,EAAQwV,mBAC3BnC,EAAQrT,EAAQyV,gBAKhB3U,EAAO8V,EAAYrB,EACnBlC,EAAQ,GAGH,CACLqD,MAAO5V,EAAOyU,EACdlC,QACAha,MAAOya,EAAMqB,OAAOzT,GAAUZ,EAAO,EAEzC,CA8hBU+V,CAAyBnV,EAAOoS,EAAO9T,EAASuV,GAE9CuB,EAAa/e,KAAKkd,eAAeld,KAAK2J,MAAO3J,KAAKoL,YAAYvB,MAAOgT,EAAWlT,OAAQrJ,GAC9Fic,EAAS5J,EAAMrR,MAASqR,EAAMgM,MAAQI,EAAepM,EAAMgM,MAAQ,EACnE5V,EAAO3H,KAAKC,IAAIkd,EAAiB5L,EAAMgM,MAAQhM,EAAM2I,YAGrDiB,EAAStT,EAAMwQ,iBAAiBzZ,KAAKwS,UAAU7I,GAAOV,EAAMuC,MAAO7B,GACnEZ,EAAO3H,KAAKC,IAAIkd,EAAiBxC,EAAM1a,IAAM0a,EAAMT,OAGrD,MAAO,CACLX,KAAM4B,EAASxT,EAAO,EACtBoT,KAAMI,EAASxT,EAAO,EACtBwT,SACAxT,OAEJ,CAEA1G,IAAAA,GACE,MAAMiI,EAAOtK,KAAKoL,YACZN,EAASR,EAAKQ,OACdkU,EAAQ1U,EAAKuF,KACbnG,EAAOsV,EAAMnd,OACnB,IAAIO,EAAI,EAER,KAAOA,EAAIsH,IAAQtH,EACsB,OAAnCpC,KAAKwS,UAAUpQ,GAAG0I,EAAOU,OAAmBwT,EAAM5c,GAAG8Q,QACvD8L,EAAM5c,GAAGC,KAAKrC,KAAK6M,KAGzB,GAEF2O,EAAAA,EAAAA,GA9YqBC,EAAsB,KAE7B,QAAMD,EAAAA,EAAAA,GAFCC,EAAsB,WAOvB,CAChB7N,oBAAoB,EACpBC,gBAAiB,MAEjB4P,mBAAoB,GACpBC,cAAe,GACfd,SAAS,EAETtU,WAAY,CACV2W,QAAS,CACPte,KAAM,SACNkH,WAAY,CAAC,IAAK,IAAK,OAAQ,QAAS,eAG5C2T,EAAAA,EAAAA,GArBiBC,EAAsB,YA0BtB,CACjBtP,OAAQ,CACN+S,QAAS,CACPve,KAAM,WACNwe,QAAQ,EACRC,KAAM,CACJD,QAAQ,IAGZE,QAAS,CACP1e,KAAM,SACN2e,aAAa,MCnSN,MAAMC,UAAyB3S,EAiC5CkB,UAAAA,GACE9N,KAAKwN,qBAAsB,EAC3BmO,MAAM7N,YACR,CAMAkE,kBAAAA,CAAmB1H,EAAMuF,EAAMvO,EAAOoQ,GACpC,MAAMvG,EAASwQ,MAAM3J,mBAAmB1H,EAAMuF,EAAMvO,EAAOoQ,GAC3D,IAAK,IAAItP,EAAI,EAAGA,EAAI+I,EAAOtJ,OAAQO,IACjC+I,EAAO/I,GAAG8X,QAAUla,KAAKoV,0BAA0BhT,EAAId,GAAOke,OAEhE,OAAOrU,CACT,CAMA2G,cAAAA,CAAexH,EAAMuF,EAAMvO,EAAOoQ,GAChC,MAAMvG,EAASwQ,MAAM7J,eAAexH,EAAMuF,EAAMvO,EAAOoQ,GACvD,IAAK,IAAItP,EAAI,EAAGA,EAAI+I,EAAOtJ,OAAQO,IAAK,CACtC,MAAMD,EAAO0N,EAAKvO,EAAQc,GAC1B+I,EAAO/I,GAAG8X,SAAUnL,EAAAA,EAAAA,GAAe5M,EAAK,GAAInC,KAAKoV,0BAA0BhT,EAAId,GAAOke,OACxF,CACA,OAAOrU,CACT,CAMA4G,eAAAA,CAAgBzH,EAAMuF,EAAMvO,EAAOoQ,GACjC,MAAMvG,EAASwQ,MAAM5J,gBAAgBzH,EAAMuF,EAAMvO,EAAOoQ,GACxD,IAAK,IAAItP,EAAI,EAAGA,EAAI+I,EAAOtJ,OAAQO,IAAK,CACtC,MAAMD,EAAO0N,EAAKvO,EAAQc,GAC1B+I,EAAO/I,GAAG8X,SAAUnL,EAAAA,EAAAA,GAAe5M,GAAQA,EAAKyM,IAAMzM,EAAKyM,EAAG5O,KAAKoV,0BAA0BhT,EAAId,GAAOke,OAC1G,CACA,OAAOrU,CACT,CAKA0I,cAAAA,GACE,MAAMhE,EAAO7P,KAAKoL,YAAYyE,KAE9B,IAAIpM,EAAM,EACV,IAAK,IAAIrB,EAAIyN,EAAKhO,OAAS,EAAGO,GAAK,IAAKA,EACtCqB,EAAMrC,KAAKqC,IAAIA,EAAKoM,EAAKzN,GAAG2G,KAAK/I,KAAKoV,0BAA0BhT,IAAM,GAExE,OAAOqB,EAAM,GAAKA,CACpB,CAKAqQ,gBAAAA,CAAiBnK,GACf,MAAMW,EAAOtK,KAAKoL,YACZ8G,EAASlS,KAAKQ,MAAMqP,KAAKqC,QAAU,IACnC,OAACzC,EAAA,OAAQE,GAAUrF,EACnBa,EAASnL,KAAKwS,UAAU7I,GACxB+E,EAAIe,EAAOuE,iBAAiB7I,EAAOuD,GACnCC,EAAIgB,EAAOqE,iBAAiB7I,EAAOwD,GACnCC,EAAIzD,EAAO+O,QAEjB,MAAO,CACLnG,MAAO7B,EAAOvI,IAAU,GACxBb,MAAO,IAAM4F,EAAI,KAAOC,GAAKC,EAAI,KAAOA,EAAI,IAAM,IAEtD,CAEAzI,MAAAA,CAAO6D,GACL,MAAMyV,EAASzf,KAAKoL,YAAYyE,KAGhC7P,KAAKiY,eAAewH,EAAQ,EAAGA,EAAO5d,OAAQmI,EAChD,CAEAiO,cAAAA,CAAewH,EAAQne,EAAOoQ,EAAO1H,GACnC,MAAMkG,EAAiB,UAATlG,GACR,OAACsB,EAAA,OAAQR,GAAU9K,KAAKoL,aACxB,cAACyL,EAAa,eAAED,GAAkB5W,KAAK+W,kBAAkBzV,EAAO0I,GAChEuB,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,KAErB,IAAK,IAAIpJ,EAAId,EAAOc,EAAId,EAAQoQ,EAAOtP,IAAK,CAC1C,MAAMsd,EAAQD,EAAOrd,GACf+I,GAAU+E,GAASlQ,KAAKwS,UAAUpQ,GAClCyF,EAAa,CAAC,EACd8X,EAAS9X,EAAW0D,GAAS2E,EAAQ5E,EAAO4S,mBAAmB,IAAO5S,EAAOmO,iBAAiBtO,EAAOI,IACrGqU,EAAS/X,EAAW4D,GAASyE,EAAQpF,EAAO+Q,eAAiB/Q,EAAO2O,iBAAiBtO,EAAOM,IAElG5D,EAAWgY,KAAO9C,MAAM4C,IAAW5C,MAAM6C,GAErChJ,IACF/O,EAAWI,QAAU4O,GAAiB7W,KAAKoV,0BAA0BhT,EAAGsd,EAAMxZ,OAAS,SAAW8D,GAE9FkG,IACFrI,EAAWI,QAAQuX,OAAS,IAIhCxf,KAAKmX,cAAcuI,EAAOtd,EAAGyF,EAAYmC,EAC3C,CACF,CAOAoL,yBAAAA,CAA0BzL,EAAOK,GAC/B,MAAMmB,EAASnL,KAAKwS,UAAU7I,GAC9B,IAAI5B,EAAS4T,MAAMvG,0BAA0BzL,EAAOK,GAGhDjC,EAAOG,UACTH,EAASX,OAAOe,OAAO,CAAC,EAAGJ,EAAQ,CAACG,SAAS,KAI/C,MAAMsX,EAASzX,EAAOyX,OAMtB,MALa,WAATxV,IACFjC,EAAOyX,OAAS,GAElBzX,EAAOyX,SAAUzQ,EAAAA,EAAAA,GAAe5D,GAAUA,EAAO+O,QAASsF,GAEnDzX,CACT,GACFyT,EAAAA,EAAAA,GArKqB+D,EAAyB,KAEhC,WAAS/D,EAAAA,EAAAA,GAFF+D,EAAyB,WAO1B,CAChB3R,oBAAoB,EACpBC,gBAAiB,QAEjBvF,WAAY,CACV2W,QAAS,CACPte,KAAM,SACNkH,WAAY,CAAC,IAAK,IAAK,cAAe,eAG1C2T,EAAAA,EAAAA,GAjBiB+D,EAAyB,YAsBzB,CACjBpT,OAAQ,CACNuC,EAAG,CACD/N,KAAM,UAERgO,EAAG,CACDhO,KAAM,aCKC,MAAMmf,UAA2BlT,EA0F9C7M,WAAAA,CAAYS,EAAOyJ,GACjB0R,MAAMnb,EAAOyJ,GAEbjK,KAAKwN,qBAAsB,EAC3BxN,KAAK+f,iBAAczf,EACnBN,KAAKggB,iBAAc1f,EACnBN,KAAKigB,aAAU3f,EACfN,KAAKkgB,aAAU5f,CACjB,CAEAyN,UAAAA,GAAc,CAKd0D,KAAAA,CAAMnQ,EAAOoQ,GACX,MAAM7B,EAAO7P,KAAKwO,aAAaqB,KACzBvF,EAAOtK,KAAKoL,YAElB,IAAsB,IAAlBpL,KAAKkN,SACP5C,EAAKiC,QAAUsD,MACV,CACL,IAOIzN,EAAGsH,EAPHyW,EAAU/d,IAAOyN,EAAKzN,GAE1B,IAAI8E,EAAAA,EAAAA,GAAS2I,EAAKvO,IAAS,CACzB,MAAM,IAACoG,EAAM,SAAW1H,KAAKkN,SAC7BiT,EAAU/d,KAAOmQ,EAAAA,EAAAA,GAAiB1C,EAAKzN,GAAIsF,GAI7C,IAAKtF,EAAId,EAAOoI,EAAOpI,EAAQoQ,EAAOtP,EAAIsH,IAAQtH,EAChDkI,EAAKiC,QAAQnK,GAAK+d,EAAO/d,GAG/B,CAKAge,YAAAA,GACE,OAAOC,EAAAA,EAAAA,GAAUrgB,KAAKiI,QAAQqY,SAAW,GAC3C,CAKAC,iBAAAA,GACE,OAAOF,EAAAA,EAAAA,GAAUrgB,KAAKiI,QAAQuY,cAChC,CAMAC,mBAAAA,GACE,IAAIpf,EAAMqf,EAAAA,EACNjd,GAAOid,EAAAA,EAEX,IAAK,IAAIte,EAAI,EAAGA,EAAIpC,KAAKQ,MAAMqP,KAAKC,SAASjO,SAAUO,EACrD,GAAIpC,KAAKQ,MAAMmgB,iBAAiBve,IAAMpC,KAAKQ,MAAMuP,eAAe3N,GAAGzB,OAASX,KAAKiN,MAAO,CACtF,MAAM/B,EAAalL,KAAKQ,MAAMuP,eAAe3N,GAAG8I,WAC1CoV,EAAWpV,EAAWkV,eACtBI,EAAgBtV,EAAWqV,oBAEjClf,EAAMD,KAAKC,IAAIA,EAAKif,GACpB7c,EAAMrC,KAAKqC,IAAIA,EAAK6c,EAAWE,GAInC,MAAO,CACLF,SAAUjf,EACVmf,cAAe/c,EAAMpC,EAEzB,CAKA8E,MAAAA,CAAO6D,GACL,MAAMxJ,EAAQR,KAAKQ,OACb,UAACuU,GAAavU,EACd8J,EAAOtK,KAAKoL,YACZwV,EAAOtW,EAAKuF,KACZgR,EAAU7gB,KAAK8gB,oBAAsB9gB,KAAK+gB,aAAaH,GAAQ5gB,KAAKiI,QAAQ4Y,QAC5EG,EAAU5f,KAAKqC,KAAKrC,KAAKC,IAAI0T,EAAU0H,MAAO1H,EAAUyH,QAAUqE,GAAW,EAAG,GAChFI,EAAS7f,KAAKC,KAAI6f,EAAAA,EAAAA,GAAalhB,KAAKiI,QAAQgZ,OAAQD,GAAU,GAC9DG,EAAcnhB,KAAKohB,eAAephB,KAAK2J,QAKvC,cAAC6W,EAAA,SAAeF,GAAYtgB,KAAKygB,uBACjC,OAACY,EAAA,OAAQC,EAAA,QAAQrB,EAAA,QAASC,GAjNpC,SAA2BI,EAAUE,EAAeS,GAClD,IAAII,EAAS,EACTC,EAAS,EACTrB,EAAU,EACVC,EAAU,EAEd,GAAIM,EAAgBE,EAAAA,EAAK,CACvB,MAAMa,EAAajB,EACbkB,EAAWD,EAAaf,EACxBiB,EAASrgB,KAAKsgB,IAAIH,GAClBI,EAASvgB,KAAKwgB,IAAIL,GAClBM,EAAOzgB,KAAKsgB,IAAIF,GAChBM,EAAO1gB,KAAKwgB,IAAIJ,GAChBO,EAAUA,CAACC,EAAO7I,EAAGhF,KAAM8N,EAAAA,EAAAA,GAAcD,EAAOT,EAAYC,GAAU,GAAQ,EAAIpgB,KAAKqC,IAAI0V,EAAGA,EAAI8H,EAAQ9M,EAAGA,EAAI8M,GACjHiB,EAAUA,CAACF,EAAO7I,EAAGhF,KAAM8N,EAAAA,EAAAA,GAAcD,EAAOT,EAAYC,GAAU,IAAS,EAAIpgB,KAAKC,IAAI8X,EAAGA,EAAI8H,EAAQ9M,EAAGA,EAAI8M,GAClHkB,EAAOJ,EAAQ,EAAGN,EAAQI,GAC1BO,EAAOL,EAAQM,EAAAA,EAASV,EAAQG,GAChCQ,EAAOJ,EAAQK,EAAAA,EAAId,EAAQI,GAC3BW,EAAON,EAAQK,EAAAA,EAAKF,EAAAA,EAASV,EAAQG,GAC3CT,GAAUc,EAAOG,GAAQ,EACzBhB,GAAUc,EAAOI,GAAQ,EACzBvC,IAAYkC,EAAOG,GAAQ,EAC3BpC,IAAYkC,EAAOI,GAAQ,EAE7B,MAAO,CAACnB,SAAQC,SAAQrB,UAASC,UACnC,CAwL+CuC,CAAkBnC,EAAUE,EAAeS,GAChFyB,GAAY3N,EAAU0H,MAAQoE,GAAWQ,EACzCsB,GAAa5N,EAAUyH,OAASqE,GAAWS,EAC3CsB,EAAYxhB,KAAKqC,IAAIrC,KAAKC,IAAIqhB,EAAUC,GAAa,EAAG,GACxD3C,GAAc6C,EAAAA,EAAAA,GAAY7iB,KAAKiI,QAAQuX,OAAQoD,GAE/CE,GAAgB9C,EADF5e,KAAKqC,IAAIuc,EAAciB,EAAQ,IACAjhB,KAAK+iB,gCACxD/iB,KAAKigB,QAAUA,EAAUD,EACzBhgB,KAAKkgB,QAAUA,EAAUF,EAEzB1V,EAAK0Y,MAAQhjB,KAAKijB,iBAElBjjB,KAAKggB,YAAcA,EAAc8C,EAAe9iB,KAAKkjB,qBAAqBljB,KAAK2J,OAC/E3J,KAAK+f,YAAc3e,KAAKqC,IAAIzD,KAAKggB,YAAc8C,EAAe3B,EAAa,GAE3EnhB,KAAKiY,eAAe2I,EAAM,EAAGA,EAAK/e,OAAQmI,EAC5C,CAKAmZ,cAAAA,CAAe/gB,EAAG8N,GAChB,MAAM/G,EAAOnJ,KAAKiI,QACZqC,EAAOtK,KAAKoL,YACZoV,EAAgBxgB,KAAKugB,oBAC3B,OAAIrQ,GAAU/G,EAAK5B,UAAU6b,gBAAmBpjB,KAAKQ,MAAMud,kBAAkB3b,IAA0B,OAApBkI,EAAKiC,QAAQnK,IAAekI,EAAKuF,KAAKzN,GAAG8Q,OACnH,EAEFlT,KAAKqjB,uBAAuB/Y,EAAKiC,QAAQnK,GAAKoe,EAAgBE,EAAAA,EACvE,CAEAzI,cAAAA,CAAe2I,EAAMtf,EAAOoQ,EAAO1H,GACjC,MAAMkG,EAAiB,UAATlG,EACRxJ,EAAQR,KAAKQ,MACbuU,EAAYvU,EAAMuU,UAElBuO,EADO9iB,EAAMyH,QACQV,UACrBgc,GAAWxO,EAAUP,KAAOO,EAAUT,OAAS,EAC/CkP,GAAWzO,EAAUV,IAAMU,EAAUR,QAAU,EAC/CkP,EAAevT,GAASoT,EAAcG,aACtC1D,EAAc0D,EAAe,EAAIzjB,KAAK+f,YACtCC,EAAcyD,EAAe,EAAIzjB,KAAKggB,aACtC,cAACnJ,EAAa,eAAED,GAAkB5W,KAAK+W,kBAAkBzV,EAAO0I,GACtE,IACI5H,EADAmf,EAAavhB,KAAKogB,eAGtB,IAAKhe,EAAI,EAAGA,EAAId,IAASc,EACvBmf,GAAcvhB,KAAKmjB,eAAe/gB,EAAG8N,GAGvC,IAAK9N,EAAId,EAAOc,EAAId,EAAQoQ,IAAStP,EAAG,CACtC,MAAMoe,EAAgBxgB,KAAKmjB,eAAe/gB,EAAG8N,GACvCwT,EAAM9C,EAAKxe,GACXyF,EAAa,CACjB6G,EAAG6U,EAAUvjB,KAAKigB,QAClBtR,EAAG6U,EAAUxjB,KAAKkgB,QAClBqB,aACAC,SAAUD,EAAaf,EACvBA,gBACAR,cACAD,eAEEnJ,IACF/O,EAAWI,QAAU4O,GAAiB7W,KAAKoV,0BAA0BhT,EAAGshB,EAAIxd,OAAS,SAAW8D,IAElGuX,GAAcf,EAEdxgB,KAAKmX,cAAcuM,EAAKthB,EAAGyF,EAAYmC,EACzC,CACF,CAEAiZ,cAAAA,GACE,MAAM3Y,EAAOtK,KAAKoL,YACZuY,EAAWrZ,EAAKuF,KACtB,IACIzN,EADA4gB,EAAQ,EAGZ,IAAK5gB,EAAI,EAAGA,EAAIuhB,EAAS9hB,OAAQO,IAAK,CACpC,MAAM0G,EAAQwB,EAAKiC,QAAQnK,GACb,OAAV0G,GAAmBiU,MAAMjU,KAAU9I,KAAKQ,MAAMud,kBAAkB3b,IAAOuhB,EAASvhB,GAAG8Q,SACrF8P,GAAS5hB,KAAKoY,IAAI1Q,GAEtB,CAEA,OAAOka,CACT,CAEAK,sBAAAA,CAAuBva,GACrB,MAAMka,EAAQhjB,KAAKoL,YAAY4X,MAC/B,OAAIA,EAAQ,IAAMjG,MAAMjU,GACf4X,EAAAA,GAAOtf,KAAKoY,IAAI1Q,GAASka,GAE3B,CACT,CAEAlP,gBAAAA,CAAiBnK,GACf,MAAMW,EAAOtK,KAAKoL,YACZ5K,EAAQR,KAAKQ,MACb0R,EAAS1R,EAAMqP,KAAKqC,QAAU,GAC9BpJ,GAAQ8a,EAAAA,EAAAA,GAAatZ,EAAKiC,QAAQ5C,GAAQnJ,EAAMyH,QAAQ4b,QAE9D,MAAO,CACL9P,MAAO7B,EAAOvI,IAAU,GACxBb,QAEJ,CAEAgY,iBAAAA,CAAkBF,GAChB,IAAInd,EAAM,EACV,MAAMjD,EAAQR,KAAKQ,MACnB,IAAI4B,EAAGsH,EAAMY,EAAMY,EAAYjD,EAE/B,IAAK2Y,EAEH,IAAKxe,EAAI,EAAGsH,EAAOlJ,EAAMqP,KAAKC,SAASjO,OAAQO,EAAIsH,IAAQtH,EACzD,GAAI5B,EAAMmgB,iBAAiBve,GAAI,CAC7BkI,EAAO9J,EAAMuP,eAAe3N,GAC5Bwe,EAAOtW,EAAKuF,KACZ3E,EAAaZ,EAAKY,WAClB,MAKN,IAAK0V,EACH,OAAO,EAGT,IAAKxe,EAAI,EAAGsH,EAAOkX,EAAK/e,OAAQO,EAAIsH,IAAQtH,EAC1C6F,EAAUiD,EAAWkK,0BAA0BhT,GACnB,UAAxB6F,EAAQ6b,cACVrgB,EAAMrC,KAAKqC,IAAIA,EAAKwE,EAAQ8b,aAAe,EAAG9b,EAAQ+b,kBAAoB,IAG9E,OAAOvgB,CACT,CAEAsd,YAAAA,CAAaH,GACX,IAAInd,EAAM,EAEV,IAAK,IAAIrB,EAAI,EAAGsH,EAAOkX,EAAK/e,OAAQO,EAAIsH,IAAQtH,EAAG,CACjD,MAAM6F,EAAUjI,KAAKoV,0BAA0BhT,GAC/CqB,EAAMrC,KAAKqC,IAAIA,EAAKwE,EAAQkX,QAAU,EAAGlX,EAAQgc,aAAe,EAClE,CACA,OAAOxgB,CACT,CAMAyf,oBAAAA,CAAqBjZ,GACnB,IAAIia,EAAmB,EAEvB,IAAK,IAAI9hB,EAAI,EAAGA,EAAI6H,IAAgB7H,EAC9BpC,KAAKQ,MAAMmgB,iBAAiBve,KAC9B8hB,GAAoBlkB,KAAKohB,eAAehf,IAI5C,OAAO8hB,CACT,CAKA9C,cAAAA,CAAenX,GACb,OAAO7I,KAAKqC,KAAIsL,EAAAA,EAAAA,GAAe/O,KAAKQ,MAAMqP,KAAKC,SAAS7F,GAAcka,OAAQ,GAAI,EACpF,CAMApB,6BAAAA,GACE,OAAO/iB,KAAKkjB,qBAAqBljB,KAAKQ,MAAMqP,KAAKC,SAASjO,SAAW,CACvE,GACF2Z,EAAAA,EAAAA,GAvWqBsE,EAA2B,KAElC,aAAWtE,EAAAA,EAAAA,GAFJsE,EAA2B,WAO5B,CAChBlS,oBAAoB,EACpBC,gBAAiB,MACjBtG,UAAW,CAET6b,eAAe,EAEfK,cAAc,GAEhBnb,WAAY,CACV2W,QAAS,CACPte,KAAM,SACNkH,WAAY,CAAC,gBAAiB,WAAY,cAAe,cAAe,aAAc,IAAK,IAAK,SAAU,cAAe,aAI7HoZ,OAAQ,MAGRX,SAAU,EAGVE,cAAe,IAGfhB,OAAQ,OAGRqB,QAAS,EAETzR,UAAW,OACXoM,EAAAA,EAAAA,GAtCiBsE,EAA2B,cAwCzB,CACnBsE,YAAcjH,GAAkB,YAATA,EACvBkH,WAAalH,GAAkB,YAATA,IAAuBA,EAAKmH,WAAW,gBAAkBnH,EAAKmH,WAAW,sBAC/F9I,EAAAA,EAAAA,GA3CiBsE,EAA2B,YAgD3B,CACjByE,YAAa,EAGbC,QAAS,CACPC,OAAQ,CACNvS,OAAQ,CACNwS,cAAAA,CAAelkB,GACb,MAAMqP,EAAOrP,EAAMqP,KACnB,GAAIA,EAAKqC,OAAOrQ,QAAUgO,EAAKC,SAASjO,OAAQ,CAC9C,MAAOqQ,QAAQ,WAACyS,EAAA,MAAYrgB,IAAU9D,EAAMikB,OAAOxc,QAEnD,OAAO4H,EAAKqC,OAAO0S,KAAI,CAAC7Q,EAAO3R,KAC7B,MACMyiB,EADOrkB,EAAMuP,eAAe,GACf7E,WAAWgK,SAAS9S,GAEvC,MAAO,CACL0iB,KAAM/Q,EACNgR,UAAWF,EAAMG,gBACjBC,YAAaJ,EAAMK,YACnBC,UAAW7gB,EACX8gB,UAAWP,EAAMd,YACjBY,WAAYA,EACZzR,QAAS1S,EAAMud,kBAAkB3b,GAGjCuH,MAAOvH,EACR,IAGL,MAAO,EACT,GAGFijB,OAAAA,CAAQC,EAAGC,EAAYd,GACrBA,EAAOjkB,MAAMglB,qBAAqBD,EAAW5b,OAC7C8a,EAAOjkB,MAAM2F,QACf,MCpHO,MAAMsf,UAAuB7Y,EA6B1CkB,UAAAA,GACE9N,KAAKwN,qBAAsB,EAC3BxN,KAAKyN,oBAAqB,EAC1BkO,MAAM7N,YACR,CAEA3H,MAAAA,CAAO6D,GACL,MAAMM,EAAOtK,KAAKoL,aACXmD,QAASmX,EAAM7V,KAAM4P,EAAS,GAAE,SAAEkG,GAAYrb,EAE/Csb,EAAqB5lB,KAAKQ,MAAMsW,oBACtC,IAAI,MAACxV,EAAA,MAAOoQ,IAASmU,EAAAA,EAAAA,GAAiCvb,EAAMmV,EAAQmG,GAEpE5lB,KAAKsN,WAAahM,EAClBtB,KAAKuN,WAAamE,GAEdoU,EAAAA,EAAAA,GAAoBxb,KACtBhJ,EAAQ,EACRoQ,EAAQ+N,EAAO5d,QAIjB6jB,EAAK3e,OAAS/G,KAAKQ,MACnBklB,EAAKK,cAAgB/lB,KAAK2J,MAC1B+b,EAAKM,aAAeL,EAASK,WAC7BN,EAAKjG,OAASA,EAEd,MAAMxX,EAAUjI,KAAKmV,6BAA6BnL,GAC7ChK,KAAKiI,QAAQge,WAChBhe,EAAQ8b,YAAc,GAExB9b,EAAQie,QAAUlmB,KAAKiI,QAAQie,QAC/BlmB,KAAKmX,cAAcuO,OAAMplB,EAAW,CAClC6lB,UAAWP,EACX3d,WACC+B,GAGHhK,KAAKiY,eAAewH,EAAQne,EAAOoQ,EAAO1H,EAC5C,CAEAiO,cAAAA,CAAewH,EAAQne,EAAOoQ,EAAO1H,GACnC,MAAMkG,EAAiB,UAATlG,GACR,OAACsB,EAAA,OAAQR,EAAA,SAAQkD,EAAA,SAAU2X,GAAY3lB,KAAKoL,aAC5C,cAACyL,EAAa,eAAED,GAAkB5W,KAAK+W,kBAAkBzV,EAAO0I,GAChEuB,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,MACf,SAAC4a,EAAA,QAAUF,GAAWlmB,KAAKiI,QAC3Boe,GAAeC,EAAAA,EAAAA,GAASF,GAAYA,EAAWjT,OAAOC,kBACtDmT,EAAevmB,KAAKQ,MAAMsW,qBAAuB5G,GAAkB,SAATlG,EAC1DX,EAAM/H,EAAQoQ,EACd8U,EAAc/G,EAAO5d,OAC3B,IAAI4kB,EAAanlB,EAAQ,GAAKtB,KAAKwS,UAAUlR,EAAQ,GAErD,IAAK,IAAIc,EAAI,EAAGA,EAAIokB,IAAepkB,EAAG,CACpC,MAAMsd,EAAQD,EAAOrd,GACfyF,EAAa0e,EAAe7G,EAAQ,GAE1C,GAAItd,EAAId,GAASc,GAAKiH,EAAK,CACzBxB,EAAWgY,MAAO,EAClB,SAGF,MAAM1U,EAASnL,KAAKwS,UAAUpQ,GACxBskB,GAAWxK,EAAAA,EAAAA,GAAc/Q,EAAOM,IAChCkU,EAAS9X,EAAW0D,GAASD,EAAOmO,iBAAiBtO,EAAOI,GAAQnJ,GACpEwd,EAAS/X,EAAW4D,GAASyE,GAASwW,EAAW5b,EAAO+Q,eAAiB/Q,EAAO2O,iBAAiBzL,EAAWhO,KAAK4J,WAAWkB,EAAQK,EAAQ6C,GAAY7C,EAAOM,GAAQrJ,GAE7KyF,EAAWgY,KAAO9C,MAAM4C,IAAW5C,MAAM6C,IAAW8G,EACpD7e,EAAWlE,KAAOvB,EAAI,GAAKhB,KAAMoY,IAAIrO,EAAOI,GAASkb,EAAWlb,IAAW8a,EACvEH,IACFre,EAAWsD,OAASA,EACpBtD,EAAW4N,IAAMkQ,EAAS9V,KAAKzN,IAG7BwU,IACF/O,EAAWI,QAAU4O,GAAiB7W,KAAKoV,0BAA0BhT,EAAGsd,EAAMxZ,OAAS,SAAW8D,IAG/Fuc,GACHvmB,KAAKmX,cAAcuI,EAAOtd,EAAGyF,EAAYmC,GAG3Cyc,EAAatb,CACf,CACF,CAKA0I,cAAAA,GACE,MAAMvJ,EAAOtK,KAAKoL,YACZmD,EAAUjE,EAAKiE,QACfoY,EAASpY,EAAQtG,SAAWsG,EAAQtG,QAAQ8b,aAAe,EAC3DlU,EAAOvF,EAAKuF,MAAQ,GAC1B,IAAKA,EAAKhO,OACR,OAAO8kB,EAET,MAAMC,EAAa/W,EAAK,GAAG9G,KAAK/I,KAAKoV,0BAA0B,IACzDyR,EAAYhX,EAAKA,EAAKhO,OAAS,GAAGkH,KAAK/I,KAAKoV,0BAA0BvF,EAAKhO,OAAS,IAC1F,OAAOT,KAAKqC,IAAIkjB,EAAQC,EAAYC,GAAa,CACnD,CAEAxkB,IAAAA,GACE,MAAMiI,EAAOtK,KAAKoL,YAClBd,EAAKiE,QAAQuY,oBAAoB9mB,KAAKQ,MAAMuU,UAAWzK,EAAKgB,OAAOE,MACnEmQ,MAAMtZ,MACR,GACFmZ,EAAAA,EAAAA,GAzIqBiK,EAAuB,KAE9B,SAAOjK,EAAAA,EAAAA,GAFAiK,EAAuB,WAOxB,CAChB7X,mBAAoB,OACpBC,gBAAiB,QAEjBoY,UAAU,EACVG,UAAU,KACV5K,EAAAA,EAAAA,GAbiBiK,EAAuB,YAkBvB,CACjBtZ,OAAQ,CACN+S,QAAS,CACPve,KAAM,YAER0e,QAAS,CACP1e,KAAM,aC1BC,MAAMomB,UAA4Bna,EAoF/C7M,WAAAA,CAAYS,EAAOyJ,GACjB0R,MAAMnb,EAAOyJ,GAEbjK,KAAK+f,iBAAczf,EACnBN,KAAKggB,iBAAc1f,CACrB,CAEAwT,gBAAAA,CAAiBnK,GACf,MAAMW,EAAOtK,KAAKoL,YACZ5K,EAAQR,KAAKQ,MACb0R,EAAS1R,EAAMqP,KAAKqC,QAAU,GAC9BpJ,GAAQ8a,EAAAA,EAAAA,GAAatZ,EAAKiC,QAAQ5C,GAAOiF,EAAGpO,EAAMyH,QAAQ4b,QAEhE,MAAO,CACL9P,MAAO7B,EAAOvI,IAAU,GACxBb,QAEJ,CAEAiJ,eAAAA,CAAgBzH,EAAMuF,EAAMvO,EAAOoQ,GACjC,OAAOsV,EAAAA,EAA4BC,KAAKjnB,KAAjCgnB,CAAuC1c,EAAMuF,EAAMvO,EAAOoQ,EACnE,CAEAvL,MAAAA,CAAO6D,GACL,MAAM4W,EAAO5gB,KAAKoL,YAAYyE,KAE9B7P,KAAKknB,gBACLlnB,KAAKiY,eAAe2I,EAAM,EAAGA,EAAK/e,OAAQmI,EAC5C,CAKA8I,SAAAA,GACE,MAAMxI,EAAOtK,KAAKoL,YACZuH,EAAQ,CAACtR,IAAK8R,OAAOC,kBAAmB3P,IAAK0P,OAAOE,mBAgB1D,OAdA/I,EAAKuF,KAAK7O,SAAQ,CAACiU,EAAStL,KAC1B,MAAMwB,EAASnL,KAAKwS,UAAU7I,GAAOiF,GAEhCmO,MAAM5R,IAAWnL,KAAKQ,MAAMud,kBAAkBpU,KAC7CwB,EAASwH,EAAMtR,MACjBsR,EAAMtR,IAAM8J,GAGVA,EAASwH,EAAMlP,MACjBkP,EAAMlP,IAAM0H,OAKXwH,CACT,CAKAuU,aAAAA,GACE,MAAM1mB,EAAQR,KAAKQ,MACbuU,EAAYvU,EAAMuU,UAClB5L,EAAO3I,EAAMyH,QACbkf,EAAU/lB,KAAKC,IAAI0T,EAAUT,MAAQS,EAAUP,KAAMO,EAAUR,OAASQ,EAAUV,KAElF2L,EAAc5e,KAAKqC,IAAI0jB,EAAU,EAAG,GAEpCrE,GAAgB9C,EADF5e,KAAKqC,IAAI0F,EAAKie,iBAAmBpH,EAAe,IAAQ7W,EAAKie,iBAAoB,EAAG,IACrD5mB,EAAM6mB,yBAEzDrnB,KAAKggB,YAAcA,EAAe8C,EAAe9iB,KAAK2J,MACtD3J,KAAK+f,YAAc/f,KAAKggB,YAAc8C,CACxC,CAEA7K,cAAAA,CAAe2I,EAAMtf,EAAOoQ,EAAO1H,GACjC,MAAMkG,EAAiB,UAATlG,EACRxJ,EAAQR,KAAKQ,MAEb8iB,EADO9iB,EAAMyH,QACQV,UACrB0B,EAAQjJ,KAAKoL,YAAYwE,OACzB2T,EAAUta,EAAMqe,QAChB9D,EAAUva,EAAMse,QAChBC,EAAoBve,EAAMwe,cAAc,GAAK,GAAMlF,EAAAA,EACzD,IACIngB,EADA4f,EAAQwF,EAGZ,MAAME,EAAe,IAAM1nB,KAAK2nB,uBAEhC,IAAKvlB,EAAI,EAAGA,EAAId,IAASc,EACvB4f,GAAShiB,KAAK4nB,cAAcxlB,EAAG4H,EAAM0d,GAEvC,IAAKtlB,EAAId,EAAOc,EAAId,EAAQoQ,EAAOtP,IAAK,CACtC,MAAMshB,EAAM9C,EAAKxe,GACjB,IAAImf,EAAaS,EACbR,EAAWQ,EAAQhiB,KAAK4nB,cAAcxlB,EAAG4H,EAAM0d,GAC/C1H,EAAcxf,EAAMud,kBAAkB3b,GAAK6G,EAAM4e,8BAA8B7nB,KAAKwS,UAAUpQ,GAAGwM,GAAK,EAC1GoT,EAAQR,EAEJtR,IACEoT,EAAcG,eAChBzD,EAAc,GAEZsD,EAAcF,gBAChB7B,EAAaC,EAAWgG,IAI5B,MAAM3f,EAAa,CACjB6G,EAAG6U,EACH5U,EAAG6U,EACHzD,YAAa,EACbC,cACAuB,aACAC,WACAvZ,QAASjI,KAAKoV,0BAA0BhT,EAAGshB,EAAIxd,OAAS,SAAW8D,IAGrEhK,KAAKmX,cAAcuM,EAAKthB,EAAGyF,EAAYmC,EACzC,CACF,CAEA2d,oBAAAA,GACE,MAAMrd,EAAOtK,KAAKoL,YAClB,IAAIsG,EAAQ,EAQZ,OANApH,EAAKuF,KAAK7O,SAAQ,CAACiU,EAAStL,MACrBoT,MAAM/c,KAAKwS,UAAU7I,GAAOiF,IAAM5O,KAAKQ,MAAMud,kBAAkBpU,IAClE+H,OAIGA,CACT,CAKAkW,aAAAA,CAAcje,EAAOK,EAAM0d,GACzB,OAAO1nB,KAAKQ,MAAMud,kBAAkBpU,IAChC0W,EAAAA,EAAAA,GAAUrgB,KAAKoV,0BAA0BzL,EAAOK,GAAMgY,OAAS0F,GAC/D,CACN,GACFlM,EAAAA,EAAAA,GA/NqBuL,EAA4B,KAEnC,cAAYvL,EAAAA,EAAAA,GAFLuL,EAA4B,WAO7B,CAChBlZ,gBAAiB,MACjBtG,UAAW,CACT6b,eAAe,EACfK,cAAc,GAEhBnb,WAAY,CACV2W,QAAS,CACPte,KAAM,SACNkH,WAAY,CAAC,IAAK,IAAK,aAAc,WAAY,cAAe,iBAGpEuH,UAAW,IACXmS,WAAY,KACZ/F,EAAAA,EAAAA,GArBiBuL,EAA4B,YA0B5B,CACjBxC,YAAa,EAEbC,QAAS,CACPC,OAAQ,CACNvS,OAAQ,CACNwS,cAAAA,CAAelkB,GACb,MAAMqP,EAAOrP,EAAMqP,KACnB,GAAIA,EAAKqC,OAAOrQ,QAAUgO,EAAKC,SAASjO,OAAQ,CAC9C,MAAOqQ,QAAQ,WAACyS,EAAA,MAAYrgB,IAAU9D,EAAMikB,OAAOxc,QAEnD,OAAO4H,EAAKqC,OAAO0S,KAAI,CAAC7Q,EAAO3R,KAC7B,MACMyiB,EADOrkB,EAAMuP,eAAe,GACf7E,WAAWgK,SAAS9S,GAEvC,MAAO,CACL0iB,KAAM/Q,EACNgR,UAAWF,EAAMG,gBACjBC,YAAaJ,EAAMK,YACnBC,UAAW7gB,EACX8gB,UAAWP,EAAMd,YACjBY,WAAYA,EACZzR,QAAS1S,EAAMud,kBAAkB3b,GAGjCuH,MAAOvH,EACR,IAGL,MAAO,EACT,GAGFijB,OAAAA,CAAQC,EAAGC,EAAYd,GACrBA,EAAOjkB,MAAMglB,qBAAqBD,EAAW5b,OAC7C8a,EAAOjkB,MAAM2F,QACf,IAIJgG,OAAQ,CACNyC,EAAG,CACDjO,KAAM,eACNmnB,WAAY,CACVC,SAAS,GAEXzI,aAAa,EACbF,KAAM,CACJ4I,UAAU,GAEZC,YAAa,CACXF,SAAS,GAEXxG,WAAY,MC/EL,MAAM2G,UAAsBpI,IAoB3CtE,EAAAA,EAAAA,GApBqB0M,EAAsB,KAE7B,QAAM1M,EAAAA,EAAAA,GAFC0M,EAAsB,WAOvB,CAEhBjH,OAAQ,EAGRX,SAAU,EAGVE,cAAe,IAGfhB,OAAQ,SClBG,MAAM2I,UAAwBvb,EAmC3CkH,gBAAAA,CAAiBnK,GACf,MAAMmB,EAAS9K,KAAKoL,YAAYN,OAC1BK,EAASnL,KAAKwS,UAAU7I,GAE9B,MAAO,CACLoK,MAAOjJ,EAAOqH,YAAYxI,GAC1Bb,MAAO,GAAKgC,EAAOkJ,iBAAiB7I,EAAOL,EAAOU,OAEtD,CAEAuG,eAAAA,CAAgBzH,EAAMuF,EAAMvO,EAAOoQ,GACjC,OAAOsV,EAAAA,EAA4BC,KAAKjnB,KAAjCgnB,CAAuC1c,EAAMuF,EAAMvO,EAAOoQ,EACnE,CAEAvL,MAAAA,CAAO6D,GACL,MAAMM,EAAOtK,KAAKoL,YACZsa,EAAOpb,EAAKiE,QACZkR,EAASnV,EAAKuF,MAAQ,GACtBqC,EAAS5H,EAAKgB,OAAO6G,YAK3B,GAFAuT,EAAKjG,OAASA,EAED,WAATzV,EAAmB,CACrB,MAAM/B,EAAUjI,KAAKmV,6BAA6BnL,GAC7ChK,KAAKiI,QAAQge,WAChBhe,EAAQ8b,YAAc,GAGxB,MAAMlc,EAAa,CACjBlC,OAAO,EACPyiB,UAAWlW,EAAOrQ,SAAW4d,EAAO5d,OACpCoG,WAGFjI,KAAKmX,cAAcuO,OAAMplB,EAAWuH,EAAYmC,GAIlDhK,KAAKiY,eAAewH,EAAQ,EAAGA,EAAO5d,OAAQmI,EAChD,CAEAiO,cAAAA,CAAewH,EAAQne,EAAOoQ,EAAO1H,GACnC,MAAMf,EAAQjJ,KAAKoL,YAAYwE,OACzBM,EAAiB,UAATlG,EAEd,IAAK,IAAI5H,EAAId,EAAOc,EAAId,EAAQoQ,EAAOtP,IAAK,CAC1C,MAAMsd,EAAQD,EAAOrd,GACf6F,EAAUjI,KAAKoV,0BAA0BhT,EAAGsd,EAAMxZ,OAAS,SAAW8D,GACtEqe,EAAgBpf,EAAMqf,yBAAyBlmB,EAAGpC,KAAKwS,UAAUpQ,GAAGwM,GAEpEF,EAAIwB,EAAQjH,EAAMqe,QAAUe,EAAc3Z,EAC1CC,EAAIuB,EAAQjH,EAAMse,QAAUc,EAAc1Z,EAE1C9G,EAAa,CACjB6G,IACAC,IACAqT,MAAOqG,EAAcrG,MACrBnC,KAAM9C,MAAMrO,IAAMqO,MAAMpO,GACxB1G,WAGFjI,KAAKmX,cAAcuI,EAAOtd,EAAGyF,EAAYmC,EAC3C,CACF,GACFwR,EAAAA,EAAAA,GApGqB2M,EAAwB,KAE/B,UAAQ3M,EAAAA,EAAAA,GAFD2M,EAAwB,WAOzB,CAChBva,mBAAoB,OACpBC,gBAAiB,QACjBuB,UAAW,IACX6W,UAAU,EACVpR,SAAU,CACR6Q,KAAM,CACJxX,KAAM,aAGVsN,EAAAA,EAAAA,GAjBiB2M,EAAwB,YAsBxB,CACjB5D,YAAa,EAEbpY,OAAQ,CACNyC,EAAG,CACDjO,KAAM,mBCzBC,MAAM4nB,UAA0B3b,EAoC7CkH,gBAAAA,CAAiBnK,GACf,MAAMW,EAAOtK,KAAKoL,YACZ8G,EAASlS,KAAKQ,MAAMqP,KAAKqC,QAAU,IACnC,OAACzC,EAAA,OAAQE,GAAUrF,EACnBa,EAASnL,KAAKwS,UAAU7I,GACxB+E,EAAIe,EAAOuE,iBAAiB7I,EAAOuD,GACnCC,EAAIgB,EAAOqE,iBAAiB7I,EAAOwD,GAEzC,MAAO,CACLoF,MAAO7B,EAAOvI,IAAU,GACxBb,MAAO,IAAM4F,EAAI,KAAOC,EAAI,IAEhC,CAEAxI,MAAAA,CAAO6D,GACL,MAAMM,EAAOtK,KAAKoL,aACXyE,KAAM4P,EAAS,IAAMnV,EAEtBsb,EAAqB5lB,KAAKQ,MAAMsW,oBACtC,IAAI,MAACxV,EAAA,MAAOoQ,IAASmU,EAAAA,EAAAA,GAAiCvb,EAAMmV,EAAQmG,GAUpE,GARA5lB,KAAKsN,WAAahM,EAClBtB,KAAKuN,WAAamE,GAEdoU,EAAAA,EAAAA,GAAoBxb,KACtBhJ,EAAQ,EACRoQ,EAAQ+N,EAAO5d,QAGb7B,KAAKiI,QAAQge,SAAU,CAGpBjmB,KAAK4N,oBACR5N,KAAKiO,cAEP,MAAOM,QAASmX,EAAA,SAAMC,GAAYrb,EAGlCob,EAAK3e,OAAS/G,KAAKQ,MACnBklB,EAAKK,cAAgB/lB,KAAK2J,MAC1B+b,EAAKM,aAAeL,EAASK,WAC7BN,EAAKjG,OAASA,EAEd,MAAMxX,EAAUjI,KAAKmV,6BAA6BnL,GAClD/B,EAAQie,QAAUlmB,KAAKiI,QAAQie,QAC/BlmB,KAAKmX,cAAcuO,OAAMplB,EAAW,CAClC6lB,UAAWP,EACX3d,WACC+B,EACL,MAAWhK,KAAK4N,4BAEPtD,EAAKiE,QACZvO,KAAK4N,oBAAqB,GAI5B5N,KAAKiY,eAAewH,EAAQne,EAAOoQ,EAAO1H,EAC5C,CAEAiE,WAAAA,GACE,MAAM,SAACgY,GAAYjmB,KAAKiI,SAEnBjI,KAAK4N,oBAAsBqY,IAC9BjmB,KAAK4N,mBAAqB5N,KAAKQ,MAAMgoB,SAASC,WAAW,SAG3D9M,MAAM1N,aACR,CAEAgK,cAAAA,CAAewH,EAAQne,EAAOoQ,EAAO1H,GACnC,MAAMkG,EAAiB,UAATlG,GACR,OAACsB,EAAA,OAAQR,EAAA,SAAQkD,EAAA,SAAU2X,GAAY3lB,KAAKoL,YAC5C4L,EAAYhX,KAAKoV,0BAA0B9T,EAAO0I,GAClD6M,EAAgB7W,KAAK2W,iBAAiBK,GACtCJ,EAAiB5W,KAAK4W,eAAe5M,EAAM6M,GAC3CtL,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,MACf,SAAC4a,EAAA,QAAUF,GAAWlmB,KAAKiI,QAC3Boe,GAAeC,EAAAA,EAAAA,GAASF,GAAYA,EAAWjT,OAAOC,kBACtDmT,EAAevmB,KAAKQ,MAAMsW,qBAAuB5G,GAAkB,SAATlG,EAChE,IAAIyc,EAAanlB,EAAQ,GAAKtB,KAAKwS,UAAUlR,EAAQ,GAErD,IAAK,IAAIc,EAAId,EAAOc,EAAId,EAAQoQ,IAAStP,EAAG,CAC1C,MAAMsd,EAAQD,EAAOrd,GACf+I,EAASnL,KAAKwS,UAAUpQ,GACxByF,EAAa0e,EAAe7G,EAAQ,GACpCgH,GAAWxK,EAAAA,EAAAA,GAAc/Q,EAAOM,IAChCkU,EAAS9X,EAAW0D,GAASD,EAAOmO,iBAAiBtO,EAAOI,GAAQnJ,GACpEwd,EAAS/X,EAAW4D,GAASyE,GAASwW,EAAW5b,EAAO+Q,eAAiB/Q,EAAO2O,iBAAiBzL,EAAWhO,KAAK4J,WAAWkB,EAAQK,EAAQ6C,GAAY7C,EAAOM,GAAQrJ,GAE7KyF,EAAWgY,KAAO9C,MAAM4C,IAAW5C,MAAM6C,IAAW8G,EACpD7e,EAAWlE,KAAOvB,EAAI,GAAKhB,KAAMoY,IAAIrO,EAAOI,GAASkb,EAAWlb,IAAW8a,EACvEH,IACFre,EAAWsD,OAASA,EACpBtD,EAAW4N,IAAMkQ,EAAS9V,KAAKzN,IAG7BwU,IACF/O,EAAWI,QAAU4O,GAAiB7W,KAAKoV,0BAA0BhT,EAAGsd,EAAMxZ,OAAS,SAAW8D,IAG/Fuc,GACHvmB,KAAKmX,cAAcuI,EAAOtd,EAAGyF,EAAYmC,GAG3Cyc,EAAatb,CACf,CAEAnL,KAAKkX,oBAAoBL,EAAe7M,EAAMgN,EAChD,CAKAnD,cAAAA,GACE,MAAMvJ,EAAOtK,KAAKoL,YACZyE,EAAOvF,EAAKuF,MAAQ,GAE1B,IAAK7P,KAAKiI,QAAQge,SAAU,CAC1B,IAAIxiB,EAAM,EACV,IAAK,IAAIrB,EAAIyN,EAAKhO,OAAS,EAAGO,GAAK,IAAKA,EACtCqB,EAAMrC,KAAKqC,IAAIA,EAAKoM,EAAKzN,GAAG2G,KAAK/I,KAAKoV,0BAA0BhT,IAAM,GAExE,OAAOqB,EAAM,GAAKA,EAGpB,MAAM8K,EAAUjE,EAAKiE,QACfoY,EAASpY,EAAQtG,SAAWsG,EAAQtG,QAAQ8b,aAAe,EAEjE,IAAKlU,EAAKhO,OACR,OAAO8kB,EAGT,MAAMC,EAAa/W,EAAK,GAAG9G,KAAK/I,KAAKoV,0BAA0B,IACzDyR,EAAYhX,EAAKA,EAAKhO,OAAS,GAAGkH,KAAK/I,KAAKoV,0BAA0BvF,EAAKhO,OAAS,IAC1F,OAAOT,KAAKqC,IAAIkjB,EAAQC,EAAYC,GAAa,CACnD,GACFrL,EAAAA,EAAAA,GA7KqB+M,EAA0B,KAEjC,YAAU/M,EAAAA,EAAAA,GAFH+M,EAA0B,WAO3B,CAChB3a,oBAAoB,EACpBC,gBAAiB,QACjBoY,UAAU,EACV/X,MAAM,KACNsN,EAAAA,EAAAA,GAZiB+M,EAA0B,YAiB1B,CAEjBG,YAAa,CACX1e,KAAM,SAGRmC,OAAQ,CACNuC,EAAG,CACD/N,KAAM,UAERgO,EAAG,CACDhO,KAAM,wMC+Bd,SAASgoB,IACP,MAAM,IAAIC,MAAM,kFAClB,CAQA,MAAMC,EAYJ,eAAOC,CACLC,GAEA3hB,OAAOe,OAAO0gB,EAAgBG,UAAWD,EAC3C,CAIAhpB,WAAAA,CAAYkI,IAAoBuT,EAAAA,EAAAA,GAAA,uBAC9Bxb,KAAKiI,QAAUA,GAAW,CAAC,CAC7B,CAGAghB,IAAAA,GAAQ,CAERC,OAAAA,GACE,OAAOP,GACT,CAEAlX,KAAAA,GACE,OAAOkX,GACT,CAEAQ,MAAAA,GACE,OAAOR,GACT,CAEAvlB,GAAAA,GACE,OAAOulB,GACT,CAEAS,IAAAA,GACE,OAAOT,GACT,CAEAU,OAAAA,GACE,OAAOV,GACT,CAEAW,KAAAA,GACE,OAAOX,GACT,EAGF,IAAAY,EACSV,EC9GT,SAASW,EAAaC,EAASje,EAAM1C,EAAO4gB,GAC1C,MAAM,WAACxe,EAAU,KAAE2E,EAAA,QAAM+B,GAAW6X,EAC9Bne,EAASJ,EAAWE,YAAYE,OACtC,GAAIA,GAAUE,IAASF,EAAOE,MAAiB,MAATA,GAAgBoG,GAAW/B,EAAKhO,OAAQ,CAC5E,MAAM8nB,EAAere,EAAOse,eAAiBC,EAAAA,EAAgBC,EAAAA,EAC7D,IAAKJ,EACH,OAAOC,EAAa9Z,EAAMrE,EAAM1C,GAC3B,GAAIoC,EAAWmC,eAAgB,CAIpC,MAAM0c,EAAKla,EAAK,GACV8C,EAA+B,oBAAhBoX,EAAGC,UAA2BD,EAAGC,SAASxe,GAC/D,GAAImH,EAAO,CACT,MAAMrR,EAAQqoB,EAAa9Z,EAAMrE,EAAM1C,EAAQ6J,GACzCtJ,EAAMsgB,EAAa9Z,EAAMrE,EAAM1C,EAAQ6J,GAC7C,MAAO,CAACsX,GAAI3oB,EAAM2oB,GAAIC,GAAI7gB,EAAI6gB,MAKpC,MAAO,CAACD,GAAI,EAAGC,GAAIra,EAAKhO,OAAS,EACnC,CAUA,SAASsoB,EAAyB3pB,EAAOgL,EAAM4e,EAAUC,EAASX,GAChE,MAAMlgB,EAAWhJ,EAAM8pB,+BACjBxhB,EAAQshB,EAAS5e,GACvB,IAAK,IAAIpJ,EAAI,EAAGsH,EAAOF,EAAS3H,OAAQO,EAAIsH,IAAQtH,EAAG,CACrD,MAAM,MAACuH,EAAA,KAAOkG,GAAQrG,EAASpH,IACzB,GAAC6nB,EAAA,GAAIC,GAAMV,EAAahgB,EAASpH,GAAIoJ,EAAM1C,EAAO4gB,GACxD,IAAK,IAAIa,EAAIN,EAAIM,GAAKL,IAAMK,EAAG,CAC7B,MAAMtV,EAAUpF,EAAK0a,GAChBtV,EAAQ4K,MACXwK,EAAQpV,EAAStL,EAAO4gB,EAE5B,CACF,CACF,CA2BA,SAASC,EAAkBhqB,EAAO4pB,EAAU5e,EAAMif,EAAkBC,GAClE,MAAMxoB,EAAQ,GAEd,IAAKwoB,IAAqBlqB,EAAMmqB,cAAcP,GAC5C,OAAOloB,EAaT,OADAioB,EAAyB3pB,EAAOgL,EAAM4e,GATf,SAASnV,EAAShL,EAAcN,IAChD+gB,IAAqBE,EAAAA,EAAAA,GAAe3V,EAASzU,EAAMuU,UAAW,KAG/DE,EAAQ4V,QAAQT,EAAS1b,EAAG0b,EAASzb,EAAG8b,IAC1CvoB,EAAMiB,KAAK,CAAC8R,UAAShL,eAAcN,SAEvC,IAEgE,GACzDzH,CACT,CAoCA,SAAS4oB,EAAyBtqB,EAAO4pB,EAAU5e,EAAMke,EAAWe,EAAkBC,GACpF,IAAIxoB,EAAQ,GACZ,MAAM6oB,EA5ER,SAAkCvf,GAChC,MAAMwf,GAA8B,IAAvBxf,EAAKwR,QAAQ,KACpBiO,GAA8B,IAAvBzf,EAAKwR,QAAQ,KAE1B,OAAO,SAASkO,EAAKC,GACnB,MAAMC,EAASJ,EAAO5pB,KAAKoY,IAAI0R,EAAIxc,EAAIyc,EAAIzc,GAAK,EAC1C2c,EAASJ,EAAO7pB,KAAKoY,IAAI0R,EAAIvc,EAAIwc,EAAIxc,GAAK,EAChD,OAAOvN,KAAKkqB,KAAKlqB,KAAKmqB,IAAIH,EAAQ,GAAKhqB,KAAKmqB,IAAIF,EAAQ,GAC1D,CACF,CAmEyBG,CAAyBhgB,GAChD,IAAIigB,EAActY,OAAOC,kBAyBzB,OADA+W,EAAyB3pB,EAAOgL,EAAM4e,GAtBtC,SAAwBnV,EAAShL,EAAcN,GAC7C,MAAMkhB,EAAU5V,EAAQ4V,QAAQT,EAAS1b,EAAG0b,EAASzb,EAAG8b,GACxD,GAAIf,IAAcmB,EAChB,OAGF,MAAMtO,EAAStH,EAAQyW,eAAejB,GAEtC,OADsBC,GAAoBlqB,EAAMmqB,cAAcpO,MACzCsO,EACnB,OAGF,MAAMc,EAAWZ,EAAeX,EAAU7N,GACtCoP,EAAWF,GACbvpB,EAAQ,CAAC,CAAC+S,UAAShL,eAAcN,UACjC8hB,EAAcE,GACLA,IAAaF,GAEtBvpB,EAAMiB,KAAK,CAAC8R,UAAShL,eAAcN,SAEvC,IAGOzH,CACT,CAYA,SAAS0pB,EAAgBprB,EAAO4pB,EAAU5e,EAAMke,EAAWe,EAAkBC,GAC3E,OAAKA,GAAqBlqB,EAAMmqB,cAAcP,GAI9B,MAAT5e,GAAiBke,EAEpBoB,EAAyBtqB,EAAO4pB,EAAU5e,EAAMke,EAAWe,EAAkBC,GA1EnF,SAA+BlqB,EAAO4pB,EAAU5e,EAAMif,GACpD,IAAIvoB,EAAQ,GAYZ,OADAioB,EAAyB3pB,EAAOgL,EAAM4e,GATtC,SAAwBnV,EAAShL,EAAcN,GAC7C,MAAM,WAAC4X,EAAA,SAAYC,GAAYvM,EAAQ4W,SAAS,CAAC,aAAc,YAAapB,IACtE,MAACzI,IAAS8J,EAAAA,EAAAA,GAAkB7W,EAAS,CAACvG,EAAG0b,EAAS1b,EAAGC,EAAGyb,EAASzb,KAEnEsT,EAAAA,EAAAA,GAAcD,EAAOT,EAAYC,IACnCtf,EAAMiB,KAAK,CAAC8R,UAAShL,eAAcN,SAEvC,IAGOzH,CACT,CA2DM6pB,CAAsBvrB,EAAO4pB,EAAU5e,EAAMif,GAJxC,EAMX,CAWA,SAASuB,EAAaxrB,EAAO4pB,EAAU5e,EAAMke,EAAWe,GACtD,MAAMvoB,EAAQ,GACR+pB,EAAuB,MAATzgB,EAAe,WAAa,WAChD,IAAI0gB,GAAiB,EAWrB,OATA/B,EAAyB3pB,EAAOgL,EAAM4e,GAAU,CAACnV,EAAShL,EAAcN,KAClEsL,EAAQgX,GAAa7B,EAAS5e,GAAOif,KACvCvoB,EAAMiB,KAAK,CAAC8R,UAAShL,eAAcN,UACnCuiB,EAAiBA,GAAkBjX,EAAQ4V,QAAQT,EAAS1b,EAAG0b,EAASzb,EAAG8b,OAM3Ef,IAAcwC,EACT,GAEFhqB,CACT,CAMA,IAAAiqB,EAAe,CAEbhC,2BAGAiC,MAAO,CAYLziB,KAAAA,CAAMnJ,EAAO8kB,EAAGrd,EAASwiB,GACvB,MAAML,GAAWiC,EAAAA,EAAAA,GAAoB/G,EAAG9kB,GAElCgL,EAAOvD,EAAQuD,MAAQ,IACvBkf,EAAmBziB,EAAQyiB,mBAAoB,EAC/CxoB,EAAQ+F,EAAQyhB,UAClBc,EAAkBhqB,EAAO4pB,EAAU5e,EAAMif,EAAkBC,GAC3DkB,EAAgBprB,EAAO4pB,EAAU5e,GAAM,EAAOif,EAAkBC,GAC9D7V,EAAW,GAEjB,OAAK3S,EAAML,QAIXrB,EAAM8pB,+BAA+BtpB,SAASsJ,IAC5C,MAAMX,EAAQzH,EAAM,GAAGyH,MACjBsL,EAAU3K,EAAKuF,KAAKlG,GAGtBsL,IAAYA,EAAQ4K,MACtBhL,EAAS1R,KAAK,CAAC8R,UAAShL,aAAcK,EAAKX,MAAOA,aAI/CkL,GAbE,EAcX,EAYAtG,OAAAA,CAAQ/N,EAAO8kB,EAAGrd,EAASwiB,GACzB,MAAML,GAAWiC,EAAAA,EAAAA,GAAoB/G,EAAG9kB,GAClCgL,EAAOvD,EAAQuD,MAAQ,KACvBkf,EAAmBziB,EAAQyiB,mBAAoB,EACrD,IAAIxoB,EAAQ+F,EAAQyhB,UAChBc,EAAkBhqB,EAAO4pB,EAAU5e,EAAMif,EAAkBC,GAC7DkB,EAAgBprB,EAAO4pB,EAAU5e,GAAM,EAAOif,EAAkBC,GAElE,GAAIxoB,EAAML,OAAS,EAAG,CACpB,MAAMoI,EAAe/H,EAAM,GAAG+H,aACxB4F,EAAOrP,EAAMuP,eAAe9F,GAAc4F,KAChD3N,EAAQ,GACR,IAAK,IAAIE,EAAI,EAAGA,EAAIyN,EAAKhO,SAAUO,EACjCF,EAAMiB,KAAK,CAAC8R,QAASpF,EAAKzN,GAAI6H,eAAcN,MAAOvH,IAIvD,OAAOF,CACT,EAYAwd,MAAK,CAAClf,EAAO8kB,EAAGrd,EAASwiB,IAIhBD,EAAkBhqB,GAHR6rB,EAAAA,EAAAA,GAAoB/G,EAAG9kB,GAC3ByH,EAAQuD,MAAQ,KAEmBif,EADvBxiB,EAAQyiB,mBAAoB,GAavD4B,OAAAA,CAAQ9rB,EAAO8kB,EAAGrd,EAASwiB,GACzB,MAAML,GAAWiC,EAAAA,EAAAA,GAAoB/G,EAAG9kB,GAClCgL,EAAOvD,EAAQuD,MAAQ,KACvBkf,EAAmBziB,EAAQyiB,mBAAoB,EACrD,OAAOkB,EAAgBprB,EAAO4pB,EAAU5e,EAAMvD,EAAQyhB,UAAWe,EAAkBC,EACrF,EAWAhc,EAAC,CAAClO,EAAO8kB,EAAGrd,EAASwiB,IAEZuB,EAAaxrB,GADH6rB,EAAAA,EAAAA,GAAoB/G,EAAG9kB,GACH,IAAKyH,EAAQyhB,UAAWe,GAY/D9b,EAAC,CAACnO,EAAO8kB,EAAGrd,EAASwiB,IAEZuB,EAAaxrB,GADH6rB,EAAAA,EAAAA,GAAoB/G,EAAG9kB,GACH,IAAKyH,EAAQyhB,UAAWe,KCpWnE,MAAM8B,EAAmB,CAAC,OAAQ,MAAO,QAAS,UAElD,SAASC,EAAiBC,EAAOrC,GAC/B,OAAOqC,EAAMrgB,QAAO+O,GAAKA,EAAEuR,MAAQtC,GACrC,CAEA,SAASuC,EAA4BF,EAAOjhB,GAC1C,OAAOihB,EAAMrgB,QAAO+O,IAA0C,IAArCoR,EAAiBvP,QAAQ7B,EAAEuR,MAAevR,EAAEyR,IAAIphB,OAASA,GACpF,CAEA,SAASqhB,EAAaJ,EAAOrjB,GAC3B,OAAOqjB,EAAMvT,MAAK,CAACC,EAAGhF,KACpB,MAAM2Y,EAAK1jB,EAAU+K,EAAIgF,EACnB6B,EAAK5R,EAAU+P,EAAIhF,EACzB,OAAO2Y,EAAG3I,SAAWnJ,EAAGmJ,OACtB2I,EAAGnjB,MAAQqR,EAAGrR,MACdmjB,EAAG3I,OAASnJ,EAAGmJ,MAAM,GAE3B,CAuCA,SAAS4I,GAAcC,EAASC,GAC9B,MAAMxiB,EAlBR,SAAqBuiB,GACnB,MAAMviB,EAAS,CAAC,EAChB,IAAK,MAAMyiB,KAAQF,EAAS,CAC1B,MAAM,MAACnjB,EAAK,IAAE6iB,EAAA,YAAKS,GAAeD,EAClC,IAAKrjB,IAAU0iB,EAAiBa,SAASV,GACvC,SAEF,MAAMW,EAAS5iB,EAAOZ,KAAWY,EAAOZ,GAAS,CAAC6H,MAAO,EAAG4b,OAAQ,EAAGnJ,OAAQ,EAAGpb,KAAM,IACxFskB,EAAO3b,QACP2b,EAAOlJ,QAAUgJ,CACnB,CACA,OAAO1iB,CACT,CAMiB8iB,CAAYP,IACrB,aAACQ,EAAA,cAAcC,GAAiBR,EACtC,IAAI7qB,EAAGsH,EAAMgkB,EACb,IAAKtrB,EAAI,EAAGsH,EAAOsjB,EAAQnrB,OAAQO,EAAIsH,IAAQtH,EAAG,CAChDsrB,EAASV,EAAQ5qB,GACjB,MAAM,SAACurB,GAAYD,EAAOd,IACpB/iB,EAAQY,EAAOijB,EAAO7jB,OACtBxF,EAASwF,GAAS6jB,EAAOP,YAActjB,EAAMsa,OAC/CuJ,EAAOhT,YACTgT,EAAOjR,MAAQpY,EAASA,EAASmpB,EAAeG,GAAYV,EAAOW,eACnEF,EAAOlR,OAASiR,IAEhBC,EAAOjR,MAAQ+Q,EACfE,EAAOlR,OAASnY,EAASA,EAASopB,EAAgBE,GAAYV,EAAOY,gBAEzE,CACA,OAAOpjB,CACT,CAsBA,SAASqjB,GAAeC,EAAYhZ,EAAWoE,EAAGhF,GAChD,OAAO/S,KAAKqC,IAAIsqB,EAAW5U,GAAIpE,EAAUoE,IAAM/X,KAAKqC,IAAIsqB,EAAW5Z,GAAIY,EAAUZ,GACnF,CAEA,SAAS6Z,GAAiBD,EAAYE,GACpCF,EAAW1Z,IAAMjT,KAAKqC,IAAIsqB,EAAW1Z,IAAK4Z,EAAW5Z,KACrD0Z,EAAWvZ,KAAOpT,KAAKqC,IAAIsqB,EAAWvZ,KAAMyZ,EAAWzZ,MACvDuZ,EAAWxZ,OAASnT,KAAKqC,IAAIsqB,EAAWxZ,OAAQ0Z,EAAW1Z,QAC3DwZ,EAAWzZ,MAAQlT,KAAKqC,IAAIsqB,EAAWzZ,MAAO2Z,EAAW3Z,MAC3D,CAEA,SAAS4Z,GAAWnZ,EAAWkY,EAAQS,EAAQjjB,GAC7C,MAAM,IAACiiB,EAAA,IAAKE,GAAOc,EACbK,EAAahZ,EAAUgZ,WAG7B,KAAK7mB,EAAAA,EAAAA,GAASwlB,GAAM,CACdgB,EAAO3kB,OAETgM,EAAU2X,IAAQgB,EAAO3kB,MAE3B,MAAMc,EAAQY,EAAOijB,EAAO7jB,QAAU,CAACd,KAAM,EAAG2I,MAAO,GACvD7H,EAAMd,KAAO3H,KAAKqC,IAAIoG,EAAMd,KAAM2kB,EAAOhT,WAAakS,EAAIpQ,OAASoQ,EAAInQ,OACvEiR,EAAO3kB,KAAOc,EAAMd,KAAOc,EAAM6H,MACjCqD,EAAU2X,IAAQgB,EAAO3kB,KAGvB6jB,EAAIuB,YACNH,GAAiBD,EAAYnB,EAAIuB,cAGnC,MAAMC,EAAWhtB,KAAKqC,IAAI,EAAGwpB,EAAOoB,WAAaP,GAAeC,EAAYhZ,EAAW,OAAQ,UACzFuZ,EAAYltB,KAAKqC,IAAI,EAAGwpB,EAAOsB,YAAcT,GAAeC,EAAYhZ,EAAW,MAAO,WAC1FyZ,EAAeJ,IAAarZ,EAAU0Z,EACtCC,EAAgBJ,IAAcvZ,EAAU4Z,EAK9C,OAJA5Z,EAAU0Z,EAAIL,EACdrZ,EAAU4Z,EAAIL,EAGPZ,EAAOhT,WACV,CAACkU,KAAMJ,EAAcK,MAAOH,GAC5B,CAACE,KAAMF,EAAeG,MAAOL,EACnC,CAgBA,SAASM,GAAWpU,EAAY3F,GAC9B,MAAMgZ,EAAahZ,EAAUgZ,WAE7B,SAASgB,EAAmBC,GAC1B,MAAMC,EAAS,CAACza,KAAM,EAAGH,IAAK,EAAGC,MAAO,EAAGC,OAAQ,GAInD,OAHAya,EAAUhuB,SAAS0rB,IACjBuC,EAAOvC,GAAOtrB,KAAKqC,IAAIsR,EAAU2X,GAAMqB,EAAWrB,GAAI,IAEjDuC,CACT,CAEA,OACIF,EADGrU,EACgB,CAAC,OAAQ,SACT,CAAC,MAAO,UACjC,CAEA,SAASwU,GAASC,EAAOpa,EAAWkY,EAAQxiB,GAC1C,MAAM2kB,EAAa,GACnB,IAAIhtB,EAAGsH,EAAMgkB,EAAQd,EAAKyC,EAAOC,EAEjC,IAAKltB,EAAI,EAAGsH,EAAOylB,EAAMttB,OAAQwtB,EAAQ,EAAGjtB,EAAIsH,IAAQtH,EAAG,CACzDsrB,EAASyB,EAAM/sB,GACfwqB,EAAMc,EAAOd,IAEbA,EAAIzmB,OACFunB,EAAOjR,OAAS1H,EAAU0Z,EAC1Bf,EAAOlR,QAAUzH,EAAU4Z,EAC3BG,GAAWpB,EAAOhT,WAAY3F,IAEhC,MAAM,KAAC6Z,EAAA,MAAMC,GAASX,GAAWnZ,EAAWkY,EAAQS,EAAQjjB,GAI5D4kB,GAAST,GAAQQ,EAAWvtB,OAG5BytB,EAAUA,GAAWT,EAEhBjC,EAAIe,UACPyB,EAAWjsB,KAAKuqB,EAEpB,CAEA,OAAO2B,GAASH,GAASE,EAAYra,EAAWkY,EAAQxiB,IAAW6kB,CACrE,CAEA,SAASC,GAAW3C,EAAKpY,EAAMH,EAAKoI,EAAOD,GACzCoQ,EAAIvY,IAAMA,EACVuY,EAAIpY,KAAOA,EACXoY,EAAItY,MAAQE,EAAOiI,EACnBmQ,EAAIrY,OAASF,EAAMmI,EACnBoQ,EAAInQ,MAAQA,EACZmQ,EAAIpQ,OAASA,CACf,CAEA,SAASgT,GAAWL,EAAOpa,EAAWkY,EAAQxiB,GAC5C,MAAMglB,EAAcxC,EAAOyC,QAC3B,IAAI,EAAChhB,EAAA,EAAGC,GAAKoG,EAEb,IAAK,MAAM2Y,KAAUyB,EAAO,CAC1B,MAAMvC,EAAMc,EAAOd,IACb/iB,EAAQY,EAAOijB,EAAO7jB,QAAU,CAAC6H,MAAO,EAAG4b,OAAQ,EAAGnJ,OAAQ,GAC9DA,EAASuJ,EAAQP,YAActjB,EAAMsa,QAAW,EACtD,GAAIuJ,EAAOhT,WAAY,CACrB,MAAM+B,EAAQ1H,EAAU0Z,EAAItK,EACtB3H,EAAS3S,EAAMd,MAAQ6jB,EAAIpQ,QAC7BvG,EAAAA,EAAAA,GAAQpM,EAAMvI,SAChBqN,EAAI9E,EAAMvI,OAERsrB,EAAIe,SACN4B,GAAW3C,EAAK6C,EAAYjb,KAAM7F,EAAGse,EAAOoB,WAAaoB,EAAYnb,MAAQmb,EAAYjb,KAAMgI,GAE/F+S,GAAW3C,EAAK7X,EAAUP,KAAO3K,EAAMyjB,OAAQ3e,EAAG8N,EAAOD,GAE3D3S,EAAMvI,MAAQqN,EACd9E,EAAMyjB,QAAU7Q,EAChB9N,EAAIie,EAAIrY,WACH,CACL,MAAMiI,EAASzH,EAAU4Z,EAAIxK,EACvB1H,EAAQ5S,EAAMd,MAAQ6jB,EAAInQ,OAC5BxG,EAAAA,EAAAA,GAAQpM,EAAMvI,SAChBoN,EAAI7E,EAAMvI,OAERsrB,EAAIe,SACN4B,GAAW3C,EAAKle,EAAG+gB,EAAYpb,IAAKoI,EAAOwQ,EAAOsB,YAAckB,EAAYlb,OAASkb,EAAYpb,KAEjGkb,GAAW3C,EAAKle,EAAGqG,EAAUV,IAAMxK,EAAMyjB,OAAQ7Q,EAAOD,GAE1D3S,EAAMvI,MAAQoN,EACd7E,EAAMyjB,QAAU9Q,EAChB9N,EAAIke,EAAItY,MAEZ,CAEAS,EAAUrG,EAAIA,EACdqG,EAAUpG,EAAIA,CAChB,CAwBA,IAAAqe,GAAe,CAQb2C,MAAAA,CAAOnvB,EAAO2B,GACP3B,EAAM2uB,QACT3uB,EAAM2uB,MAAQ,IAIhBhtB,EAAKwrB,SAAWxrB,EAAKwrB,WAAY,EACjCxrB,EAAKioB,SAAWjoB,EAAKioB,UAAY,MACjCjoB,EAAKgiB,OAAShiB,EAAKgiB,QAAU,EAE7BhiB,EAAKytB,QAAUztB,EAAKytB,SAAW,WAC7B,MAAO,CAAC,CACNC,EAAG,EACHxtB,IAAAA,CAAK0S,GACH5S,EAAKE,KAAK0S,EACZ,GAEJ,EAEAvU,EAAM2uB,MAAMhsB,KAAKhB,EACnB,EAOA2tB,SAAAA,CAAUtvB,EAAOuvB,GACf,MAAMpmB,EAAQnJ,EAAM2uB,MAAQ3uB,EAAM2uB,MAAMnS,QAAQ+S,IAAe,GAChD,IAAXpmB,GACFnJ,EAAM2uB,MAAMhX,OAAOxO,EAAO,EAE9B,EAQA1C,SAAAA,CAAUzG,EAAO2B,EAAM8F,GACrB9F,EAAKwrB,SAAW1lB,EAAQ0lB,SACxBxrB,EAAKioB,SAAWniB,EAAQmiB,SACxBjoB,EAAKgiB,OAASlc,EAAQkc,MACxB,EAUAhe,MAAAA,CAAO3F,EAAOic,EAAOD,EAAQwT,GAC3B,IAAKxvB,EACH,OAGF,MAAMkvB,GAAUO,EAAAA,EAAAA,GAAUzvB,EAAMyH,QAAQylB,OAAOgC,SACzC9B,EAAiBxsB,KAAKqC,IAAIgZ,EAAQiT,EAAQjT,MAAO,GACjDoR,EAAkBzsB,KAAKqC,IAAI+Y,EAASkT,EAAQlT,OAAQ,GACpD2S,EA5QV,SAA0BA,GACxB,MAAMe,EA1DR,SAAmBf,GACjB,MAAMe,EAAc,GACpB,IAAI9tB,EAAGsH,EAAMkjB,EAAKF,EAAK7iB,EAAOsjB,EAE9B,IAAK/qB,EAAI,EAAGsH,GAAQylB,GAAS,IAAIttB,OAAQO,EAAIsH,IAAQtH,EACnDwqB,EAAMuC,EAAM/sB,KACVgoB,SAAUsC,EAAKzkB,SAAU4B,QAAOsjB,cAAc,IAAMP,GACtDsD,EAAY/sB,KAAK,CACfwG,MAAOvH,EACPwqB,MACAF,MACAhS,WAAYkS,EAAI9Q,eAChBqI,OAAQyI,EAAIzI,OACZta,MAAOA,GAAU6iB,EAAM7iB,EACvBsjB,gBAGJ,OAAO+C,CACT,CAwCsBC,CAAUhB,GACxBxB,EAAWd,EAAaqD,EAAY9jB,QAAO8gB,GAAQA,EAAKN,IAAIe,YAAW,GACvEnZ,EAAOqY,EAAaL,EAAiB0D,EAAa,SAAS,GAC3D5b,EAAQuY,EAAaL,EAAiB0D,EAAa,UACnD7b,EAAMwY,EAAaL,EAAiB0D,EAAa,QAAQ,GACzD3b,EAASsY,EAAaL,EAAiB0D,EAAa,WACpDE,EAAmBzD,EAA4BuD,EAAa,KAC5DG,EAAiB1D,EAA4BuD,EAAa,KAEhE,MAAO,CACLvC,WACA2C,WAAY9b,EAAK5I,OAAOyI,GACxBkc,eAAgBjc,EAAM1I,OAAOykB,GAAgBzkB,OAAO2I,GAAQ3I,OAAOwkB,GACnErb,UAAWyX,EAAiB0D,EAAa,aACzCM,SAAUhc,EAAK5I,OAAO0I,GAAO1I,OAAOykB,GACpC3V,WAAYrG,EAAIzI,OAAO2I,GAAQ3I,OAAOwkB,GAE1C,CA0PkBK,CAAiBjwB,EAAM2uB,OAC/BuB,EAAgBvB,EAAMqB,SACtBG,EAAkBxB,EAAMzU,YAI9BkW,EAAAA,EAAAA,GAAKpwB,EAAM2uB,OAAOvC,IACgB,oBAArBA,EAAIiE,cACbjE,EAAIiE,kBA+BR,MAAMC,EAA0BJ,EAAcptB,QAAO,CAAC0f,EAAOkK,IAC3DA,EAAKN,IAAI3kB,UAAwC,IAA7BilB,EAAKN,IAAI3kB,QAAQ8f,QAAoB/E,EAAQA,EAAQ,GAAG,IAAM,EAE9EiK,EAAS7lB,OAAOkP,OAAO,CAC3B+X,WAAY5R,EACZ8R,YAAa/R,EACbkT,UACA9B,iBACAC,kBACAL,aAAcI,EAAiB,EAAIkD,EACnCrD,cAAeI,EAAkB,IAE7BE,EAAa3mB,OAAOe,OAAO,CAAC,EAAGunB,GACrC1B,GAAiBD,GAAYkC,EAAAA,EAAAA,GAAUD,IACvC,MAAMjb,EAAY3N,OAAOe,OAAO,CAC9B4lB,aACAU,EAAGb,EACHe,EAAGd,EACHnf,EAAGghB,EAAQlb,KACX7F,EAAG+gB,EAAQrb,KACVqb,GAEGjlB,EAASsiB,GAAc2D,EAAc9kB,OAAO+kB,GAAkB1D,GAGpEiC,GAASC,EAAMxB,SAAU5Y,EAAWkY,EAAQxiB,GAG5CykB,GAASwB,EAAe3b,EAAWkY,EAAQxiB,GAGvCykB,GAASyB,EAAiB5b,EAAWkY,EAAQxiB,IAE/CykB,GAASwB,EAAe3b,EAAWkY,EAAQxiB,GApRjD,SAA0BsK,GACxB,MAAMgZ,EAAahZ,EAAUgZ,WAE7B,SAASgD,EAAUrE,GACjB,MAAMsE,EAAS5vB,KAAKqC,IAAIsqB,EAAWrB,GAAO3X,EAAU2X,GAAM,GAE1D,OADA3X,EAAU2X,IAAQsE,EACXA,CACT,CACAjc,EAAUpG,GAAKoiB,EAAU,OACzBhc,EAAUrG,GAAKqiB,EAAU,QACzBA,EAAU,SACVA,EAAU,SACZ,CA2QIE,CAAiBlc,GAGjBya,GAAWL,EAAMmB,WAAYvb,EAAWkY,EAAQxiB,GAGhDsK,EAAUrG,GAAKqG,EAAU0Z,EACzB1Z,EAAUpG,GAAKoG,EAAU4Z,EAEzBa,GAAWL,EAAMoB,eAAgBxb,EAAWkY,EAAQxiB,GAEpDjK,EAAMuU,UAAY,CAChBP,KAAMO,EAAUP,KAChBH,IAAKU,EAAUV,IACfC,MAAOS,EAAUP,KAAOO,EAAU0Z,EAClCla,OAAQQ,EAAUV,IAAMU,EAAU4Z,EAClCnS,OAAQzH,EAAU4Z,EAClBlS,MAAO1H,EAAU0Z,IAInBmC,EAAAA,EAAAA,GAAKzB,EAAMpa,WAAY2Y,IACrB,MAAMd,EAAMc,EAAOd,IACnBxlB,OAAOe,OAAOykB,EAAKpsB,EAAMuU,WACzB6X,EAAIzmB,OAAO4O,EAAU0Z,EAAG1Z,EAAU4Z,EAAG,CAACna,KAAM,EAAGH,IAAK,EAAGC,MAAO,EAAGC,OAAQ,GAAG,GAEhF,GC7ba,MAAM2c,GAOnBC,cAAAA,CAAeC,EAAQ7M,GAAc,CAQrC8M,cAAAA,CAAehc,GACb,OAAO,CACT,CASAic,gBAAAA,CAAiB9wB,EAAOG,EAAM4wB,GAAW,CAQzCC,mBAAAA,CAAoBhxB,EAAOG,EAAM4wB,GAAW,CAK5CE,mBAAAA,GACE,OAAO,CACT,CASAC,cAAAA,CAAezc,EAASwH,EAAOD,EAAQ+H,GAGrC,OAFA9H,EAAQrb,KAAKqC,IAAI,EAAGgZ,GAASxH,EAAQwH,OACrCD,EAASA,GAAUvH,EAAQuH,OACpB,CACLC,QACAD,OAAQpb,KAAKqC,IAAI,EAAG8gB,EAAcnjB,KAAKqE,MAAMgX,EAAQ8H,GAAe/H,GAExE,CAMAmV,UAAAA,CAAWP,GACT,OAAO,CACT,CAMAQ,YAAAA,CAAa9qB,GAEb,ECrEa,MAAM+qB,WAAsBX,GACzCC,cAAAA,CAAehvB,GAIb,OAAOA,GAAQA,EAAKoP,YAAcpP,EAAKoP,WAAW,OAAS,IAC7D,CACAqgB,YAAAA,CAAa9qB,GACXA,EAAOmB,QAAQV,WAAY,CAC7B,ECRF,MAAMuqB,GAAc,WAOdC,GAAc,CAClBC,WAAY,YACZC,UAAW,YACXC,SAAU,UACVC,aAAc,aACdC,YAAa,YACbC,YAAa,YACbC,UAAW,UACXC,aAAc,WACdC,WAAY,YAGRC,GAAgB3pB,GAAmB,OAAVA,GAA4B,KAAVA,EA8DjD,MAAM4pB,KAAuBC,EAAAA,GAA+B,CAACC,SAAS,GAQtE,SAASC,GAAeryB,EAAOG,EAAM4wB,GAC/B/wB,GAASA,EAAM4wB,QACjB5wB,EAAM4wB,OAAOI,oBAAoB7wB,EAAM4wB,EAAUmB,GAErD,CAcA,SAASI,GAAiBC,EAAU3B,GAClC,IAAK,MAAM4B,KAAQD,EACjB,GAAIC,IAAS5B,GAAU4B,EAAKC,SAAS7B,GACnC,OAAO,CAGb,CAEA,SAAS8B,GAAqB1yB,EAAOG,EAAM4wB,GACzC,MAAMH,EAAS5wB,EAAM4wB,OACf+B,EAAW,IAAIC,kBAAiBC,IACpC,IAAIC,GAAU,EACd,IAAK,MAAMzZ,KAASwZ,EAClBC,EAAUA,GAAWR,GAAiBjZ,EAAM0Z,WAAYnC,GACxDkC,EAAUA,IAAYR,GAAiBjZ,EAAM2Z,aAAcpC,GAEzDkC,GACF/B,OAIJ,OADA4B,EAASM,QAAQC,SAAU,CAACC,WAAW,EAAMC,SAAS,IAC/CT,CACT,CAEA,SAASU,GAAqBrzB,EAAOG,EAAM4wB,GACzC,MAAMH,EAAS5wB,EAAM4wB,OACf+B,EAAW,IAAIC,kBAAiBC,IACpC,IAAIC,GAAU,EACd,IAAK,MAAMzZ,KAASwZ,EAClBC,EAAUA,GAAWR,GAAiBjZ,EAAM2Z,aAAcpC,GAC1DkC,EAAUA,IAAYR,GAAiBjZ,EAAM0Z,WAAYnC,GAEvDkC,GACF/B,OAIJ,OADA4B,EAASM,QAAQC,SAAU,CAACC,WAAW,EAAMC,SAAS,IAC/CT,CACT,CAEA,MAAMW,GAAqB,IAAI3zB,IAC/B,IAAI4zB,GAAsB,EAE1B,SAASC,KACP,MAAMC,EAAMvyB,OAAOwyB,iBACfD,IAAQF,KAGZA,GAAsBE,EACtBH,GAAmB9yB,SAAQ,CAACmzB,EAAQ3zB,KAC9BA,EAAM4zB,0BAA4BH,GACpCE,OAGN,CAgBA,SAASE,GAAqB7zB,EAAOG,EAAM4wB,GACzC,MAAMH,EAAS5wB,EAAM4wB,OACfkD,EAAYlD,IAAUmD,EAAAA,EAAAA,GAAenD,GAC3C,IAAKkD,EACH,OAEF,MAAMH,GAASK,EAAAA,EAAAA,IAAU,CAAC/X,EAAOD,KAC/B,MAAMiS,EAAI6F,EAAUG,YACpBlD,EAAS9U,EAAOD,GACZiS,EAAI6F,EAAUG,aAQhBlD,MAED7vB,QAGGyxB,EAAW,IAAIuB,gBAAerB,IAClC,MAAMxZ,EAAQwZ,EAAQ,GAChB5W,EAAQ5C,EAAM8a,YAAYlY,MAC1BD,EAAS3C,EAAM8a,YAAYnY,OAInB,IAAVC,GAA0B,IAAXD,GAGnB2X,EAAO1X,EAAOD,EAAA,IAKhB,OAHA2W,EAASM,QAAQa,GAhDnB,SAAuC9zB,EAAO2zB,GACvCL,GAAmB/qB,MACtBrH,OAAO4vB,iBAAiB,SAAU0C,IAEpCF,GAAmB/wB,IAAIvC,EAAO2zB,EAChC,CA4CES,CAA8Bp0B,EAAO2zB,GAE9BhB,CACT,CAEA,SAAS0B,GAAgBr0B,EAAOG,EAAMwyB,GAChCA,GACFA,EAAS2B,aAEE,WAATn0B,GAnDN,SAAyCH,GACvCszB,GAAmBhwB,OAAOtD,GACrBszB,GAAmB/qB,MACtBrH,OAAO8vB,oBAAoB,SAAUwC,GAEzC,CA+CIe,CAAgCv0B,EAEpC,CAEA,SAASw0B,GAAqBx0B,EAAOG,EAAM4wB,GACzC,MAAMH,EAAS5wB,EAAM4wB,OACf6D,GAAQT,EAAAA,EAAAA,IAAWvxB,IAIL,OAAdzC,EAAMsM,KACRykB,EA1IN,SAAyBtuB,EAAOzC,GAC9B,MAAMG,EAAOoxB,GAAY9uB,EAAMtC,OAASsC,EAAMtC,MACxC,EAAC+N,EAAC,EAAEC,IAAK0d,EAAAA,EAAAA,GAAoBppB,EAAOzC,GAC1C,MAAO,CACLG,OACAH,QACA00B,OAAQjyB,EACRyL,OAASpO,IAANoO,EAAkBA,EAAI,KACzBC,OAASrO,IAANqO,EAAkBA,EAAI,KAE7B,CAgIewmB,CAAgBlyB,EAAOzC,MAEjCA,GAIH,OA5JF,SAAqBwyB,EAAMryB,EAAM4wB,GAC3ByB,GACFA,EAAK1B,iBAAiB3wB,EAAM4wB,EAAUmB,GAE1C,CAsJE0C,CAAYhE,EAAQzwB,EAAMs0B,GAEnBA,CACT,CAMe,MAAMI,WAAoBnE,GAOvCC,cAAAA,CAAeC,EAAQ7M,GAIrB,MAAMlP,EAAU+b,GAAUA,EAAO7f,YAAc6f,EAAO7f,WAAW,MASjE,OAAI8D,GAAWA,EAAQ+b,SAAWA,GA/OtC,SAAoBA,EAAQ7M,GAC1B,MAAMM,EAAQuM,EAAOvM,MAIfyQ,EAAelE,EAAOmE,aAAa,UACnCC,EAAcpE,EAAOmE,aAAa,SAsBxC,GAnBAnE,EAAOU,IAAe,CACpB5wB,QAAS,CACPsb,OAAQ8Y,EACR7Y,MAAO+Y,EACP3Q,MAAO,CACLkD,QAASlD,EAAMkD,QACfvL,OAAQqI,EAAMrI,OACdC,MAAOoI,EAAMpI,SAQnBoI,EAAMkD,QAAUlD,EAAMkD,SAAW,QAEjClD,EAAM4Q,UAAY5Q,EAAM4Q,WAAa,aAEjChD,GAAc+C,GAAc,CAC9B,MAAME,GAAeC,EAAAA,EAAAA,GAAavE,EAAQ,cACrB9wB,IAAjBo1B,IACFtE,EAAO3U,MAAQiZ,GAInB,GAAIjD,GAAc6C,GAChB,GAA4B,KAAxBlE,EAAOvM,MAAMrI,OAIf4U,EAAO5U,OAAS4U,EAAO3U,OAAS8H,GAAe,OAC1C,CACL,MAAMqR,GAAgBD,EAAAA,EAAAA,GAAavE,EAAQ,eACrB9wB,IAAlBs1B,IACFxE,EAAO5U,OAASoZ,GAMxB,CAgMMC,CAAWzE,EAAQ7M,GACZlP,GAGF,IACT,CAKAgc,cAAAA,CAAehc,GACb,MAAM+b,EAAS/b,EAAQ+b,OACvB,IAAKA,EAAOU,IACV,OAAO,EAGT,MAAM5wB,EAAUkwB,EAAOU,IAAa5wB,QACpC,CAAC,SAAU,SAASF,SAASgE,IAC3B,MAAM8D,EAAQ5H,EAAQ8D,IAClBkX,EAAAA,EAAAA,GAAcpT,GAChBsoB,EAAO0E,gBAAgB9wB,GAEvBosB,EAAO2E,aAAa/wB,EAAM8D,MAI9B,MAAM+b,EAAQ3jB,EAAQ2jB,OAAS,CAAC,EAahC,OAZAzd,OAAOC,KAAKwd,GAAO7jB,SAAS0G,IAC1B0pB,EAAOvM,MAAMnd,GAAOmd,EAAMnd,EAAI,IAQhC0pB,EAAO3U,MAAQ2U,EAAO3U,aAEf2U,EAAOU,KACP,CACT,CAQAR,gBAAAA,CAAiB9wB,EAAOG,EAAM4wB,GAE5BvxB,KAAKwxB,oBAAoBhxB,EAAOG,GAEhC,MAAMq1B,EAAUx1B,EAAMy1B,WAAaz1B,EAAMy1B,SAAW,CAAC,GAM/C5L,EALW,CACf6L,OAAQhD,GACRiD,OAAQtC,GACRM,OAAQE,IAEe1zB,IAASq0B,GAClCgB,EAAQr1B,GAAQ0pB,EAAQ7pB,EAAOG,EAAM4wB,EACvC,CAOAC,mBAAAA,CAAoBhxB,EAAOG,GACzB,MAAMq1B,EAAUx1B,EAAMy1B,WAAaz1B,EAAMy1B,SAAW,CAAC,GAC/ChB,EAAQe,EAAQr1B,GAEtB,IAAKs0B,EACH,QAGe,CACfiB,OAAQrB,GACRsB,OAAQtB,GACRV,OAAQU,IAEel0B,IAASkyB,IAC1BryB,EAAOG,EAAMs0B,GACrBe,EAAQr1B,QAAQL,CAClB,CAEAmxB,mBAAAA,GACE,OAAO/vB,OAAOwyB,gBAChB,CAQAxC,cAAAA,CAAeN,EAAQ3U,EAAOD,EAAQ+H,GACpC,OAAOmN,EAAAA,EAAAA,GAAeN,EAAQ3U,EAAOD,EAAQ+H,EAC/C,CAKAoN,UAAAA,CAAWP,GACT,MAAMkD,EAAYlD,IAAUmD,EAAAA,EAAAA,GAAenD,GAC3C,SAAUkD,IAAaA,EAAU8B,YACnC,EC9Xa,MAAMC,GAAAt2B,WAAAA,IAAAyb,EAAAA,EAAAA,GAAA,kBAAAA,EAAAA,EAAAA,GAAA,kBAAAA,EAAAA,EAAAA,GAAA,eAOV,IAAKA,EAAAA,EAAAA,GAAA,wBAAAA,EAAAA,EAAAA,GAAA,2BAId8a,eAAAA,CAAgB7L,GACd,MAAM,EAAC/b,EAAA,EAAGC,GAAK3O,KAAK6rB,SAAS,CAAC,IAAK,KAAMpB,GACzC,MAAO,CAAC/b,IAAGC,IACb,CAEA4nB,QAAAA,GACE,OAAOjQ,EAAAA,EAAAA,GAAStmB,KAAK0O,KAAM4X,EAAAA,EAAAA,GAAStmB,KAAK2O,EAC3C,CASAkd,QAAAA,CAASjjB,EAAiB4tB,GACxB,MAAM/1B,EAAQT,KAAKoI,YACnB,IAAKouB,IAAU/1B,EAEb,OAAOT,KAET,MAAMy2B,EAA+B,CAAC,EAItC,OAHA7tB,EAAM5H,SAASgE,IACbyxB,EAAIzxB,GAAQvE,EAAMuE,IAASvE,EAAMuE,GAAMkB,SAAWzF,EAAMuE,GAAMgB,IAAMhG,KAAKgF,EAAe,IAEnFyxB,CACT,EC3BK,SAASC,GAASztB,EAAOyQ,GAC9B,MAAMid,EAAW1tB,EAAMhB,QAAQyR,MACzBkd,EA8BR,SAA2B3tB,GACzB,MAAMkW,EAASlW,EAAMhB,QAAQkX,OACvB0X,EAAa5tB,EAAM6tB,YACnBC,EAAW9tB,EAAMqQ,QAAUud,GAAc1X,EAAS,EAAI,GACtD6X,EAAW/tB,EAAMguB,WAAaJ,EACpC,OAAOz1B,KAAKqE,MAAMrE,KAAKC,IAAI01B,EAAUC,GACvC,CApC6BE,CAAkBjuB,GACvCkuB,EAAa/1B,KAAKC,IAAIs1B,EAASS,eAAiBR,EAAoBA,GACpES,EAAeV,EAASW,MAAMC,QAgEtC,SAAyB7d,GACvB,MAAM8d,EAAS,GACf,IAAIp1B,EAAGsH,EACP,IAAKtH,EAAI,EAAGsH,EAAOgQ,EAAM7X,OAAQO,EAAIsH,EAAMtH,IACrCsX,EAAMtX,GAAGk1B,OACXE,EAAOr0B,KAAKf,GAGhB,OAAOo1B,CACT,CAzEgDC,CAAgB/d,GAAS,GACjEge,EAAkBL,EAAax1B,OAC/B81B,EAAQN,EAAa,GACrB1a,EAAO0a,EAAaK,EAAkB,GACtCE,EAAW,GAGjB,GAAIF,EAAkBP,EAEpB,OAwEJ,SAAoBzd,EAAOke,EAAUP,EAAcxW,GACjD,IAEIze,EAFAsP,EAAQ,EACR+M,EAAO4Y,EAAa,GAIxB,IADAxW,EAAUzf,KAAKy2B,KAAKhX,GACfze,EAAI,EAAGA,EAAIsX,EAAM7X,OAAQO,IACxBA,IAAMqc,IACRmZ,EAASz0B,KAAKuW,EAAMtX,IACpBsP,IACA+M,EAAO4Y,EAAa3lB,EAAQmP,GAGlC,CAtFIiX,CAAWpe,EAAOke,EAAUP,EAAcK,EAAkBP,GACrDS,EAGT,MAAM/W,EA6BR,SAA0BwW,EAAc3d,EAAOyd,GAC7C,MAAMY,EA6FR,SAAwB/f,GACtB,MAAMggB,EAAMhgB,EAAInW,OAChB,IAAIO,EAAGgnB,EAEP,GAAI4O,EAAM,EACR,OAAO,EAGT,IAAK5O,EAAOpR,EAAI,GAAI5V,EAAI,EAAGA,EAAI41B,IAAO51B,EACpC,GAAI4V,EAAI5V,GAAK4V,EAAI5V,EAAI,KAAOgnB,EAC1B,OAAO,EAGX,OAAOA,CACT,CA3G2B6O,CAAeZ,GAClCxW,EAAUnH,EAAM7X,OAASs1B,EAI/B,IAAKY,EACH,OAAO32B,KAAKqC,IAAIod,EAAS,GAG3B,MAAMqX,GAAUC,EAAAA,EAAAA,GAAWJ,GAC3B,IAAK,IAAI31B,EAAI,EAAGsH,EAAOwuB,EAAQr2B,OAAS,EAAGO,EAAIsH,EAAMtH,IAAK,CACxD,MAAMiC,EAAS6zB,EAAQ91B,GACvB,GAAIiC,EAASwc,EACX,OAAOxc,CAEX,CACA,OAAOjD,KAAKqC,IAAIod,EAAS,EAC3B,CA/CkBuX,CAAiBf,EAAc3d,EAAOyd,GAEtD,GAAIO,EAAkB,EAAG,CACvB,IAAIt1B,EAAGsH,EACP,MAAM2uB,EAAkBX,EAAkB,EAAIt2B,KAAKk3B,OAAO3b,EAAOgb,IAAUD,EAAkB,IAAM,KAEnG,IADA7X,GAAKnG,EAAOke,EAAU/W,GAAS3E,EAAAA,EAAAA,GAAcmc,GAAmB,EAAIV,EAAQU,EAAiBV,GACxFv1B,EAAI,EAAGsH,EAAOguB,EAAkB,EAAGt1B,EAAIsH,EAAMtH,IAChDyd,GAAKnG,EAAOke,EAAU/W,EAASwW,EAAaj1B,GAAIi1B,EAAaj1B,EAAI,IAGnE,OADAyd,GAAKnG,EAAOke,EAAU/W,EAASlE,GAAMT,EAAAA,EAAAA,GAAcmc,GAAmB3e,EAAM7X,OAAS8a,EAAO0b,GACrFT,EAGT,OADA/X,GAAKnG,EAAOke,EAAU/W,GACf+W,CACT,CA6EA,SAAS/X,GAAKnG,EAAOke,EAAU/W,EAAS0X,EAAYC,GAClD,MAAMl3B,GAAQyN,EAAAA,EAAAA,GAAewpB,EAAY,GACnClvB,EAAMjI,KAAKC,KAAI0N,EAAAA,EAAAA,GAAeypB,EAAU9e,EAAM7X,QAAS6X,EAAM7X,QACnE,IACIA,EAAQO,EAAGqc,EADX/M,EAAQ,EAWZ,IARAmP,EAAUzf,KAAKy2B,KAAKhX,GAChB2X,IACF32B,EAAS22B,EAAWD,EACpB1X,EAAUhf,EAAST,KAAKqE,MAAM5D,EAASgf,IAGzCpC,EAAOnd,EAEAmd,EAAO,GACZ/M,IACA+M,EAAOrd,KAAKk3B,MAAMh3B,EAAQoQ,EAAQmP,GAGpC,IAAKze,EAAIhB,KAAKqC,IAAInC,EAAO,GAAIc,EAAIiH,EAAKjH,IAChCA,IAAMqc,IACRmZ,EAASz0B,KAAKuW,EAAMtX,IACpBsP,IACA+M,EAAOrd,KAAKk3B,MAAMh3B,EAAQoQ,EAAQmP,GAGxC,EDzGArF,EAAAA,EAAAA,GAvCqB6a,GAAA,WAED,CAAC,IAAE7a,EAAAA,EAAAA,GAFF6a,GAAA,qBAGI/1B,GEAzB,MACMm4B,GAAiBA,CAACxvB,EAAOuR,EAAM2E,IAAoB,QAAT3E,GAA2B,SAATA,EAAkBvR,EAAMuR,GAAQ2E,EAASlW,EAAMuR,GAAQ2E,EACnHuZ,GAAgBA,CAACC,EAAavB,IAAkBh2B,KAAKC,IAAI+1B,GAAiBuB,EAAaA,GAY7F,SAASC,GAAO5gB,EAAK6gB,GACnB,MAAMrB,EAAS,GACTsB,EAAY9gB,EAAInW,OAASg3B,EACzBb,EAAMhgB,EAAInW,OAChB,IAAIO,EAAI,EAER,KAAOA,EAAI41B,EAAK51B,GAAK02B,EACnBtB,EAAOr0B,KAAK6U,EAAI5W,KAAKqE,MAAMrD,KAE7B,OAAOo1B,CACT,CAOA,SAASuB,GAAoB9vB,EAAOU,EAAOqvB,GACzC,MAAMn3B,EAASoH,EAAMyQ,MAAM7X,OACrBo3B,EAAa73B,KAAKC,IAAIsI,EAAO9H,EAAS,GACtCP,EAAQ2H,EAAMqU,YACdjU,EAAMJ,EAAMsU,UACZ2b,EAAU,KAChB,IACI/Z,EADAga,EAAYlwB,EAAM0Q,gBAAgBsf,GAGtC,KAAID,IAEA7Z,EADa,IAAXtd,EACOT,KAAKqC,IAAI01B,EAAY73B,EAAO+H,EAAM8vB,GACxB,IAAVxvB,GACCV,EAAM0Q,gBAAgB,GAAKwf,GAAa,GAExCA,EAAYlwB,EAAM0Q,gBAAgBsf,EAAa,IAAM,EAEjEE,GAAaF,EAAatvB,EAAQwV,GAAUA,EAGxCga,EAAY73B,EAAQ43B,GAAWC,EAAY9vB,EAAM6vB,IAIvD,OAAOC,CACT,CAuBA,SAASC,GAAkBnxB,GACzB,OAAOA,EAAQoxB,UAAYpxB,EAAQ4uB,WAAa,CAClD,CAKA,SAASyC,GAAerxB,EAASsxB,GAC/B,IAAKtxB,EAAQ8f,QACX,OAAO,EAGT,MAAMyR,GAAOC,EAAAA,EAAAA,IAAOxxB,EAAQuxB,KAAMD,GAC5B7J,GAAUO,EAAAA,EAAAA,GAAUhoB,EAAQynB,SAGlC,QAFc9nB,EAAAA,EAAAA,GAAQK,EAAQ6c,MAAQ7c,EAAQ6c,KAAKjjB,OAAS,GAE5C23B,EAAKE,WAAchK,EAAQlT,MAC7C,CAiBA,SAASmd,GAAWC,EAAOxP,EAAUhhB,GAEnC,IAAIqtB,GAAMoD,EAAAA,EAAAA,IAAmBD,GAI7B,OAHIxwB,GAAyB,UAAbghB,IAA2BhhB,GAAwB,UAAbghB,KACpDqM,EArHkBmD,IAAoB,SAAVA,EAAmB,QAAoB,UAAVA,EAAoB,OAASA,EAqHhFE,CAAarD,IAEdA,CACT,CAuCe,MAAMsD,WAAc1D,GAGjCt2B,WAAAA,CAAY+E,GACV6W,QAGA3b,KAAK6L,GAAK/G,EAAI+G,GAEd7L,KAAKW,KAAOmE,EAAInE,KAEhBX,KAAKiI,aAAU3H,EAEfN,KAAK8M,IAAMhI,EAAIgI,IAEf9M,KAAKQ,MAAQsE,EAAItE,MAIjBR,KAAKqU,SAAM/T,EAEXN,KAAKuU,YAASjU,EAEdN,KAAKwU,UAAOlU,EAEZN,KAAKsU,WAAQhU,EAEbN,KAAKyc,WAAQnc,EAEbN,KAAKwc,YAASlc,EACdN,KAAKg6B,SAAW,CACdxlB,KAAM,EACNF,MAAO,EACPD,IAAK,EACLE,OAAQ,GAGVvU,KAAK0iB,cAAWpiB,EAEhBN,KAAK2iB,eAAYriB,EAEjBN,KAAKi6B,gBAAa35B,EAElBN,KAAKk6B,mBAAgB55B,EAErBN,KAAKm6B,iBAAc75B,EAEnBN,KAAKo6B,kBAAe95B,EAIpBN,KAAKwL,UAAOlL,EAEZN,KAAKq6B,mBAAgB/5B,EACrBN,KAAKqB,SAAMf,EACXN,KAAKyD,SAAMnD,EACXN,KAAKs6B,YAASh6B,EAEdN,KAAK0Z,MAAQ,GAEb1Z,KAAKu6B,eAAiB,KAEtBv6B,KAAKw6B,YAAc,KAEnBx6B,KAAKy6B,YAAc,KACnBz6B,KAAKsZ,QAAU,EACftZ,KAAKi3B,WAAa,EAClBj3B,KAAK06B,kBAAoB,CAAC,EAE1B16B,KAAKsd,iBAAchd,EAEnBN,KAAKud,eAAYjd,EACjBN,KAAK4pB,gBAAiB,EACtB5pB,KAAK26B,cAAWr6B,EAChBN,KAAK46B,cAAWt6B,EAChBN,KAAK66B,mBAAgBv6B,EACrBN,KAAK86B,mBAAgBx6B,EACrBN,KAAK+6B,aAAe,EACpB/6B,KAAKg7B,aAAe,EACpBh7B,KAAK8Y,OAAS,CAAC,EACf9Y,KAAKi7B,mBAAoB,EACzBj7B,KAAK0N,cAAWpN,CAClB,CAMA2oB,IAAAA,CAAKhhB,GACHjI,KAAKiI,QAAUA,EAAQizB,WAAWl7B,KAAKuR,cAEvCvR,KAAKwL,KAAOvD,EAAQuD,KAGpBxL,KAAK46B,SAAW56B,KAAKyR,MAAMxJ,EAAQ5G,KACnCrB,KAAK26B,SAAW36B,KAAKyR,MAAMxJ,EAAQxE,KACnCzD,KAAK86B,cAAgB96B,KAAKyR,MAAMxJ,EAAQkzB,cACxCn7B,KAAK66B,cAAgB76B,KAAKyR,MAAMxJ,EAAQmzB,aAC1C,CAQA3pB,KAAAA,CAAMgE,EAAK9L,GACT,OAAO8L,CACT,CAOA/B,aAAAA,GACE,IAAI,SAACknB,EAAQ,SAAED,EAAQ,cAAEG,EAAA,cAAeD,GAAiB76B,KAKzD,OAJA46B,GAAWS,EAAAA,EAAAA,GAAgBT,EAAUznB,OAAOC,mBAC5CunB,GAAWU,EAAAA,EAAAA,GAAgBV,EAAUxnB,OAAOE,mBAC5CynB,GAAgBO,EAAAA,EAAAA,GAAgBP,EAAe3nB,OAAOC,mBACtDynB,GAAgBQ,EAAAA,EAAAA,GAAgBR,EAAe1nB,OAAOE,mBAC/C,CACLhS,KAAKg6B,EAAAA,EAAAA,GAAgBT,EAAUE,GAC/Br3B,KAAK43B,EAAAA,EAAAA,GAAgBV,EAAUE,GAC/BrnB,YAAYrJ,EAAAA,EAAAA,GAASywB,GACrBnnB,YAAYtJ,EAAAA,EAAAA,GAASwwB,GAEzB,CAQA7nB,SAAAA,CAAUC,GAER,IACIJ,GADA,IAACtR,EAAA,IAAKoC,EAAA,WAAK+P,EAAA,WAAYC,GAAczT,KAAK0T,gBAG9C,GAAIF,GAAcC,EAChB,MAAO,CAACpS,MAAKoC,OAGf,MAAM63B,EAAQt7B,KAAKgL,0BACnB,IAAK,IAAI5I,EAAI,EAAGsH,EAAO4xB,EAAMz5B,OAAQO,EAAIsH,IAAQtH,EAC/CuQ,EAAQ2oB,EAAMl5B,GAAG8I,WAAW4H,UAAU9S,KAAM+S,GACvCS,IACHnS,EAAMD,KAAKC,IAAIA,EAAKsR,EAAMtR,MAEvBoS,IACHhQ,EAAMrC,KAAKqC,IAAIA,EAAKkP,EAAMlP,MAQ9B,OAHApC,EAAMoS,GAAcpS,EAAMoC,EAAMA,EAAMpC,EACtCoC,EAAM+P,GAAcnS,EAAMoC,EAAMpC,EAAMoC,EAE/B,CACLpC,KAAKg6B,EAAAA,EAAAA,GAAgBh6B,GAAKg6B,EAAAA,EAAAA,GAAgB53B,EAAKpC,IAC/CoC,KAAK43B,EAAAA,EAAAA,GAAgB53B,GAAK43B,EAAAA,EAAAA,GAAgBh6B,EAAKoC,IAEnD,CAOA0qB,UAAAA,GACE,MAAO,CACL3Z,KAAMxU,KAAKm6B,aAAe,EAC1B9lB,IAAKrU,KAAKi6B,YAAc,EACxB3lB,MAAOtU,KAAKo6B,cAAgB,EAC5B7lB,OAAQvU,KAAKk6B,eAAiB,EAElC,CAOAqB,QAAAA,GACE,OAAOv7B,KAAK0Z,KACd,CAKAvH,SAAAA,GACE,MAAMtC,EAAO7P,KAAKQ,MAAMqP,KACxB,OAAO7P,KAAKiI,QAAQiK,SAAWlS,KAAK8b,eAAiBjM,EAAK2rB,QAAU3rB,EAAK4rB,UAAY5rB,EAAKqC,QAAU,EACtG,CAKAwpB,aAAAA,GAAgD,IAAlC3mB,EAAYnT,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,GAAAA,UAAA,GAAA5B,KAAKQ,MAAMuU,UAEnC,OADc/U,KAAKw6B,cAAgBx6B,KAAKw6B,YAAcx6B,KAAK27B,mBAAmB5mB,GAEhF,CAGA8b,YAAAA,GACE7wB,KAAK8Y,OAAS,CAAC,EACf9Y,KAAKi7B,mBAAoB,CAC3B,CAMAW,YAAAA,IACEC,EAAAA,EAAAA,GAAK77B,KAAKiI,QAAQ2zB,aAAc,CAAC57B,MACnC,CAUAmG,MAAAA,CAAOuc,EAAUC,EAAWmZ,GAC1B,MAAM,YAACxc,EAAW,MAAEyc,EAAOriB,MAAOid,GAAY32B,KAAKiI,QAC7C+zB,EAAarF,EAASqF,WAG5Bh8B,KAAK47B,eAGL57B,KAAK0iB,SAAWA,EAChB1iB,KAAK2iB,UAAYA,EACjB3iB,KAAKg6B,SAAW8B,EAAU10B,OAAOe,OAAO,CACtCqM,KAAM,EACNF,MAAO,EACPD,IAAK,EACLE,OAAQ,GACPunB,GAEH97B,KAAK0Z,MAAQ,KACb1Z,KAAKy6B,YAAc,KACnBz6B,KAAKu6B,eAAiB,KACtBv6B,KAAKw6B,YAAc,KAGnBx6B,KAAKi8B,sBACLj8B,KAAKk8B,gBACLl8B,KAAKm8B,qBAELn8B,KAAKi3B,WAAaj3B,KAAK8b,eACnB9b,KAAKyc,MAAQqf,EAAQtnB,KAAOsnB,EAAQxnB,MACpCtU,KAAKwc,OAASsf,EAAQznB,IAAMynB,EAAQvnB,OAGnCvU,KAAKi7B,oBACRj7B,KAAKo8B,mBACLp8B,KAAKq8B,sBACLr8B,KAAKs8B,kBACLt8B,KAAKs6B,QAASiC,EAAAA,EAAAA,GAAUv8B,KAAM+7B,EAAOzc,GACrCtf,KAAKi7B,mBAAoB,GAG3Bj7B,KAAKw8B,mBAELx8B,KAAK0Z,MAAQ1Z,KAAKy8B,cAAgB,GAGlCz8B,KAAK08B,kBAIL,MAAMC,EAAkBX,EAAah8B,KAAK0Z,MAAM7X,OAChD7B,KAAK48B,sBAAsBD,EAAkB/D,GAAO54B,KAAK0Z,MAAOsiB,GAAch8B,KAAK0Z,OAMnF1Z,KAAKiH,YAGLjH,KAAK68B,+BACL78B,KAAK88B,yBACL98B,KAAK+8B,8BAGDpG,EAAS5O,UAAY4O,EAASD,UAAgC,SAApBC,EAASqG,UACrDh9B,KAAK0Z,MAAQgd,GAAS12B,KAAMA,KAAK0Z,OACjC1Z,KAAKy6B,YAAc,KACnBz6B,KAAKi9B,iBAGHN,GAEF38B,KAAK48B,sBAAsB58B,KAAK0Z,OAGlC1Z,KAAKk9B,YACLl9B,KAAKm9B,MACLn9B,KAAKo9B,WAILp9B,KAAKq9B,aACP,CAKAp2B,SAAAA,GACE,IACIgX,EAAYE,EADZmf,EAAgBt9B,KAAKiI,QAAQmB,QAG7BpJ,KAAK8b,gBACPmC,EAAaje,KAAKwU,KAClB2J,EAAWne,KAAKsU,QAEhB2J,EAAaje,KAAKqU,IAClB8J,EAAWne,KAAKuU,OAEhB+oB,GAAiBA,GAEnBt9B,KAAKsd,YAAcW,EACnBje,KAAKud,UAAYY,EACjBne,KAAK4pB,eAAiB0T,EACtBt9B,KAAKsZ,QAAU6E,EAAWF,EAC1Bje,KAAKu9B,eAAiBv9B,KAAKiI,QAAQu1B,aACrC,CAEAH,WAAAA,IACExB,EAAAA,EAAAA,GAAK77B,KAAKiI,QAAQo1B,YAAa,CAACr9B,MAClC,CAIAi8B,mBAAAA,IACEJ,EAAAA,EAAAA,GAAK77B,KAAKiI,QAAQg0B,oBAAqB,CAACj8B,MAC1C,CACAk8B,aAAAA,GAEMl8B,KAAK8b,gBAEP9b,KAAKyc,MAAQzc,KAAK0iB,SAClB1iB,KAAKwU,KAAO,EACZxU,KAAKsU,MAAQtU,KAAKyc,QAElBzc,KAAKwc,OAASxc,KAAK2iB,UAGnB3iB,KAAKqU,IAAM,EACXrU,KAAKuU,OAASvU,KAAKwc,QAIrBxc,KAAKm6B,YAAc,EACnBn6B,KAAKi6B,WAAa,EAClBj6B,KAAKo6B,aAAe,EACpBp6B,KAAKk6B,cAAgB,CACvB,CACAiC,kBAAAA,IACEN,EAAAA,EAAAA,GAAK77B,KAAKiI,QAAQk0B,mBAAoB,CAACn8B,MACzC,CAEAy9B,UAAAA,CAAWtgB,GACTnd,KAAKQ,MAAMk9B,cAAcvgB,EAAMnd,KAAKuR,eACpCsqB,EAAAA,EAAAA,GAAK77B,KAAKiI,QAAQkV,GAAO,CAACnd,MAC5B,CAGAo8B,gBAAAA,GACEp8B,KAAKy9B,WAAW,mBAClB,CACApB,mBAAAA,GAAuB,CACvBC,eAAAA,GACEt8B,KAAKy9B,WAAW,kBAClB,CAGAjB,gBAAAA,GACEx8B,KAAKy9B,WAAW,mBAClB,CAIAhB,UAAAA,GACE,MAAO,EACT,CACAC,eAAAA,GACE18B,KAAKy9B,WAAW,kBAClB,CAEAE,2BAAAA,IACE9B,EAAAA,EAAAA,GAAK77B,KAAKiI,QAAQ01B,4BAA6B,CAAC39B,MAClD,CAKA49B,kBAAAA,CAAmBlkB,GACjB,MAAMid,EAAW32B,KAAKiI,QAAQyR,MAC9B,IAAItX,EAAGsH,EAAMlH,EACb,IAAKJ,EAAI,EAAGsH,EAAOgQ,EAAM7X,OAAQO,EAAIsH,EAAMtH,IACzCI,EAAOkX,EAAMtX,GACbI,EAAKuR,OAAQ8nB,EAAAA,EAAAA,GAAKlF,EAASkF,SAAU,CAACr5B,EAAKsG,MAAO1G,EAAGsX,GAAQ1Z,KAEjE,CACA69B,0BAAAA,IACEhC,EAAAA,EAAAA,GAAK77B,KAAKiI,QAAQ41B,2BAA4B,CAAC79B,MACjD,CAIA68B,4BAAAA,IACEhB,EAAAA,EAAAA,GAAK77B,KAAKiI,QAAQ40B,6BAA8B,CAAC78B,MACnD,CACA88B,sBAAAA,GACE,MAAM70B,EAAUjI,KAAKiI,QACf0uB,EAAW1uB,EAAQyR,MACnBokB,EAAWpF,GAAc14B,KAAK0Z,MAAM7X,OAAQoG,EAAQyR,MAAM0d,eAC1D2G,EAAcpH,EAASoH,aAAe,EACtCC,EAAcrH,EAASqH,YAC7B,IACIC,EAAWtb,EAAWub,EADtB7D,EAAgB0D,EAGpB,IAAK/9B,KAAKm+B,eAAiBxH,EAAS5O,SAAWgW,GAAeC,GAAeF,GAAY,IAAM99B,KAAK8b,eAElG,YADA9b,KAAKq6B,cAAgB0D,GAIvB,MAAMK,EAAap+B,KAAKq+B,iBAClBC,EAAgBF,EAAWG,OAAO9hB,MAClC+hB,EAAiBJ,EAAWK,QAAQjiB,OAIpCkG,GAAWgc,EAAAA,EAAAA,GAAY1+B,KAAKQ,MAAMic,MAAQ6hB,EAAe,EAAGt+B,KAAK0iB,UACvEub,EAAYh2B,EAAQkX,OAASnf,KAAK0iB,SAAWob,EAAWpb,GAAYob,EAAW,GAG3EQ,EAAgB,EAAIL,IACtBA,EAAYvb,GAAYob,GAAY71B,EAAQkX,OAAS,GAAM,IAC3DwD,EAAY3iB,KAAK2iB,UAAYyW,GAAkBnxB,EAAQmX,MACvDuX,EAASjH,QAAU4J,GAAerxB,EAAQ02B,MAAO3+B,KAAKQ,MAAMyH,QAAQuxB,MACpE0E,EAAmB98B,KAAKkqB,KAAKgT,EAAgBA,EAAgBE,EAAiBA,GAC9EnE,GAAgBuE,EAAAA,EAAAA,GAAUx9B,KAAKC,IAC7BD,KAAKy9B,MAAKH,EAAAA,EAAAA,IAAaN,EAAWK,QAAQjiB,OAAS,GAAKyhB,GAAY,EAAG,IACvE78B,KAAKy9B,MAAKH,EAAAA,EAAAA,GAAY/b,EAAYub,GAAmB,EAAG,IAAM98B,KAAKy9B,MAAKH,EAAAA,EAAAA,GAAYF,EAAiBN,GAAmB,EAAG,MAE7H7D,EAAgBj5B,KAAKqC,IAAIs6B,EAAa38B,KAAKC,IAAI28B,EAAa3D,KAG9Dr6B,KAAKq6B,cAAgBA,CACvB,CACA0C,2BAAAA,IACElB,EAAAA,EAAAA,GAAK77B,KAAKiI,QAAQ80B,4BAA6B,CAAC/8B,MAClD,CACAi9B,aAAAA,GAAiB,CAIjBC,SAAAA,IACErB,EAAAA,EAAAA,GAAK77B,KAAKiI,QAAQi1B,UAAW,CAACl9B,MAChC,CACAm9B,GAAAA,GAEE,MAAMhW,EAAU,CACd1K,MAAO,EACPD,OAAQ,IAGJ,MAAChc,EAAOyH,SAAUyR,MAAOid,EAAUgI,MAAOG,EAAW1f,KAAM2f,IAAa/+B,KACxE+nB,EAAU/nB,KAAKm+B,aACfriB,EAAe9b,KAAK8b,eAE1B,GAAIiM,EAAS,CACX,MAAMiX,EAAc1F,GAAewF,EAAWt+B,EAAMyH,QAAQuxB,MAU5D,GATI1d,GACFqL,EAAQ1K,MAAQzc,KAAK0iB,SACrByE,EAAQ3K,OAAS4c,GAAkB2F,GAAYC,IAE/C7X,EAAQ3K,OAASxc,KAAK2iB,UACtBwE,EAAQ1K,MAAQ2c,GAAkB2F,GAAYC,GAI5CrI,EAAS5O,SAAW/nB,KAAK0Z,MAAM7X,OAAQ,CACzC,MAAM,MAAC81B,EAAA,KAAOhb,EAAA,OAAM4hB,EAAA,QAAQE,GAAWz+B,KAAKq+B,iBACtCY,EAAiC,EAAnBtI,EAASjH,QACvBwP,GAAe7e,EAAAA,EAAAA,GAAUrgB,KAAKq6B,eAC9B3Y,EAAMtgB,KAAKsgB,IAAIwd,GACftd,EAAMxgB,KAAKwgB,IAAIsd,GAErB,GAAIpjB,EAAc,CAEhB,MAAMqjB,EAAcxI,EAASyI,OAAS,EAAIxd,EAAM2c,EAAO9hB,MAAQiF,EAAM+c,EAAQjiB,OAC7E2K,EAAQ3K,OAASpb,KAAKC,IAAIrB,KAAK2iB,UAAWwE,EAAQ3K,OAAS2iB,EAAcF,OACpE,CAGL,MAAMI,EAAa1I,EAASyI,OAAS,EAAI1d,EAAM6c,EAAO9hB,MAAQmF,EAAM6c,EAAQjiB,OAE5E2K,EAAQ1K,MAAQrb,KAAKC,IAAIrB,KAAK0iB,SAAUyE,EAAQ1K,MAAQ4iB,EAAaJ,GAEvEj/B,KAAKs/B,kBAAkB3H,EAAOhb,EAAMiF,EAAKF,IAI7C1hB,KAAKu/B,iBAEDzjB,GACF9b,KAAKyc,MAAQzc,KAAKsZ,QAAU9Y,EAAMic,MAAQzc,KAAKg6B,SAASxlB,KAAOxU,KAAKg6B,SAAS1lB,MAC7EtU,KAAKwc,OAAS2K,EAAQ3K,SAEtBxc,KAAKyc,MAAQ0K,EAAQ1K,MACrBzc,KAAKwc,OAASxc,KAAKsZ,QAAU9Y,EAAMgc,OAASxc,KAAKg6B,SAAS3lB,IAAMrU,KAAKg6B,SAASzlB,OAElF,CAEA+qB,iBAAAA,CAAkB3H,EAAOhb,EAAMiF,EAAKF,GAClC,MAAOhI,OAAO,MAACkgB,EAAA,QAAOlK,GAAQ,SAAEtF,GAAYpqB,KAAKiI,QAC3Cu3B,EAAmC,IAAvBx/B,KAAKq6B,cACjBoF,EAAgC,QAAbrV,GAAoC,MAAdpqB,KAAKwL,KAEpD,GAAIxL,KAAK8b,eAAgB,CACvB,MAAM4jB,EAAa1/B,KAAK2Z,gBAAgB,GAAK3Z,KAAKwU,KAC5CmrB,EAAc3/B,KAAKsU,MAAQtU,KAAK2Z,gBAAgB3Z,KAAK0Z,MAAM7X,OAAS,GAC1E,IAAIs4B,EAAc,EACdC,EAAe,EAIfoF,EACEC,GACFtF,EAAczY,EAAMiW,EAAMlb,MAC1B2d,EAAexY,EAAMjF,EAAKH,SAE1B2d,EAAcvY,EAAM+V,EAAMnb,OAC1B4d,EAAe1Y,EAAM/E,EAAKF,OAET,UAAVmd,EACTQ,EAAezd,EAAKF,MACD,QAAVmd,EACTO,EAAcxC,EAAMlb,MACD,UAAVmd,IACTO,EAAcxC,EAAMlb,MAAQ,EAC5B2d,EAAezd,EAAKF,MAAQ,GAI9Bzc,KAAKm6B,YAAc/4B,KAAKqC,KAAK02B,EAAcuF,EAAahQ,GAAW1vB,KAAKyc,OAASzc,KAAKyc,MAAQijB,GAAa,GAC3G1/B,KAAKo6B,aAAeh5B,KAAKqC,KAAK22B,EAAeuF,EAAcjQ,GAAW1vB,KAAKyc,OAASzc,KAAKyc,MAAQkjB,GAAc,OAC1G,CACL,IAAI1F,EAAatd,EAAKH,OAAS,EAC3B0d,EAAgBvC,EAAMnb,OAAS,EAErB,UAAVod,GACFK,EAAa,EACbC,EAAgBvC,EAAMnb,QACH,QAAVod,IACTK,EAAatd,EAAKH,OAClB0d,EAAgB,GAGlBl6B,KAAKi6B,WAAaA,EAAavK,EAC/B1vB,KAAKk6B,cAAgBA,EAAgBxK,EAEzC,CAMA6P,cAAAA,GACMv/B,KAAKg6B,WACPh6B,KAAKg6B,SAASxlB,KAAOpT,KAAKqC,IAAIzD,KAAKm6B,YAAan6B,KAAKg6B,SAASxlB,MAC9DxU,KAAKg6B,SAAS3lB,IAAMjT,KAAKqC,IAAIzD,KAAKi6B,WAAYj6B,KAAKg6B,SAAS3lB,KAC5DrU,KAAKg6B,SAAS1lB,MAAQlT,KAAKqC,IAAIzD,KAAKo6B,aAAcp6B,KAAKg6B,SAAS1lB,OAChEtU,KAAKg6B,SAASzlB,OAASnT,KAAKqC,IAAIzD,KAAKk6B,cAAel6B,KAAKg6B,SAASzlB,QAEtE,CAEA6oB,QAAAA,IACEvB,EAAAA,EAAAA,GAAK77B,KAAKiI,QAAQm1B,SAAU,CAACp9B,MAC/B,CAMA8b,YAAAA,GACE,MAAM,KAACtQ,EAAA,SAAM4e,GAAYpqB,KAAKiI,QAC9B,MAAoB,QAAbmiB,GAAmC,WAAbA,GAAkC,MAAT5e,CACxD,CAIAo0B,UAAAA,GACE,OAAO5/B,KAAKiI,QAAQ0lB,QACtB,CAMAiP,qBAAAA,CAAsBljB,GAMpB,IAAItX,EAAGsH,EACP,IANA1J,KAAK29B,8BAEL39B,KAAK49B,mBAAmBlkB,GAInBtX,EAAI,EAAGsH,EAAOgQ,EAAM7X,OAAQO,EAAIsH,EAAMtH,KACrC8Z,EAAAA,EAAAA,GAAcxC,EAAMtX,GAAG2R,SACzB2F,EAAMvB,OAAO/V,EAAG,GAChBsH,IACAtH,KAIJpC,KAAK69B,4BACP,CAMAQ,cAAAA,GACE,IAAID,EAAap+B,KAAKy6B,YAEtB,IAAK2D,EAAY,CACf,MAAMpC,EAAah8B,KAAKiI,QAAQyR,MAAMsiB,WACtC,IAAItiB,EAAQ1Z,KAAK0Z,MACbsiB,EAAatiB,EAAM7X,SACrB6X,EAAQkf,GAAOlf,EAAOsiB,IAGxBh8B,KAAKy6B,YAAc2D,EAAap+B,KAAK6/B,mBAAmBnmB,EAAOA,EAAM7X,OAAQ7B,KAAKiI,QAAQyR,MAAM0d,eAGlG,OAAOgH,CACT,CAQAyB,kBAAAA,CAAmBnmB,EAAO7X,EAAQu1B,GAChC,MAAM,IAACtqB,EAAK4tB,kBAAmBoF,GAAU9/B,KACnC+/B,EAAS,GACTC,EAAU,GACVlH,EAAY13B,KAAKqE,MAAM5D,EAAS62B,GAAc72B,EAAQu1B,IAC5D,IAEIh1B,EAAGmoB,EAAG0V,EAAMlsB,EAAOmsB,EAAUC,EAAYrqB,EAAO4jB,EAAYjd,EAAOD,EAAQ4jB,EAF3EC,EAAkB,EAClBC,EAAmB,EAGvB,IAAKl+B,EAAI,EAAGA,EAAIP,EAAQO,GAAK02B,EAAW,CAQtC,GAPA/kB,EAAQ2F,EAAMtX,GAAG2R,MACjBmsB,EAAWlgC,KAAKugC,wBAAwBn+B,GACxC0K,EAAI0sB,KAAO2G,EAAaD,EAASM,OACjC1qB,EAAQgqB,EAAOK,GAAcL,EAAOK,IAAe,CAACtwB,KAAM,CAAC,EAAG4wB,GAAI,IAClE/G,EAAawG,EAASxG,WACtBjd,EAAQD,EAAS,GAEZN,EAAAA,EAAAA,GAAcnI,KAAWnM,EAAAA,EAAAA,GAAQmM,IAG/B,IAAInM,EAAAA,EAAAA,GAAQmM,GAEjB,IAAKwW,EAAI,EAAG0V,EAAOlsB,EAAMlS,OAAQ0oB,EAAI0V,IAAQ1V,EAC3C6V,EAAqCrsB,EAAMwW,IAEtCrO,EAAAA,EAAAA,GAAckkB,KAAiBx4B,EAAAA,EAAAA,GAAQw4B,KAC1C3jB,GAAQikB,EAAAA,EAAAA,GAAa5zB,EAAKgJ,EAAMjG,KAAMiG,EAAM2qB,GAAIhkB,EAAO2jB,GACvD5jB,GAAUkd,QATdjd,GAAQikB,EAAAA,EAAAA,GAAa5zB,EAAKgJ,EAAMjG,KAAMiG,EAAM2qB,GAAIhkB,EAAO1I,GACvDyI,EAASkd,EAYXqG,EAAO58B,KAAKsZ,GACZujB,EAAQ78B,KAAKqZ,GACb6jB,EAAkBj/B,KAAKqC,IAAIgZ,EAAO4jB,GAClCC,EAAmBl/B,KAAKqC,IAAI+Y,EAAQ8jB,EACtC,EAhxBJ,SAAwBR,EAAQj+B,IAC9B+uB,EAAAA,EAAAA,GAAKkP,GAAShqB,IACZ,MAAM2qB,EAAK3qB,EAAM2qB,GACXE,EAAQF,EAAG5+B,OAAS,EAC1B,IAAIO,EACJ,GAAIu+B,EAAQ9+B,EAAQ,CAClB,IAAKO,EAAI,EAAGA,EAAIu+B,IAASv+B,SAChB0T,EAAMjG,KAAK4wB,EAAGr+B,IAEvBq+B,EAAGtoB,OAAO,EAAGwoB,MAGnB,CAqwBIC,CAAed,EAAQj+B,GAEvB,MAAM08B,EAASwB,EAAO/iB,QAAQqjB,GACxB5B,EAAUuB,EAAQhjB,QAAQsjB,GAE1BO,EAAWC,IAAA,CAAUrkB,MAAOsjB,EAAOe,IAAQ,EAAGtkB,OAAQwjB,EAAQc,IAAQ,IAE5E,MAAO,CACLnJ,MAAOkJ,EAAQ,GACflkB,KAAMkkB,EAAQh/B,EAAS,GACvB08B,OAAQsC,EAAQtC,GAChBE,QAASoC,EAAQpC,GACjBsB,SACAC,UAEJ,CAOAhsB,gBAAAA,CAAiBlL,GACf,OAAOA,CACT,CASA2Q,gBAAAA,CAAiB3Q,EAAOa,GACtB,OAAOkJ,GACT,CAQAuL,gBAAAA,CAAiB2iB,GAAQ,CAQzBpnB,eAAAA,CAAgBhQ,GACd,MAAM+P,EAAQ1Z,KAAK0Z,MACnB,OAAI/P,EAAQ,GAAKA,EAAQ+P,EAAM7X,OAAS,EAC/B,KAEF7B,KAAKyZ,iBAAiBC,EAAM/P,GAAOb,MAC5C,CAQAoV,kBAAAA,CAAmB8iB,GACbhhC,KAAK4pB,iBACPoX,EAAU,EAAIA,GAGhB,MAAMD,EAAQ/gC,KAAKsd,YAAc0jB,EAAUhhC,KAAKsZ,QAChD,OAAO2nB,EAAAA,EAAAA,GAAYjhC,KAAKu9B,gBAAiB2D,EAAAA,EAAAA,GAAYlhC,KAAKQ,MAAOugC,EAAO,GAAKA,EAC/E,CAMAI,kBAAAA,CAAmBJ,GACjB,MAAMC,GAAWD,EAAQ/gC,KAAKsd,aAAetd,KAAKsZ,QAClD,OAAOtZ,KAAK4pB,eAAiB,EAAIoX,EAAUA,CAC7C,CAOAnlB,YAAAA,GACE,OAAO7b,KAAKyZ,iBAAiBzZ,KAAKohC,eACpC,CAKAA,YAAAA,GACE,MAAM,IAAC//B,EAAG,IAAEoC,GAAOzD,KAEnB,OAAOqB,EAAM,GAAKoC,EAAM,EAAIA,EAC1BpC,EAAM,GAAKoC,EAAM,EAAIpC,EACrB,CACJ,CAKAkQ,UAAAA,CAAW5H,GACT,MAAM+P,EAAQ1Z,KAAK0Z,OAAS,GAE5B,GAAI/P,GAAS,GAAKA,EAAQ+P,EAAM7X,OAAQ,CACtC,MAAMW,EAAOkX,EAAM/P,GACnB,OAAOnH,EAAKkL,WACblL,EAAKkL,SAt1BV,SAA2B4H,EAAQ3L,EAAOnH,GACxC,OAAO+S,EAAAA,EAAAA,GAAcD,EAAQ,CAC3B9S,OACAmH,QACAhJ,KAAM,QAEV,CAg1BqB0gC,CAAkBrhC,KAAKuR,aAAc5H,EAAOnH,IAE7D,OAAOxC,KAAK0N,WACZ1N,KAAK0N,UAh2BmB4H,EAg2BWtV,KAAKQ,MAAM+Q,aAh2BdtI,EAg2B4BjJ,MA/1BvDuV,EAAAA,EAAAA,GAAcD,EAAQ,CAC3BrM,QACAtI,KAAM,YAHV,IAA4B2U,EAAQrM,CAi2BlC,CAMA6tB,SAAAA,GACE,MAAMwK,EAActhC,KAAKiI,QAAQyR,MAG3B6nB,GAAMlhB,EAAAA,EAAAA,GAAUrgB,KAAKq6B,eACrB3Y,EAAMtgB,KAAKoY,IAAIpY,KAAKsgB,IAAI6f,IACxB3f,EAAMxgB,KAAKoY,IAAIpY,KAAKwgB,IAAI2f,IAExBnD,EAAap+B,KAAKq+B,iBAClB3O,EAAU4R,EAAYE,iBAAmB,EACzC/S,EAAI2P,EAAaA,EAAWG,OAAO9hB,MAAQiT,EAAU,EACrDf,EAAIyP,EAAaA,EAAWK,QAAQjiB,OAASkT,EAAU,EAG7D,OAAO1vB,KAAK8b,eACR6S,EAAIjN,EAAM+M,EAAI7M,EAAM6M,EAAI/M,EAAMiN,EAAI/M,EAClC+M,EAAI/M,EAAM6M,EAAI/M,EAAMiN,EAAIjN,EAAM+M,EAAI7M,CACxC,CAMAuc,UAAAA,GACE,MAAMpW,EAAU/nB,KAAKiI,QAAQ8f,QAE7B,MAAgB,SAAZA,IACOA,EAGJ/nB,KAAKgL,0BAA0BnJ,OAAS,CACjD,CAKA4/B,qBAAAA,CAAsB1sB,GACpB,MAAMvJ,EAAOxL,KAAKwL,KACZhL,EAAQR,KAAKQ,MACbyH,EAAUjI,KAAKiI,SACf,KAACmX,EAAI,SAAEgL,EAAA,OAAUzD,GAAU1e,EAC3BkX,EAASC,EAAKD,OACdrD,EAAe9b,KAAK8b,eAEpB6c,EADQ34B,KAAK0Z,MACO7X,QAAUsd,EAAS,EAAI,GAC3CuiB,EAAKtI,GAAkBha,GACvBld,EAAQ,GAERy/B,EAAahb,EAAOuU,WAAWl7B,KAAKuR,cACpCqwB,EAAYD,EAAW5Z,QAAU4Z,EAAWllB,MAAQ,EACpDolB,EAAgBD,EAAY,EAC5BE,EAAmB,SAASf,GAChC,OAAOG,EAAAA,EAAAA,GAAY1gC,EAAOugC,EAAOa,EACnC,EACA,IAAIG,EAAa3/B,EAAG+2B,EAAW6I,EAC3BC,EAAKC,EAAKC,EAAKC,EAAKC,EAAIC,EAAIC,EAAIC,EAEpC,GAAiB,QAAbpY,EACF2X,EAAcD,EAAiB9hC,KAAKuU,QACpC2tB,EAAMliC,KAAKuU,OAASmtB,EACpBU,EAAML,EAAcF,EACpBS,EAAKR,EAAiB/sB,EAAUV,KAAOwtB,EACvCW,EAAKztB,EAAUR,YACV,GAAiB,WAAb6V,EACT2X,EAAcD,EAAiB9hC,KAAKqU,KACpCiuB,EAAKvtB,EAAUV,IACfmuB,EAAKV,EAAiB/sB,EAAUR,QAAUstB,EAC1CK,EAAMH,EAAcF,EACpBO,EAAMpiC,KAAKqU,IAAMqtB,OACZ,GAAiB,SAAbtX,EACT2X,EAAcD,EAAiB9hC,KAAKsU,OACpC2tB,EAAMjiC,KAAKsU,MAAQotB,EACnBS,EAAMJ,EAAcF,EACpBQ,EAAKP,EAAiB/sB,EAAUP,MAAQqtB,EACxCU,EAAKxtB,EAAUT,WACV,GAAiB,UAAb8V,EACT2X,EAAcD,EAAiB9hC,KAAKwU,MACpC6tB,EAAKttB,EAAUP,KACf+tB,EAAKT,EAAiB/sB,EAAUT,OAASutB,EACzCI,EAAMF,EAAcF,EACpBM,EAAMniC,KAAKwU,KAAOktB,OACb,GAAa,MAATl2B,EAAc,CACvB,GAAiB,WAAb4e,EACF2X,EAAcD,GAAkB/sB,EAAUV,IAAMU,EAAUR,QAAU,EAAI,SACnE,IAAIrN,EAAAA,EAAAA,GAASkjB,GAAW,CAC7B,MAAMqY,EAAiBr7B,OAAOC,KAAK+iB,GAAU,GACvCthB,EAAQshB,EAASqY,GACvBV,EAAcD,EAAiB9hC,KAAKQ,MAAM2L,OAAOs2B,GAAgBhpB,iBAAiB3Q,IAGpFw5B,EAAKvtB,EAAUV,IACfmuB,EAAKztB,EAAUR,OACf2tB,EAAMH,EAAcF,EACpBO,EAAMF,EAAMR,OACP,GAAa,MAATl2B,EAAc,CACvB,GAAiB,WAAb4e,EACF2X,EAAcD,GAAkB/sB,EAAUP,KAAOO,EAAUT,OAAS,QAC/D,IAAIpN,EAAAA,EAAAA,GAASkjB,GAAW,CAC7B,MAAMqY,EAAiBr7B,OAAOC,KAAK+iB,GAAU,GACvCthB,EAAQshB,EAASqY,GACvBV,EAAcD,EAAiB9hC,KAAKQ,MAAM2L,OAAOs2B,GAAgBhpB,iBAAiB3Q,IAGpFm5B,EAAMF,EAAcF,EACpBM,EAAMF,EAAMP,EACZW,EAAKttB,EAAUP,KACf+tB,EAAKxtB,EAAUT,MAGjB,MAAMouB,GAAQ3zB,EAAAA,EAAAA,GAAe9G,EAAQyR,MAAM0d,cAAeuB,GACpDgK,EAAOvhC,KAAKqC,IAAI,EAAGrC,KAAKy2B,KAAKc,EAAc+J,IACjD,IAAKtgC,EAAI,EAAGA,EAAIu2B,EAAav2B,GAAKugC,EAAM,CACtC,MAAMttB,EAAUrV,KAAKuR,WAAWnP,GAC1BwgC,EAAcxjB,EAAK8b,WAAW7lB,GAC9BwtB,EAAoBlc,EAAOuU,WAAW7lB,GAEtC+P,EAAYwd,EAAYxd,UACxB0d,EAAYF,EAAYt+B,MACxBy+B,EAAaF,EAAkBG,MAAQ,GACvCC,EAAmBJ,EAAkBK,WAErCjF,EAAY2E,EAAY3E,UACxBkF,EAAYP,EAAYO,UACxBC,EAAiBR,EAAYQ,gBAAkB,GAC/CC,EAAuBT,EAAYS,qBAEzClK,EAAYJ,GAAoB/4B,KAAMoC,EAAG+c,QAGvB7e,IAAd64B,IAIJ6I,GAAmBd,EAAAA,EAAAA,GAAY1gC,EAAO24B,EAAW/T,GAE7CtJ,EACFmmB,EAAME,EAAME,EAAKE,EAAKP,EAEtBE,EAAME,EAAME,EAAKE,EAAKR,EAGxB9/B,EAAMiB,KAAK,CACT8+B,MACAC,MACAC,MACAC,MACAC,KACAC,KACAC,KACAC,KACA/lB,MAAO2I,EACP9gB,MAAOw+B,EACPC,aACAE,mBACAhF,YACAkF,YACAC,iBACAC,yBAEJ,CAKA,OAHArjC,KAAK+6B,aAAepC,EACpB34B,KAAKg7B,aAAe+G,EAEb7/B,CACT,CAKAy5B,kBAAAA,CAAmB5mB,GACjB,MAAMvJ,EAAOxL,KAAKwL,KACZvD,EAAUjI,KAAKiI,SACf,SAACmiB,EAAU1Q,MAAO4nB,GAAer5B,EACjC6T,EAAe9b,KAAK8b,eACpBpC,EAAQ1Z,KAAK0Z,OACb,MAACkgB,EAAA,WAAO0J,EAAA,QAAY5T,EAAO,OAAE0P,GAAUkC,EACvCI,EAAKtI,GAAkBnxB,EAAQmX,MAC/BmkB,EAAiB7B,EAAKhS,EACtB8T,EAAkBpE,GAAU1P,EAAU6T,EACtCjjB,IAAYD,EAAAA,EAAAA,GAAUrgB,KAAKq6B,eAC3Bn4B,EAAQ,GACd,IAAIE,EAAGsH,EAAMlH,EAAMuR,EAAOrF,EAAGC,EAAG80B,EAAW1C,EAAOvH,EAAME,EAAYgK,EAAWC,EAC3EC,EAAe,SAEnB,GAAiB,QAAbxZ,EACFzb,EAAI3O,KAAKuU,OAASivB,EAClBC,EAAYzjC,KAAK6jC,+BACZ,GAAiB,WAAbzZ,EACTzb,EAAI3O,KAAKqU,IAAMmvB,EACfC,EAAYzjC,KAAK6jC,+BACZ,GAAiB,SAAbzZ,EAAqB,CAC9B,MAAMqM,EAAMz2B,KAAK8jC,wBAAwBpC,GACzC+B,EAAYhN,EAAIgN,UAChB/0B,EAAI+nB,EAAI/nB,OACH,GAAiB,UAAb0b,EAAsB,CAC/B,MAAMqM,EAAMz2B,KAAK8jC,wBAAwBpC,GACzC+B,EAAYhN,EAAIgN,UAChB/0B,EAAI+nB,EAAI/nB,OACH,GAAa,MAATlD,EAAc,CACvB,GAAiB,WAAb4e,EACFzb,GAAMoG,EAAUV,IAAMU,EAAUR,QAAU,EAAKgvB,OAC1C,IAAIr8B,EAAAA,EAAAA,GAASkjB,GAAW,CAC7B,MAAMqY,EAAiBr7B,OAAOC,KAAK+iB,GAAU,GACvCthB,EAAQshB,EAASqY,GACvB9zB,EAAI3O,KAAKQ,MAAM2L,OAAOs2B,GAAgBhpB,iBAAiB3Q,GAASy6B,EAElEE,EAAYzjC,KAAK6jC,+BACZ,GAAa,MAATr4B,EAAc,CACvB,GAAiB,WAAb4e,EACF1b,GAAMqG,EAAUP,KAAOO,EAAUT,OAAS,EAAKivB,OAC1C,IAAIr8B,EAAAA,EAAAA,GAASkjB,GAAW,CAC7B,MAAMqY,EAAiBr7B,OAAOC,KAAK+iB,GAAU,GACvCthB,EAAQshB,EAASqY,GACvB/zB,EAAI1O,KAAKQ,MAAM2L,OAAOs2B,GAAgBhpB,iBAAiB3Q,GAEzD26B,EAAYzjC,KAAK8jC,wBAAwBpC,GAAI+B,UAGlC,MAATj4B,IACY,UAAVouB,EACFgK,EAAe,MACI,QAAVhK,IACTgK,EAAe,WAInB,MAAMxF,EAAap+B,KAAKq+B,iBACxB,IAAKj8B,EAAI,EAAGsH,EAAOgQ,EAAM7X,OAAQO,EAAIsH,IAAQtH,EAAG,CAC9CI,EAAOkX,EAAMtX,GACb2R,EAAQvR,EAAKuR,MAEb,MAAM6uB,EAActB,EAAYpG,WAAWl7B,KAAKuR,WAAWnP,IAC3D2+B,EAAQ/gC,KAAK2Z,gBAAgBvX,GAAKk/B,EAAYyC,YAC9CvK,EAAOx5B,KAAKugC,wBAAwBn+B,GACpCs3B,EAAaF,EAAKE,WAClBgK,GAAY97B,EAAAA,EAAAA,GAAQmM,GAASA,EAAMlS,OAAS,EAC5C,MAAMmiC,EAAYN,EAAY,EACxBp/B,EAAQs+B,EAAYt+B,MACpB2/B,EAAcrB,EAAYsB,gBAC1BC,EAAcvB,EAAYwB,gBAChC,IA4CIC,EA5CAC,EAAgBb,EA8CpB,GA5CI3nB,GACFpN,EAAIqyB,EAEc,UAAd0C,IAEAa,EADEliC,IAAMsH,EAAO,EACE1J,KAAKiI,QAAQmB,QAAoB,OAAV,QACzB,IAANhH,EACQpC,KAAKiI,QAAQmB,QAAmB,QAAT,OAExB,UAMhBu6B,EAFa,QAAbvZ,EACiB,SAAfkZ,GAAsC,IAAbhjB,GACbojB,EAAYhK,EAAaA,EAAa,EAC5B,WAAf4J,GACKlF,EAAWK,QAAQjiB,OAAS,EAAIwnB,EAAYtK,EAAaA,GAEzD0E,EAAWK,QAAQjiB,OAASkd,EAAa,EAItC,SAAf4J,GAAsC,IAAbhjB,EACdoZ,EAAa,EACF,WAAf4J,EACIlF,EAAWK,QAAQjiB,OAAS,EAAIwnB,EAAYtK,EAE5C0E,EAAWK,QAAQjiB,OAASknB,EAAYhK,EAGrD0F,IACFuE,IAAe,GAEA,IAAbrjB,GAAmBsiB,EAAY2B,oBACjC71B,GAAKgrB,EAAc,EAAKt4B,KAAKwgB,IAAItB,MAGnC3R,EAAIoyB,EACJ4C,GAAc,EAAID,GAAahK,EAAa,GAK1CkJ,EAAY2B,kBAAmB,CACjC,MAAMC,GAAevU,EAAAA,EAAAA,GAAU2S,EAAY6B,iBACrCjoB,EAAS4hB,EAAW4B,QAAQ59B,GAC5Bqa,EAAQ2hB,EAAW2B,OAAO39B,GAEhC,IAAIiS,EAAMsvB,EAAaa,EAAanwB,IAChCG,EAAO,EAAIgwB,EAAahwB,KAE5B,OAAQovB,GACR,IAAK,SACHvvB,GAAOmI,EAAS,EAChB,MACF,IAAK,SACHnI,GAAOmI,EAMT,OAAQinB,GACR,IAAK,SACHjvB,GAAQiI,EAAQ,EAChB,MACF,IAAK,QACHjI,GAAQiI,EACR,MACF,IAAK,QACCra,IAAMsH,EAAO,EACf8K,GAAQiI,EACCra,EAAI,IACboS,GAAQiI,EAAQ,GAOpB4nB,EAAW,CACT7vB,OACAH,MACAoI,MAAOA,EAAQ+nB,EAAa/nB,MAC5BD,OAAQA,EAASgoB,EAAahoB,OAE9BlY,MAAOs+B,EAAY8B,eAIvBxiC,EAAMiB,KAAK,CACT4Q,QACAylB,OACAmK,aACA17B,QAAS,CACPqY,WACAhc,QACA2/B,cACAE,cACAV,UAAWa,EACXV,eACAe,YAAa,CAACj2B,EAAGC,GACjB01B,aAGN,CAEA,OAAOniC,CACT,CAEA2hC,uBAAAA,GACE,MAAM,SAACzZ,EAAA,MAAU1Q,GAAS1Z,KAAKiI,QAG/B,KAFkBoY,EAAAA,EAAAA,GAAUrgB,KAAKq6B,eAG/B,MAAoB,QAAbjQ,EAAqB,OAAS,QAGvC,IAAIwP,EAAQ,SAUZ,MARoB,UAAhBlgB,EAAMkgB,MACRA,EAAQ,OACiB,QAAhBlgB,EAAMkgB,MACfA,EAAQ,QACiB,UAAhBlgB,EAAMkgB,QACfA,EAAQ,SAGHA,CACT,CAEAkK,uBAAAA,CAAwBpC,GACtB,MAAM,SAACtX,EAAU1Q,OAAO,WAAC4pB,EAAA,OAAYlE,EAAA,QAAQ1P,IAAY1vB,KAAKiI,QAExDs7B,EAAiB7B,EAAKhS,EACtB6O,EAFav+B,KAAKq+B,iBAEEE,OAAO9hB,MAEjC,IAAIgnB,EACA/0B,EA0DJ,MAxDiB,SAAb0b,EACEgV,GACF1wB,EAAI1O,KAAKsU,MAAQob,EAEE,SAAf4T,EACFG,EAAY,OACY,WAAfH,GACTG,EAAY,SACZ/0B,GAAM6vB,EAAS,IAEfkF,EAAY,QACZ/0B,GAAK6vB,KAGP7vB,EAAI1O,KAAKsU,MAAQivB,EAEE,SAAfD,EACFG,EAAY,QACY,WAAfH,GACTG,EAAY,SACZ/0B,GAAM6vB,EAAS,IAEfkF,EAAY,OACZ/0B,EAAI1O,KAAKwU,OAGS,UAAb4V,EACLgV,GACF1wB,EAAI1O,KAAKwU,KAAOkb,EAEG,SAAf4T,EACFG,EAAY,QACY,WAAfH,GACTG,EAAY,SACZ/0B,GAAM6vB,EAAS,IAEfkF,EAAY,OACZ/0B,GAAK6vB,KAGP7vB,EAAI1O,KAAKwU,KAAO+uB,EAEG,SAAfD,EACFG,EAAY,OACY,WAAfH,GACTG,EAAY,SACZ/0B,GAAK6vB,EAAS,IAEdkF,EAAY,QACZ/0B,EAAI1O,KAAKsU,QAIbmvB,EAAY,QAGP,CAACA,YAAW/0B,IACrB,CAKAk2B,iBAAAA,GACE,GAAI5kC,KAAKiI,QAAQyR,MAAM0lB,OACrB,OAGF,MAAM5+B,EAAQR,KAAKQ,MACb4pB,EAAWpqB,KAAKiI,QAAQmiB,SAE9B,MAAiB,SAAbA,GAAoC,UAAbA,EAClB,CAAC/V,IAAK,EAAGG,KAAMxU,KAAKwU,KAAMD,OAAQ/T,EAAMgc,OAAQlI,MAAOtU,KAAKsU,OAClD,QAAb8V,GAAmC,WAAbA,EACnB,CAAC/V,IAAKrU,KAAKqU,IAAKG,KAAM,EAAGD,OAAQvU,KAAKuU,OAAQD,MAAO9T,EAAMic,YADlE,CAGJ,CAKAooB,cAAAA,GACE,MAAM,IAAC/3B,EAAK7E,SAAS,gBAAC+c,GAAgB,KAAExQ,EAAI,IAAEH,EAAA,MAAKoI,EAAA,OAAOD,GAAUxc,KAChEglB,IACFlY,EAAIg4B,OACJh4B,EAAIiY,UAAYC,EAChBlY,EAAIi4B,SAASvwB,EAAMH,EAAKoI,EAAOD,GAC/B1P,EAAIk4B,UAER,CAEA1mB,oBAAAA,CAAqBxV,GACnB,MAAMsW,EAAOpf,KAAKiI,QAAQmX,KAC1B,IAAKpf,KAAKm+B,eAAiB/e,EAAK2I,QAC9B,OAAO,EAET,MACMpe,EADQ3J,KAAK0Z,MACCurB,WAAU/wB,GAAKA,EAAEpL,QAAUA,IAC/C,GAAIa,GAAS,EAAG,CAEd,OADayV,EAAK8b,WAAWl7B,KAAKuR,WAAW5H,IACjCyb,UAEd,OAAO,CACT,CAKA8f,QAAAA,CAASnwB,GACP,MAAMqK,EAAOpf,KAAKiI,QAAQmX,KACpBtS,EAAM9M,KAAK8M,IACX5K,EAAQlC,KAAKu6B,iBAAmBv6B,KAAKu6B,eAAiBv6B,KAAKyhC,sBAAsB1sB,IACvF,IAAI3S,EAAGsH,EAEP,MAAMy7B,EAAWA,CAACC,EAAIC,EAAIxgB,KACnBA,EAAMpI,OAAUoI,EAAMvgB,QAG3BwI,EAAIg4B,OACJh4B,EAAIsY,UAAYP,EAAMpI,MACtB3P,EAAImY,YAAcJ,EAAMvgB,MACxBwI,EAAIw4B,YAAYzgB,EAAMke,YAAc,IACpCj2B,EAAIy4B,eAAiB1gB,EAAMoe,iBAE3Bn2B,EAAI04B,YACJ14B,EAAI24B,OAAOL,EAAG12B,EAAG02B,EAAGz2B,GACpB7B,EAAI44B,OAAOL,EAAG32B,EAAG22B,EAAG12B,GACpB7B,EAAI64B,SACJ74B,EAAIk4B,UAAS,EAGf,GAAI5lB,EAAK2I,QACP,IAAK3lB,EAAI,EAAGsH,EAAOxH,EAAML,OAAQO,EAAIsH,IAAQtH,EAAG,CAC9C,MAAMD,EAAOD,EAAME,GAEfgd,EAAKwmB,iBACPT,EACE,CAACz2B,EAAGvM,EAAKkgC,GAAI1zB,EAAGxM,EAAKmgC,IACrB,CAAC5zB,EAAGvM,EAAKogC,GAAI5zB,EAAGxM,EAAKqgC,IACrBrgC,GAIAid,EAAKia,WACP8L,EACE,CAACz2B,EAAGvM,EAAK8/B,IAAKtzB,EAAGxM,EAAK+/B,KACtB,CAACxzB,EAAGvM,EAAKggC,IAAKxzB,EAAGxM,EAAKigC,KACtB,CACE99B,MAAOnC,EAAKghC,UACZ1mB,MAAOta,EAAK87B,UACZ8E,WAAY5gC,EAAKihC,eACjBH,iBAAkB9gC,EAAKkhC,sBAI/B,CAEJ,CAKAwC,UAAAA,GACE,MAAM,MAACrlC,EAAA,IAAOsM,EAAK7E,SAAS,OAAC0e,EAAM,KAAEvH,IAASpf,KACxC2hC,EAAahb,EAAOuU,WAAWl7B,KAAKuR,cACpCqwB,EAAYjb,EAAOoB,QAAU4Z,EAAWllB,MAAQ,EACtD,IAAKmlB,EACH,OAEF,MAAMkE,EAAgB1mB,EAAK8b,WAAWl7B,KAAKuR,WAAW,IAAI6T,UACpD2c,EAAc/hC,KAAKg7B,aACzB,IAAIqH,EAAIE,EAAID,EAAIE,EAEZxiC,KAAK8b,gBACPumB,GAAKnB,EAAAA,EAAAA,GAAY1gC,EAAOR,KAAKwU,KAAMotB,GAAaA,EAAY,EAC5DW,GAAKrB,EAAAA,EAAAA,GAAY1gC,EAAOR,KAAKsU,MAAOwxB,GAAiBA,EAAgB,EACrExD,EAAKE,EAAKT,IAEVO,GAAKpB,EAAAA,EAAAA,GAAY1gC,EAAOR,KAAKqU,IAAKutB,GAAaA,EAAY,EAC3DY,GAAKtB,EAAAA,EAAAA,GAAY1gC,EAAOR,KAAKuU,OAAQuxB,GAAiBA,EAAgB,EACtEzD,EAAKE,EAAKR,GAEZj1B,EAAIg4B,OACJh4B,EAAIsY,UAAYuc,EAAWllB,MAC3B3P,EAAImY,YAAc0c,EAAWr9B,MAE7BwI,EAAI04B,YACJ14B,EAAI24B,OAAOpD,EAAIC,GACfx1B,EAAI44B,OAAOnD,EAAIC,GACf11B,EAAI64B,SAEJ74B,EAAIk4B,SACN,CAKAe,UAAAA,CAAWhxB,GAGT,IAFoB/U,KAAKiI,QAAQyR,MAEhBqO,QACf,OAGF,MAAMjb,EAAM9M,KAAK8M,IAEXgI,EAAO9U,KAAK4kC,oBACd9vB,IACFkxB,EAAAA,EAAAA,GAASl5B,EAAKgI,GAGhB,MAAM5S,EAAQlC,KAAK07B,cAAc3mB,GACjC,IAAK,MAAM5S,KAAQD,EAAO,CACxB,MAAM+jC,EAAoB9jC,EAAK8F,QACzBi4B,EAAW/9B,EAAKq3B,KAChBzlB,EAAQ5R,EAAK4R,MACbpF,EAAIxM,EAAKwhC,YACfuC,EAAAA,EAAAA,GAAWp5B,EAAKiH,EAAO,EAAGpF,EAAGuxB,EAAU+F,EACzC,CAEInxB,IACFqxB,EAAAA,EAAAA,GAAWr5B,EAEf,CAKAs5B,SAAAA,GACE,MAAM,IAACt5B,EAAK7E,SAAS,SAACmiB,EAAQ,MAAEuU,EAAK,QAAEv1B,IAAYpJ,KAEnD,IAAK2+B,EAAM5W,QACT,OAGF,MAAMyR,GAAOC,EAAAA,EAAAA,IAAOkF,EAAMnF,MACpB9J,GAAUO,EAAAA,EAAAA,GAAU0O,EAAMjP,SAC1BkK,EAAQ+E,EAAM/E,MACpB,IAAIza,EAASqa,EAAKE,WAAa,EAEd,WAAbtP,GAAsC,WAAbA,IAAyBljB,EAAAA,EAAAA,GAASkjB,IAC7DjL,GAAUuQ,EAAQnb,QACd3M,EAAAA,EAAAA,GAAQ+2B,EAAM7Z,QAChB3F,GAAUqa,EAAKE,YAAciF,EAAM7Z,KAAKjjB,OAAS,KAGnDsd,GAAUuQ,EAAQrb,IAGpB,MAAM,OAACgyB,EAAA,OAAQC,EAAA,SAAQ5jB,EAAQ,SAAEpC,GAv8CrC,SAAmBrX,EAAOkW,EAAQiL,EAAUwP,GAC1C,MAAM,IAACvlB,EAAG,KAAEG,EAAI,OAAED,EAAM,MAAED,EAAK,MAAE9T,GAASyI,GACpC,UAAC8L,EAAA,OAAW5I,GAAU3L,EAC5B,IACIkiB,EAAU2jB,EAAQC,EADlBhmB,EAAW,EAEf,MAAM9D,EAASjI,EAASF,EAClBoI,EAAQnI,EAAQE,EAEtB,GAAIvL,EAAM6S,eAAgB,CAGxB,GAFAuqB,GAASE,EAAAA,EAAAA,IAAe3M,EAAOplB,EAAMF,IAEjCpN,EAAAA,EAAAA,GAASkjB,GAAW,CACtB,MAAMqY,EAAiBr7B,OAAOC,KAAK+iB,GAAU,GACvCthB,EAAQshB,EAASqY,GACvB6D,EAASn6B,EAAOs2B,GAAgBhpB,iBAAiB3Q,GAAS0T,EAAS2C,OAEnEmnB,EADsB,WAAblc,GACCrV,EAAUR,OAASQ,EAAUV,KAAO,EAAImI,EAAS2C,EAElDsZ,GAAexvB,EAAOmhB,EAAUjL,GAE3CuD,EAAWpO,EAAQE,MACd,CACL,IAAItN,EAAAA,EAAAA,GAASkjB,GAAW,CACtB,MAAMqY,EAAiBr7B,OAAOC,KAAK+iB,GAAU,GACvCthB,EAAQshB,EAASqY,GACvB4D,EAASl6B,EAAOs2B,GAAgBhpB,iBAAiB3Q,GAAS2T,EAAQ0C,OAElEknB,EADsB,WAAbjc,GACCrV,EAAUP,KAAOO,EAAUT,OAAS,EAAImI,EAAQ0C,EAEjDsZ,GAAexvB,EAAOmhB,EAAUjL,GAE3CmnB,GAASC,EAAAA,EAAAA,IAAe3M,EAAOrlB,EAAQF,GACvCiM,EAAwB,SAAb8J,GAAuB/H,EAAAA,EAAUA,EAAAA,EAE9C,MAAO,CAACgkB,SAAQC,SAAQ5jB,WAAUpC,WACpC,CAo6CiDkmB,CAAUxmC,KAAMmf,EAAQiL,EAAUwP,IAE/EsM,EAAAA,EAAAA,GAAWp5B,EAAK6xB,EAAM7Z,KAAM,EAAG,EAAG0U,EAAM,CACtCl1B,MAAOq6B,EAAMr6B,MACboe,WACApC,WACAmjB,UAAW9J,GAAWC,EAAOxP,EAAUhhB,GACvCw6B,aAAc,SACde,YAAa,CAAC0B,EAAQC,IAE1B,CAEAjkC,IAAAA,CAAK0S,GACE/U,KAAKm+B,eAIVn+B,KAAK6kC,iBACL7kC,KAAKklC,SAASnwB,GACd/U,KAAK6lC,aACL7lC,KAAKomC,YACLpmC,KAAK+lC,WAAWhxB,GAClB,CAMA6a,OAAAA,GACE,MAAMzmB,EAAOnJ,KAAKiI,QACZw+B,EAAKt9B,EAAKuQ,OAASvQ,EAAKuQ,MAAMmW,GAAK,EACnC6W,GAAK33B,EAAAA,EAAAA,GAAe5F,EAAKiW,MAAQjW,EAAKiW,KAAKyQ,GAAI,GAC/C8W,GAAK53B,EAAAA,EAAAA,GAAe5F,EAAKwd,QAAUxd,EAAKwd,OAAOkJ,EAAG,GAExD,OAAK7vB,KAAKm+B,cAAgBn+B,KAAKqC,OAAS03B,GAAM/Q,UAAU3mB,KAUjD,CAAC,CACNwtB,EAAG6W,EACHrkC,KAAO0S,IACL/U,KAAK6kC,iBACL7kC,KAAKklC,SAASnwB,GACd/U,KAAKomC,WAAW,GAEjB,CACDvW,EAAG8W,EACHtkC,KAAMA,KACJrC,KAAK6lC,YAAY,GAElB,CACDhW,EAAG4W,EACHpkC,KAAO0S,IACL/U,KAAK+lC,WAAWhxB,EAAA,IAvBX,CAAC,CACN8a,EAAG4W,EACHpkC,KAAO0S,IACL/U,KAAKqC,KAAK0S,EAAA,GAuBlB,CAOA/J,uBAAAA,CAAwBrK,GACtB,MAAM26B,EAAQt7B,KAAKQ,MAAM8pB,+BACnBsc,EAAS5mC,KAAKwL,KAAO,SACrBgsB,EAAS,GACf,IAAIp1B,EAAGsH,EAEP,IAAKtH,EAAI,EAAGsH,EAAO4xB,EAAMz5B,OAAQO,EAAIsH,IAAQtH,EAAG,CAC9C,MAAMkI,EAAOgxB,EAAMl5B,GACfkI,EAAKs8B,KAAY5mC,KAAK6L,IAAQlL,GAAQ2J,EAAK3J,OAASA,GACtD62B,EAAOr0B,KAAKmH,EAEhB,CACA,OAAOktB,CACT,CAOA+I,uBAAAA,CAAwB52B,GACtB,MAAMR,EAAOnJ,KAAKiI,QAAQyR,MAAMwhB,WAAWl7B,KAAKuR,WAAW5H,IAC3D,OAAO8vB,EAAAA,EAAAA,IAAOtwB,EAAKqwB,KACrB,CAKAqN,UAAAA,GACE,MAAMC,EAAW9mC,KAAKugC,wBAAwB,GAAG7G,WACjD,OAAQ15B,KAAK8b,eAAiB9b,KAAKyc,MAAQzc,KAAKwc,QAAUsqB,CAC5D,ECtqDa,MAAMC,GACnBhnC,WAAAA,CAAYY,EAAMqmC,EAAOle,GACvB9oB,KAAKW,KAAOA,EACZX,KAAKgnC,MAAQA,EACbhnC,KAAK8oB,SAAWA,EAChB9oB,KAAKkC,MAAQkF,OAAO6/B,OAAO,KAC7B,CAEAC,SAAAA,CAAUvmC,GACR,OAAOyG,OAAO4hB,UAAUme,cAAc1lC,KAAKzB,KAAKW,KAAKqoB,UAAWroB,EAAKqoB,UACvE,CAMAoe,QAAAA,CAASjlC,GACP,MAAMklC,EAAQjgC,OAAOkgC,eAAenlC,GACpC,IAAIolC,GAyFR,SAA2BF,GACzB,MAAO,OAAQA,GAAS,aAAcA,CACxC,EAzFQG,CAAkBH,KAEpBE,EAAcvnC,KAAKonC,SAASC,IAG9B,MAAMnlC,EAAQlC,KAAKkC,MACb2J,EAAK1J,EAAK0J,GACVm7B,EAAQhnC,KAAKgnC,MAAQ,IAAMn7B,EAEjC,IAAKA,EACH,MAAM,IAAI+c,MAAM,2BAA6BzmB,GAG/C,OAAI0J,KAAM3J,IAKVA,EAAM2J,GAAM1J,EAsChB,SAA0BA,EAAM6kC,EAAOO,GAErC,MAAME,GAAeC,EAAAA,EAAAA,IAAMtgC,OAAO6/B,OAAO,MAAO,CAC9CM,EAAcjgC,EAAAA,EAAS1E,IAAI2kC,GAAe,CAAC,EAC3CjgC,EAAAA,EAAS1E,IAAIokC,GACb7kC,EAAKmF,WAGPA,EAAAA,EAASvE,IAAIikC,EAAOS,GAEhBtlC,EAAKwlC,eASX,SAAuBX,EAAOY,GAC5BxgC,OAAOC,KAAKugC,GAAQ5mC,SAAQ6mC,IAC1B,MAAMC,EAAgBD,EAASE,MAAM,KAC/BC,EAAaF,EAAcrlC,MAC3BwlC,EAAc,CAACjB,GAAOp7B,OAAOk8B,GAAeI,KAAK,KACjDC,EAAQP,EAAOC,GAAUE,MAAM,KAC/BK,EAAaD,EAAM1lC,MACnB4lC,EAAcF,EAAMD,KAAK,KAC/B5gC,EAAAA,EAASghC,MAAML,EAAaD,EAAYK,EAAaD,EAAA,GAEzD,CAlBIG,CAAcvB,EAAO7kC,EAAKwlC,eAGxBxlC,EAAKqmC,aACPlhC,EAAAA,EAASmhC,SAASzB,EAAO7kC,EAAKqmC,YAElC,CAtDIE,CAAiBvmC,EAAM6kC,EAAOO,GAC1BvnC,KAAK8oB,UACPxhB,EAAAA,EAASwhB,SAAS3mB,EAAK0J,GAAI1J,EAAKwmC,YANzB3B,CAUX,CAMApkC,GAAAA,CAAIiJ,GACF,OAAO7L,KAAKkC,MAAM2J,EACpB,CAKA+8B,UAAAA,CAAWzmC,GACT,MAAMD,EAAQlC,KAAKkC,MACb2J,EAAK1J,EAAK0J,GACVm7B,EAAQhnC,KAAKgnC,MAEfn7B,KAAM3J,UACDA,EAAM2J,GAGXm7B,GAASn7B,KAAMvE,EAAAA,EAAS0/B,YACnB1/B,EAAAA,EAAS0/B,GAAOn7B,GACnB7L,KAAK8oB,iBACA6f,EAAAA,GAAU98B,GAGvB,ECtEK,MAAMg9B,GACX9oC,WAAAA,GACEC,KAAK8oC,YAAc,IAAI/B,GAAcn6B,EAAmB,YAAY,GACpE5M,KAAK6U,SAAW,IAAIkyB,GAAc1Q,GAAS,YAC3Cr2B,KAAKwkB,QAAU,IAAIuiB,GAAc3/B,OAAQ,WACzCpH,KAAKmM,OAAS,IAAI46B,GAAchN,GAAO,UAGvC/5B,KAAK+oC,iBAAmB,CAAC/oC,KAAK8oC,YAAa9oC,KAAKmM,OAAQnM,KAAK6U,SAC/D,CAKAzR,GAAAA,GAAa,QAAA4lC,EAAApnC,UAAAC,OAANwW,EAAI,IAAA5H,MAAAu4B,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ5wB,EAAI4wB,GAAArnC,UAAAqnC,GACTjpC,KAAKkpC,MAAM,WAAY7wB,EACzB,CAEAxU,MAAAA,GAAgB,QAAAslC,EAAAvnC,UAAAC,OAANwW,EAAI,IAAA5H,MAAA04B,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ/wB,EAAI+wB,GAAAxnC,UAAAwnC,GACZppC,KAAKkpC,MAAM,aAAc7wB,EAC3B,CAKAgxB,cAAAA,GAAwB,QAAAC,EAAA1nC,UAAAC,OAANwW,EAAI,IAAA5H,MAAA64B,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJlxB,EAAIkxB,GAAA3nC,UAAA2nC,GACpBvpC,KAAKkpC,MAAM,WAAY7wB,EAAMrY,KAAK8oC,YACpC,CAKA76B,WAAAA,GAAqB,QAAAu7B,EAAA5nC,UAAAC,OAANwW,EAAI,IAAA5H,MAAA+4B,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJpxB,EAAIoxB,GAAA7nC,UAAA6nC,GACjBzpC,KAAKkpC,MAAM,WAAY7wB,EAAMrY,KAAK6U,SACpC,CAKA60B,UAAAA,GAAoB,QAAAC,EAAA/nC,UAAAC,OAANwW,EAAI,IAAA5H,MAAAk5B,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJvxB,EAAIuxB,GAAAhoC,UAAAgoC,GAChB5pC,KAAKkpC,MAAM,WAAY7wB,EAAMrY,KAAKwkB,QACpC,CAKAqlB,SAAAA,GAAmB,QAAAC,EAAAloC,UAAAC,OAANwW,EAAI,IAAA5H,MAAAq5B,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ1xB,EAAI0xB,GAAAnoC,UAAAmoC,GACf/pC,KAAKkpC,MAAM,WAAY7wB,EAAMrY,KAAKmM,OACpC,CAMA69B,aAAAA,CAAcn+B,GACZ,OAAO7L,KAAKiqC,KAAKp+B,EAAI7L,KAAK8oC,YAAa,aACzC,CAMArgB,UAAAA,CAAW5c,GACT,OAAO7L,KAAKiqC,KAAKp+B,EAAI7L,KAAK6U,SAAU,UACtC,CAMAq1B,SAAAA,CAAUr+B,GACR,OAAO7L,KAAKiqC,KAAKp+B,EAAI7L,KAAKwkB,QAAS,SACrC,CAMA2lB,QAAAA,CAASt+B,GACP,OAAO7L,KAAKiqC,KAAKp+B,EAAI7L,KAAKmM,OAAQ,QACpC,CAKAi+B,iBAAAA,GAA2B,QAAAC,EAAAzoC,UAAAC,OAANwW,EAAI,IAAA5H,MAAA45B,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJjyB,EAAIiyB,GAAA1oC,UAAA0oC,GACvBtqC,KAAKkpC,MAAM,aAAc7wB,EAAMrY,KAAK8oC,YACtC,CAKAyB,cAAAA,GAAwB,QAAAC,EAAA5oC,UAAAC,OAANwW,EAAI,IAAA5H,MAAA+5B,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJpyB,EAAIoyB,GAAA7oC,UAAA6oC,GACpBzqC,KAAKkpC,MAAM,aAAc7wB,EAAMrY,KAAK6U,SACtC,CAKA61B,aAAAA,GAAuB,QAAAC,EAAA/oC,UAAAC,OAANwW,EAAI,IAAA5H,MAAAk6B,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJvyB,EAAIuyB,GAAAhpC,UAAAgpC,GACnB5qC,KAAKkpC,MAAM,aAAc7wB,EAAMrY,KAAKwkB,QACtC,CAKAqmB,YAAAA,GAAsB,QAAAC,EAAAlpC,UAAAC,OAANwW,EAAI,IAAA5H,MAAAq6B,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ1yB,EAAI0yB,GAAAnpC,UAAAmpC,GAClB/qC,KAAKkpC,MAAM,aAAc7wB,EAAMrY,KAAKmM,OACtC,CAKA+8B,KAAAA,CAAMtiC,EAAQyR,EAAM2yB,GAClB,IAAI3yB,GAAMrX,SAAQiqC,IAChB,MAAMC,EAAMF,GAAiBhrC,KAAKmrC,oBAAoBF,GAClDD,GAAiBE,EAAIhE,UAAU+D,IAASC,IAAQlrC,KAAKwkB,SAAWymB,EAAIp/B,GACtE7L,KAAKorC,MAAMxkC,EAAQskC,EAAKD,IAMxBra,EAAAA,EAAAA,GAAKqa,GAAK9oC,IAOR,MAAMkpC,EAAUL,GAAiBhrC,KAAKmrC,oBAAoBhpC,GAC1DnC,KAAKorC,MAAMxkC,EAAQykC,EAASlpC,EAAA,MAIpC,CAKAipC,KAAAA,CAAMxkC,EAAQ4hB,EAAU8iB,GACtB,MAAMC,GAAcC,EAAAA,EAAAA,IAAY5kC,IAChCi1B,EAAAA,EAAAA,GAAKyP,EAAU,SAAWC,GAAc,GAAID,GAC5C9iB,EAAS5hB,GAAQ0kC,IACjBzP,EAAAA,EAAAA,GAAKyP,EAAU,QAAUC,GAAc,GAAID,EAC7C,CAKAH,mBAAAA,CAAoBxqC,GAClB,IAAK,IAAIyB,EAAI,EAAGA,EAAIpC,KAAK+oC,iBAAiBlnC,OAAQO,IAAK,CACrD,MAAM8oC,EAAMlrC,KAAK+oC,iBAAiB3mC,GAClC,GAAI8oC,EAAIhE,UAAUvmC,GAChB,OAAOuqC,CAEX,CAEA,OAAOlrC,KAAKwkB,OACd,CAKAylB,IAAAA,CAAKp+B,EAAIm/B,EAAerqC,GACtB,MAAMwB,EAAO6oC,EAAcpoC,IAAIiJ,GAC/B,QAAavL,IAAT6B,EACF,MAAM,IAAIymB,MAAM,IAAM/c,EAAK,yBAA2BlL,EAAO,KAE/D,OAAOwB,CACT,EAKF,IAAAqmB,GAA+B,IAAIqgB,GCtKpB,MAAM4C,GACnB1rC,WAAAA,GACEC,KAAK0rC,MAAQ,EACf,CAYAC,MAAAA,CAAOnrC,EAAOorC,EAAMvzB,EAAMjM,GACX,eAATw/B,IACF5rC,KAAK0rC,MAAQ1rC,KAAK6rC,mBAAmBrrC,GAAO,GAC5CR,KAAKO,QAAQP,KAAK0rC,MAAOlrC,EAAO,YAGlC,MAAMgoC,EAAcp8B,EAASpM,KAAK8rC,aAAatrC,GAAO4L,OAAOA,GAAUpM,KAAK8rC,aAAatrC,GACnFg3B,EAASx3B,KAAKO,QAAQioC,EAAahoC,EAAOorC,EAAMvzB,GAMtD,MAJa,iBAATuzB,IACF5rC,KAAKO,QAAQioC,EAAahoC,EAAO,QACjCR,KAAKO,QAAQP,KAAK0rC,MAAOlrC,EAAO,cAE3Bg3B,CACT,CAKAj3B,OAAAA,CAAQioC,EAAahoC,EAAOorC,EAAMvzB,GAChCA,EAAOA,GAAQ,CAAC,EAChB,IAAK,MAAM0zB,KAAcvD,EAAa,CACpC,MAAMwD,EAASD,EAAWC,OACpBplC,EAASolC,EAAOJ,GAChB3e,EAAS,CAACzsB,EAAO6X,EAAM0zB,EAAW9jC,SACxC,IAA6C,KAAzC4zB,EAAAA,EAAAA,GAAaj1B,EAAQqmB,EAAQ+e,IAAqB3zB,EAAK4zB,WACzD,OAAO,CAEX,CAEA,OAAO,CACT,CAEAC,UAAAA,IAMOhwB,EAAAA,EAAAA,GAAclc,KAAK8Y,UACtB9Y,KAAKmsC,UAAYnsC,KAAK8Y,OACtB9Y,KAAK8Y,YAASxY,EAElB,CAMAwrC,YAAAA,CAAatrC,GACX,GAAIR,KAAK8Y,OACP,OAAO9Y,KAAK8Y,OAGd,MAAM0vB,EAAcxoC,KAAK8Y,OAAS9Y,KAAK6rC,mBAAmBrrC,GAI1D,OAFAR,KAAKosC,oBAAoB5rC,GAElBgoC,CACT,CAEAqD,kBAAAA,CAAmBrrC,EAAOiI,GACxB,MAAM3B,EAAStG,GAASA,EAAMsG,OACxBmB,GAAU8G,EAAAA,EAAAA,GAAejI,EAAOmB,SAAWnB,EAAOmB,QAAQuc,QAAS,CAAC,GACpEA,EAqBV,SAAoB1d,GAClB,MAAMulC,EAAW,CAAC,EACZ7nB,EAAU,GACVnd,EAAOD,OAAOC,KAAKmhB,GAAShE,QAAQtiB,OAC1C,IAAK,IAAIE,EAAI,EAAGA,EAAIiF,EAAKxF,OAAQO,IAC/BoiB,EAAQrhB,KAAKqlB,GAAS0hB,UAAU7iC,EAAKjF,KAGvC,MAAMkqC,EAAQxlC,EAAO0d,SAAW,GAChC,IAAK,IAAIpiB,EAAI,EAAGA,EAAIkqC,EAAMzqC,OAAQO,IAAK,CACrC,MAAM4pC,EAASM,EAAMlqC,IAEY,IAA7BoiB,EAAQxH,QAAQgvB,KAClBxnB,EAAQrhB,KAAK6oC,GACbK,EAASL,EAAOngC,KAAM,EAE1B,CAEA,MAAO,CAAC2Y,UAAS6nB,WACnB,CAxCoBE,CAAWzlC,GAE3B,OAAmB,IAAZmB,GAAsBQ,EAkDjC,SAA2BjI,EAAKgsC,EAAuBvkC,EAASQ,GAAK,IAAnC,QAAC+b,EAAO,SAAE6nB,GAASG,EACnD,MAAMhV,EAAS,GACTniB,EAAU7U,EAAM+Q,aAEtB,IAAK,MAAMy6B,KAAUxnB,EAAS,CAC5B,MAAM3Y,EAAKmgC,EAAOngC,GACZ1C,EAAOsjC,GAAQxkC,EAAQ4D,GAAKpD,GACrB,OAATU,GAGJquB,EAAOr0B,KAAK,CACV6oC,SACA/jC,QAASykC,GAAWlsC,EAAMsG,OAAQ,CAACklC,SAAQM,MAAOD,EAASxgC,IAAM1C,EAAMkM,IAE3E,CAEA,OAAOmiB,CACT,CAnE4CmV,CAAkBnsC,EAAOgkB,EAASvc,EAASQ,GAAhD,EACrC,CAMA2jC,mBAAAA,CAAoB5rC,GAClB,MAAMosC,EAAsB5sC,KAAKmsC,WAAa,GACxC3D,EAAcxoC,KAAK8Y,OACnBsQ,EAAOA,CAACjQ,EAAGhF,IAAMgF,EAAE/M,QAAOsC,IAAMyF,EAAE04B,MAAKl+B,GAAKD,EAAEs9B,OAAOngC,KAAO8C,EAAEq9B,OAAOngC,OAC3E7L,KAAKO,QAAQ6oB,EAAKwjB,EAAqBpE,GAAchoC,EAAO,QAC5DR,KAAKO,QAAQ6oB,EAAKof,EAAaoE,GAAsBpsC,EAAO,QAC9D,EA2BF,SAASisC,GAAQxkC,EAASQ,GACxB,OAAKA,IAAmB,IAAZR,GAGI,IAAZA,EACK,CAAC,EAEHA,EALE,IAMX,CAqBA,SAASykC,GAAW5lC,EAAMgmC,EAAmB3jC,EAAMkM,GAAS,IAAhC,OAAC22B,EAAM,MAAEM,GAAMQ,EACzC,MAAMzlC,EAAOP,EAAOimC,gBAAgBf,GAC9B56B,EAAStK,EAAOuK,gBAAgBlI,EAAM9B,GAK5C,OAJIilC,GAASN,EAAO1kC,UAElB8J,EAAOjO,KAAK6oC,EAAO1kC,UAEdR,EAAOwK,eAAeF,EAAQiE,EAAS,CAAC,IAAK,CAElD23B,YAAY,EACZC,WAAW,EACXC,SAAS,GAEb,CClLO,SAASC,GAAaxsC,EAAMsH,GACjC,MAAMmlC,EAAkB9lC,EAAAA,EAASwI,SAASnP,IAAS,CAAC,EAEpD,QADwBsH,EAAQ6H,UAAY,CAAC,GAAGnP,IAAS,CAAC,GACpCyO,WAAanH,EAAQmH,WAAag+B,EAAgBh+B,WAAa,GACvF,CAgBA,SAASi+B,GAAcxhC,GACrB,GAAW,MAAPA,GAAqB,MAAPA,GAAqB,MAAPA,EAC9B,OAAOA,CAEX,CAWO,SAASyhC,GAAczhC,GAC5B,GAAIwhC,GAAcxhC,GAChB,OAAOA,EACR,QAAA0hC,EAAA3rC,UAAAC,OAHkC2rC,EAAY,IAAA/8B,MAAA88B,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAZD,EAAYC,EAAA,GAAA7rC,UAAA6rC,GAI/C,IAAK,MAAMtkC,KAAQqkC,EAAc,CAC/B,MAAMhiC,EAAOrC,EAAKqC,OAbH,SADO4e,EAeAjhB,EAAKihB,WAdU,WAAbA,EACjB,IAEQ,SAAbA,GAAoC,UAAbA,EAClB,SADT,IAYOve,EAAGhK,OAAS,GAAKwrC,GAAcxhC,EAAG,GAAG6hC,eAC1C,GAAIliC,EACF,OAAOA,CAEX,CApBF,IAA0B4e,EAqBxB,MAAM,IAAIxB,MAAA,6BAAAhd,OAAmCC,EAAG,uDAClD,CAEA,SAAS8hC,GAAmB9hC,EAAIL,EAAM+C,GACpC,GAAIA,EAAQ/C,EAAO,YAAcK,EAC/B,MAAO,CAACL,OAEZ,CAYA,SAASoiC,GAAiB9mC,EAAQmB,GAChC,MAAM4lC,EAAgBlF,EAAAA,GAAU7hC,EAAOnG,OAAS,CAACwL,OAAQ,CAAC,GACpD2hC,EAAe7lC,EAAQkE,QAAU,CAAC,EAClC4hC,EAAiBZ,GAAarmC,EAAOnG,KAAMsH,GAC3CkE,EAAS/E,OAAO6/B,OAAO,MAqC7B,OAlCA7/B,OAAOC,KAAKymC,GAAc9sC,SAAQ6K,IAChC,MAAMmiC,EAAYF,EAAajiC,GAC/B,KAAK3E,EAAAA,EAAAA,GAAS8mC,GACZ,OAAO5/B,QAAQ6/B,MAAM,0CAADriC,OAA2CC,IAEjE,GAAImiC,EAAUE,OACZ,OAAO9/B,QAAQC,KAAK,kDAADzC,OAAmDC,IAExE,MAAML,EAAO8hC,GAAczhC,EAAImiC,EAzBnC,SAAkCniC,EAAI/E,GACpC,GAAIA,EAAO+I,MAAQ/I,EAAO+I,KAAKC,SAAU,CACvC,MAAMq+B,EAAUrnC,EAAO+I,KAAKC,SAAS1D,QAAQgiC,GAAMA,EAAEt/B,UAAYjD,GAAMuiC,EAAEn/B,UAAYpD,IACrF,GAAIsiC,EAAQtsC,OACV,OAAO8rC,GAAmB9hC,EAAI,IAAKsiC,EAAQ,KAAOR,GAAmB9hC,EAAI,IAAKsiC,EAAQ,IAG1F,MAAO,CAAC,CACV,CAiB8CE,CAAyBxiC,EAAI/E,GAASQ,EAAAA,EAAS6E,OAAO6hC,EAAUrtC,OACpG2tC,EAlEV,SAAmC9iC,EAAM4D,GACvC,OAAO5D,IAAS4D,EAAY,UAAY,SAC1C,CAgEsBm/B,CAA0B/iC,EAAMuiC,GAC5CS,EAAsBX,EAAc1hC,QAAU,CAAC,EACrDA,EAAON,IAAM4iC,EAAAA,EAAAA,IAAQrnC,OAAO6/B,OAAO,MAAO,CAAC,CAACz7B,QAAOwiC,EAAWQ,EAAoBhjC,GAAOgjC,EAAoBF,IAAY,IAI3HxnC,EAAO+I,KAAKC,SAAS9O,SAAQuN,IAC3B,MAAM5N,EAAO4N,EAAQ5N,MAAQmG,EAAOnG,KAC9ByO,EAAYb,EAAQa,WAAa+9B,GAAaxsC,EAAMsH,GAEpDumC,GADkB7F,EAAAA,GAAUhoC,IAAS,CAAC,GACAwL,QAAU,CAAC,EACvD/E,OAAOC,KAAKmnC,GAAqBxtC,SAAQ0tC,IACvC,MAAMljC,EAxFZ,SAAmCK,EAAIuD,GACrC,IAAI5D,EAAOK,EAMX,MALW,YAAPA,EACFL,EAAO4D,EACS,YAAPvD,IACTL,EAAqB,MAAd4D,EAAoB,IAAM,KAE5B5D,CACT,CAgFmBmjC,CAA0BD,EAAWt/B,GAC5CvD,EAAK0C,EAAQ/C,EAAO,WAAaA,EACvCW,EAAON,GAAMM,EAAON,IAAOzE,OAAO6/B,OAAO,OACzCwH,EAAAA,EAAAA,IAAQtiC,EAAON,GAAK,CAAC,CAACL,QAAOsiC,EAAajiC,GAAK2iC,EAAoBE,IAAY,GAC/E,IAIJtnC,OAAOC,KAAK8E,GAAQnL,SAAQ0G,IAC1B,MAAMuB,EAAQkD,EAAOzE,IACrB+mC,EAAAA,EAAAA,IAAQxlC,EAAO,CAAC3B,EAAAA,EAAS6E,OAAOlD,EAAMtI,MAAO2G,EAAAA,EAAS2B,OAAO,IAGxDkD,CACT,CAEA,SAASyiC,GAAY9nC,GACnB,MAAMmB,EAAUnB,EAAOmB,UAAYnB,EAAOmB,QAAU,CAAC,GAErDA,EAAQuc,SAAUzV,EAAAA,EAAAA,GAAe9G,EAAQuc,QAAS,CAAC,GACnDvc,EAAQkE,OAASyhC,GAAiB9mC,EAAQmB,EAC5C,CAEA,SAAS4mC,GAASh/B,GAIhB,OAHAA,EAAOA,GAAQ,CAAC,GACXC,SAAWD,EAAKC,UAAY,GACjCD,EAAKqC,OAASrC,EAAKqC,QAAU,GACtBrC,CACT,CAWA,MAAMi/B,GAAW,IAAI3uC,IACf4uC,GAAa,IAAIC,IAEvB,SAASC,GAAWl5B,EAAUm5B,GAC5B,IAAI7nC,EAAOynC,GAASlsC,IAAImT,GAMxB,OALK1O,IACHA,EAAO6nC,IACPJ,GAAS/rC,IAAIgT,EAAU1O,GACvB0nC,GAAW3rC,IAAIiE,IAEVA,CACT,CAEA,MAAM8nC,GAAaA,CAACpsC,EAAK2Y,EAAKhU,KAC5B,MAAMyB,GAAOoJ,EAAAA,EAAAA,GAAiBmJ,EAAKhU,QACtBpH,IAAT6I,GACFpG,EAAIK,IAAI+F,IAIG,MAAMimC,GACnBrvC,WAAAA,CAAY+G,GACV9G,KAAKqvC,QA/BT,SAAoBvoC,GAMlB,OALAA,EAASA,GAAU,CAAC,GACb+I,KAAOg/B,GAAS/nC,EAAO+I,MAE9B++B,GAAY9nC,GAELA,CACT,CAwBmBwoC,CAAWxoC,GAC1B9G,KAAKuvC,YAAc,IAAIpvC,IACvBH,KAAKwvC,eAAiB,IAAIrvC,GAC5B,CAEA,YAAIsvC,GACF,OAAOzvC,KAAKqvC,QAAQI,QACtB,CAEA,QAAI9uC,GACF,OAAOX,KAAKqvC,QAAQ1uC,IACtB,CAEA,QAAIA,CAAKA,GACPX,KAAKqvC,QAAQ1uC,KAAOA,CACtB,CAEA,QAAIkP,GACF,OAAO7P,KAAKqvC,QAAQx/B,IACtB,CAEA,QAAIA,CAAKA,GACP7P,KAAKqvC,QAAQx/B,KAAOg/B,GAASh/B,EAC/B,CAEA,WAAI5H,GACF,OAAOjI,KAAKqvC,QAAQpnC,OACtB,CAEA,WAAIA,CAAQA,GACVjI,KAAKqvC,QAAQpnC,QAAUA,CACzB,CAEA,WAAIuc,GACF,OAAOxkB,KAAKqvC,QAAQ7qB,OACtB,CAEAre,MAAAA,GACE,MAAMW,EAAS9G,KAAKqvC,QACpBrvC,KAAK0vC,aACLd,GAAY9nC,EACd,CAEA4oC,UAAAA,GACE1vC,KAAKuvC,YAAYI,QACjB3vC,KAAKwvC,eAAeG,OACtB,CAQAx+B,gBAAAA,CAAiBy+B,GACf,OAAOX,GAAWW,GAChB,IAAM,CAAC,CAAC,YAADhkC,OACOgkC,GACZ,MAEN,CASAn5B,yBAAAA,CAA0Bm5B,EAAap5B,GACrC,OAAOy4B,GAAA,GAAArjC,OAAcgkC,EAAA,gBAAAhkC,OAA0B4K,IAC7C,IAAM,CACJ,CAAC,YAAD5K,OACcgkC,EAAA,iBAAAhkC,OAA2B4K,GAAA,eAAA5K,OACxB4K,IAGjB,CAAC,YAAD5K,OACcgkC,GACZ,MAGR,CAUA15B,uBAAAA,CAAwB05B,EAAa/5B,GACnC,OAAOo5B,GAAA,GAAArjC,OAAcgkC,EAAA,KAAAhkC,OAAeiK,IAClC,IAAM,CAAC,CAAC,YAADjK,OACOgkC,EAAA,cAAAhkC,OAAwBiK,GAAA,YAAAjK,OACxBgkC,GAAA,YAAAhkC,OACAiK,GACZ,MAEN,CAOAk3B,eAAAA,CAAgBf,GACd,MAAMngC,EAAKmgC,EAAOngC,GACZlL,EAAOX,KAAKW,KAClB,OAAOsuC,GAAA,GAAArjC,OAAcjL,EAAA,YAAAiL,OAAeC,IAClC,IAAM,CAAC,CAAC,WAADD,OACMC,MACRmgC,EAAO6D,wBAA0B,MAE1C,CAKAC,aAAAA,CAAcC,EAAWC,GACvB,MAAMT,EAAcvvC,KAAKuvC,YACzB,IAAIz5B,EAAQy5B,EAAY3sC,IAAImtC,GAK5B,OAJKj6B,IAASk6B,IACZl6B,EAAQ,IAAI3V,IACZovC,EAAYxsC,IAAIgtC,EAAWj6B,IAEtBA,CACT,CAQAzE,eAAAA,CAAgB0+B,EAAWE,EAAUD,GACnC,MAAM,QAAC/nC,EAAO,KAAEtH,GAAQX,KAClB8V,EAAQ9V,KAAK8vC,cAAcC,EAAWC,GACtCtjC,EAASoJ,EAAMlT,IAAIqtC,GACzB,GAAIvjC,EACF,OAAOA,EAGT,MAAM0E,EAAS,IAAI49B,IAEnBiB,EAASjvC,SAAQqG,IACX0oC,IACF3+B,EAAOhO,IAAI2sC,GACX1oC,EAAKrG,SAAQ0G,GAAOynC,GAAW/9B,EAAQ2+B,EAAWroC,MAEpDL,EAAKrG,SAAQ0G,GAAOynC,GAAW/9B,EAAQnJ,EAASP,KAChDL,EAAKrG,SAAQ0G,GAAOynC,GAAW/9B,EAAQu3B,EAAAA,GAAUhoC,IAAS,CAAC,EAAG+G,KAC9DL,EAAKrG,SAAQ0G,GAAOynC,GAAW/9B,EAAQ9J,EAAAA,EAAUI,KACjDL,EAAKrG,SAAQ0G,GAAOynC,GAAW/9B,EAAQo3B,EAAAA,GAAa9gC,IAAA,IAGtD,MAAM+kB,EAAQhc,MAAMtM,KAAKiN,GAOzB,OANqB,IAAjBqb,EAAM5qB,QACR4qB,EAAMtpB,KAAKiE,OAAO6/B,OAAO,OAEvB8H,GAAW1rC,IAAI4sC,IACjBn6B,EAAM/S,IAAIktC,EAAUxjB,GAEfA,CACT,CAMAyjB,iBAAAA,GACE,MAAM,QAACjoC,EAAO,KAAEtH,GAAQX,KAExB,MAAO,CACLiI,EACA0gC,EAAAA,GAAUhoC,IAAS,CAAC,EACpB2G,EAAAA,EAASwI,SAASnP,IAAS,CAAC,EAC5B,CAACA,QACD2G,EAAAA,EACAkhC,EAAAA,GAEJ,CASAnyB,mBAAAA,CAAoBjF,EAAQgF,EAAOf,GAA0B,IAAjBc,EAAWvU,UAAAC,OAAA,QAAAvB,IAAAsB,UAAC,GAADA,UAAC,GAAD,CAAC,IACtD,MAAM41B,EAAS,CAACtvB,SAAS,IACnB,SAACioC,EAAQ,YAAEC,GAAeC,GAAYrwC,KAAKwvC,eAAgBp+B,EAAQ+E,GACzE,IAAIlO,EAAUkoC,EACd,GAkDJ,SAAqBlb,EAAO7e,GAC1B,MAAM,aAACk6B,EAAY,YAAEC,IAAezE,EAAAA,EAAAA,IAAa7W,GAEjD,IAAK,MAAMjwB,KAAQoR,EAAO,CACxB,MAAM42B,EAAasD,EAAatrC,GAC1BioC,EAAYsD,EAAYvrC,GACxB8D,GAASmkC,GAAaD,IAAe/X,EAAMjwB,GACjD,GAAKgoC,KAAewD,EAAAA,EAAAA,IAAW1nC,IAAU2nC,GAAY3nC,KAC/CmkC,IAAarlC,EAAAA,EAAAA,GAAQkB,GACzB,OAAO,CAEX,CACA,OAAO,CACT,CA/DQ4nC,CAAYP,EAAU/5B,GAAQ,CAChCohB,EAAOtvB,SAAU,EACjBmN,GAAUm7B,EAAAA,EAAAA,IAAWn7B,GAAWA,IAAYA,EAE5C,MAAMs7B,EAAc3wC,KAAKsR,eAAeF,EAAQiE,EAAS+6B,GACzDnoC,GAAU2oC,EAAAA,EAAAA,IAAeT,EAAU96B,EAASs7B,GAG9C,IAAK,MAAM3rC,KAAQoR,EACjBohB,EAAOxyB,GAAQiD,EAAQjD,GAEzB,OAAOwyB,CACT,CAQAlmB,cAAAA,CAAeF,EAAQiE,GAA8C,IAArCc,EAAWvU,UAAAC,OAAA,QAAAvB,IAAAsB,UAAC,GAADA,UAAC,GAAD,CAAC,IAAKivC,EAAkBjvC,UAAAC,OAAA,EAAAD,UAAA,QAAAtB,EACjE,MAAM,SAAC6vC,GAAYE,GAAYrwC,KAAKwvC,eAAgBp+B,EAAQ+E,GAC5D,OAAOjP,EAAAA,EAAAA,GAASmO,IACZu7B,EAAAA,EAAAA,IAAeT,EAAU96B,OAAS/U,EAAWuwC,GAC7CV,CACN,EAGF,SAASE,GAAYS,EAAe1/B,EAAQ+E,GAC1C,IAAIL,EAAQg7B,EAAcluC,IAAIwO,GACzB0E,IACHA,EAAQ,IAAI3V,IACZ2wC,EAAc/tC,IAAIqO,EAAQ0E,IAE5B,MAAMC,EAAWI,EAAS+xB,OAC1B,IAAIx7B,EAASoJ,EAAMlT,IAAImT,GACvB,IAAKrJ,EAAQ,CAEXA,EAAS,CACPyjC,UAFeY,EAAAA,EAAAA,IAAgB3/B,EAAQ+E,GAGvCi6B,YAAaj6B,EAAS/J,QAAO4kC,IAAMA,EAAEtD,cAActgB,SAAS,YAE9DtX,EAAM/S,IAAIgT,EAAUrJ,GAEtB,OAAOA,CACT,CAEA,MAAM+jC,GAAc3nC,IAAS5B,EAAAA,EAAAA,GAAS4B,IACjC1B,OAAOK,oBAAoBqB,GAAO+jC,MAAMnlC,IAAQ8oC,EAAAA,EAAAA,IAAW1nC,EAAMpB,MC9XtE,MAAMupC,GAAkB,CAAC,MAAO,SAAU,OAAQ,QAAS,aAC3D,SAASC,GAAqB9mB,EAAU5e,GACtC,MAAoB,QAAb4e,GAAmC,WAAbA,IAAiE,IAAvC6mB,GAAgBj0B,QAAQoN,IAA6B,MAAT5e,CACrG,CAEA,SAAS2lC,GAAcC,EAAIC,GACzB,OAAO,SAASl4B,EAAGhF,GACjB,OAAOgF,EAAEi4B,KAAQj9B,EAAEi9B,GACfj4B,EAAEk4B,GAAMl9B,EAAEk9B,GACVl4B,EAAEi4B,GAAMj9B,EAAEi9B,EAChB,CACF,CAEA,SAASE,GAAqBj8B,GAC5B,MAAM7U,EAAQ6U,EAAQ7U,MAChB2G,EAAmB3G,EAAMyH,QAAQV,UAEvC/G,EAAMk9B,cAAc,gBACpB7B,EAAAA,EAAAA,GAAa10B,GAAoBA,EAAiBoqC,WAAY,CAACl8B,GAAU7U,EAC3E,CAEA,SAASgxC,GAAoBn8B,GAC3B,MAAM7U,EAAQ6U,EAAQ7U,MAChB2G,EAAmB3G,EAAMyH,QAAQV,WACvCs0B,EAAAA,EAAAA,GAAa10B,GAAoBA,EAAiBsqC,WAAY,CAACp8B,GAAU7U,EAC3E,CAMA,SAASkxC,GAAUvvC,GAYjB,OAXIwvC,EAAAA,EAAAA,MAAqC,kBAATxvC,EAC9BA,EAAOuxB,SAASke,eAAezvC,GACtBA,GAAQA,EAAKN,SAEtBM,EAAOA,EAAK,IAGVA,GAAQA,EAAKivB,SAEfjvB,EAAOA,EAAKivB,QAEPjvB,CACT,CAEA,MAAM0vC,GAAY,CAAC,EACbC,GAAYpqC,IAChB,MAAM0pB,EAASsgB,GAAUhqC,GACzB,OAAON,OAAOW,OAAO8pC,IAAWzlC,QAAQ2lC,GAAMA,EAAE3gB,SAAWA,IAAQ3uB,KAAK,EAG1E,SAASuvC,GAAgBt2B,EAAKpa,EAAOyW,GACnC,MAAM1Q,EAAOD,OAAOC,KAAKqU,GACzB,IAAK,MAAMhU,KAAOL,EAAM,CACtB,MAAM4qC,GAAUvqC,EAChB,GAAIuqC,GAAU3wC,EAAO,CACnB,MAAMwH,EAAQ4S,EAAIhU,UACXgU,EAAIhU,IACPqQ,EAAO,GAAKk6B,EAAS3wC,KACvBoa,EAAIu2B,EAASl6B,GAAQjP,GAG3B,CACF,CAmBA,SAASopC,GAAejpC,EAAO8L,EAAWo9B,GACxC,OAAOlpC,EAAMhB,QAAQ0M,KAAO1L,EAAMkpC,GAASp9B,EAAUo9B,EACvD,CAeA,MAAMC,GASJ,eAAOhL,GACL5e,GAASplB,OAAOxB,WAChBywC,IACF,CAEA,iBAAOzJ,GACLpgB,GAAS3kB,UAAUjC,WACnBywC,IACF,CAGAtyC,WAAAA,CAAYoC,EAAMmwC,GAChB,MAAMxrC,EAAS9G,KAAK8G,OAAS,IAAIsoC,GAAOkD,GAClCC,EAAgBb,GAAUvvC,GAC1BqwC,EAAgBV,GAASS,GAC/B,GAAIC,EACF,MAAM,IAAI5pB,MACR,4CAA+C4pB,EAAc3mC,GAA7D,kDACgD2mC,EAAcphB,OAAOvlB,GAAK,oBAI9E,MAAM5D,EAAUnB,EAAOwK,eAAexK,EAAOopC,oBAAqBlwC,KAAKuR,cAEvEvR,KAAKyvC,SAAW,IAAK3oC,EAAO2oC,UCpJzB,SAAyBre,GAC9B,QAAKugB,EAAAA,EAAAA,MAAiD,qBAApBc,iBAAmCrhB,aAAkBqhB,gBAC9E5gB,GAEFwD,EACT,CD+I4Cqd,CAAgBH,IACxDvyC,KAAKyvC,SAAS7d,aAAa9qB,GAE3B,MAAMuO,EAAUrV,KAAKyvC,SAASte,eAAeohB,EAAetqC,EAAQsc,aAC9D6M,EAAS/b,GAAWA,EAAQ+b,OAC5B5U,EAAS4U,GAAUA,EAAO5U,OAC1BC,EAAQ2U,GAAUA,EAAO3U,MAE/Bzc,KAAK6L,IAAK8mC,EAAAA,EAAAA,MACV3yC,KAAK8M,IAAMuI,EACXrV,KAAKoxB,OAASA,EACdpxB,KAAKyc,MAAQA,EACbzc,KAAKwc,OAASA,EACdxc,KAAK4yC,SAAW3qC,EAIhBjI,KAAK6yC,aAAe7yC,KAAKukB,YACzBvkB,KAAK4vB,QAAU,GACf5vB,KAAK8yC,UAAY,GACjB9yC,KAAKqL,aAAU/K,EACfN,KAAKmvB,MAAQ,GACbnvB,KAAKo0B,6BAA0B9zB,EAC/BN,KAAK+U,eAAYzU,EACjBN,KAAKsC,QAAU,GACftC,KAAK+yC,gBAAazyC,EAClBN,KAAKgzC,WAAa,CAAC,EAEnBhzC,KAAKizC,0BAAuB3yC,EAC5BN,KAAKkzC,gBAAkB,GACvBlzC,KAAKmM,OAAS,CAAC,EACfnM,KAAKmzC,SAAW,IAAI1H,GACpBzrC,KAAKi2B,SAAW,CAAC,EACjBj2B,KAAKozC,eAAiB,CAAC,EACvBpzC,KAAKqzC,UAAW,EAChBrzC,KAAK8W,yBAAsBxW,EAC3BN,KAAK0N,cAAWpN,EAChBN,KAAKszC,WAAYC,EAAAA,EAAAA,KAASvpC,GAAQhK,KAAKmG,OAAO6D,IAAO/B,EAAQurC,aAAe,GAC5ExzC,KAAKsY,aAAe,GAGpBu5B,GAAU7xC,KAAK6L,IAAM7L,KAEhBqV,GAAY+b,GASjBrtB,EAASf,OAAOhD,KAAM,WAAYsxC,IAClCvtC,EAASf,OAAOhD,KAAM,WAAYwxC,IAElCxxC,KAAKyzC,cACDzzC,KAAKqzC,UACPrzC,KAAKmG,UATLiI,QAAQ6/B,MAAM,oEAWlB,CAEA,eAAI1pB,GACF,MAAOtc,SAAS,YAACsc,EAAW,oBAAEmvB,GAAoB,MAAEj3B,EAAA,OAAOD,EAAM,aAAEq2B,GAAgB7yC,KACnF,OAAKkc,EAAAA,EAAAA,GAAcqI,GAKfmvB,GAAuBb,EAElBA,EAIFr2B,EAASC,EAAQD,EAAS,KATxB+H,CAUX,CAEA,QAAI1U,GACF,OAAO7P,KAAK8G,OAAO+I,IACrB,CAEA,QAAIA,CAAKA,GACP7P,KAAK8G,OAAO+I,KAAOA,CACrB,CAEA,WAAI5H,GACF,OAAOjI,KAAK4yC,QACd,CAEA,WAAI3qC,CAAQA,GACVjI,KAAK8G,OAAOmB,QAAUA,CACxB,CAEA,YAAIugB,GACF,OAAOA,EACT,CAKAirB,WAAAA,GAeE,OAbAzzC,KAAK09B,cAAc,cAEf19B,KAAKiI,QAAQ0rC,WACf3zC,KAAKm0B,UAELyf,EAAAA,EAAAA,IAAY5zC,KAAMA,KAAKiI,QAAQisB,kBAGjCl0B,KAAK6zC,aAGL7zC,KAAK09B,cAAc,aAEZ19B,IACT,CAEA2vC,KAAAA,GAEE,OADAmE,EAAAA,EAAAA,IAAY9zC,KAAKoxB,OAAQpxB,KAAK8M,KACvB9M,IACT,CAEA2D,IAAAA,GAEE,OADAI,EAASJ,KAAK3D,MACPA,IACT,CAOAm0B,MAAAA,CAAO1X,EAAOD,GACPzY,EAAS9B,QAAQjC,MAGpBA,KAAK+zC,kBAAoB,CAACt3B,QAAOD,UAFjCxc,KAAKg0C,QAAQv3B,EAAOD,EAIxB,CAEAw3B,OAAAA,CAAQv3B,EAAOD,GACb,MAAMvU,EAAUjI,KAAKiI,QACfmpB,EAASpxB,KAAKoxB,OACd7M,EAActc,EAAQyrC,qBAAuB1zC,KAAKukB,YAClD0vB,EAAUj0C,KAAKyvC,SAAS/d,eAAeN,EAAQ3U,EAAOD,EAAQ+H,GAC9D2vB,EAAWjsC,EAAQisB,kBAAoBl0B,KAAKyvC,SAAShe,sBACrDznB,EAAOhK,KAAKyc,MAAQ,SAAW,SAErCzc,KAAKyc,MAAQw3B,EAAQx3B,MACrBzc,KAAKwc,OAASy3B,EAAQz3B,OACtBxc,KAAK6yC,aAAe7yC,KAAKukB,aACpBqvB,EAAAA,EAAAA,IAAY5zC,KAAMk0C,GAAU,KAIjCl0C,KAAK09B,cAAc,SAAU,CAAC30B,KAAMkrC,KAEpCpY,EAAAA,EAAAA,GAAa5zB,EAAQksC,SAAU,CAACn0C,KAAMi0C,GAAUj0C,MAE5CA,KAAKqzC,UACHrzC,KAAKszC,UAAUtpC,IAEjBhK,KAAKo0C,SAGX,CAEAC,mBAAAA,GACE,MACMC,EADUt0C,KAAKiI,QACSkE,QAAU,CAAC,GAEzCykB,EAAAA,EAAAA,GAAK0jB,GAAe,CAACC,EAAa3N,KAChC2N,EAAY1oC,GAAK+6B,CAAA,GAErB,CAKA4N,mBAAAA,GACE,MAAMvsC,EAAUjI,KAAKiI,QACfwsC,EAAYxsC,EAAQkE,OACpBA,EAASnM,KAAKmM,OACduoC,EAAUttC,OAAOC,KAAK8E,GAAQ7I,QAAO,CAACoY,EAAK7P,KAC/C6P,EAAI7P,IAAM,EACH6P,IACN,CAAC,GACJ,IAAIxZ,EAAQ,GAERuyC,IACFvyC,EAAQA,EAAM0J,OACZxE,OAAOC,KAAKotC,GAAW7vB,KAAK/Y,IAC1B,MAAM2hC,EAAeiH,EAAU5oC,GACzBL,EAAO8hC,GAAczhC,EAAI2hC,GACzBmH,EAAoB,MAATnpC,EACXsQ,EAAwB,MAATtQ,EACrB,MAAO,CACLvD,QAASulC,EACToH,UAAWD,EAAW,YAAc74B,EAAe,SAAW,OAC9D+4B,MAAOF,EAAW,eAAiB74B,EAAe,WAAa,SAChE,OAKP8U,EAAAA,EAAAA,GAAK1uB,GAAQC,IACX,MAAMqrC,EAAerrC,EAAK8F,QACpB4D,EAAK2hC,EAAa3hC,GAClBL,EAAO8hC,GAAczhC,EAAI2hC,GACzBsH,GAAY/lC,EAAAA,EAAAA,GAAey+B,EAAa7sC,KAAMwB,EAAK0yC,YAE3Bv0C,IAA1BktC,EAAapjB,UAA0B8mB,GAAqB1D,EAAapjB,SAAU5e,KAAU0lC,GAAqB/uC,EAAKyyC,aACzHpH,EAAapjB,SAAWjoB,EAAKyyC,WAG/BF,EAAQ7oC,IAAM,EACd,IAAI5C,EAAQ,KACZ,GAAI4C,KAAMM,GAAUA,EAAON,GAAIlL,OAASm0C,EACtC7rC,EAAQkD,EAAON,OACV,CAEL5C,EAAQ,IADWuf,GAAS2hB,SAAS2K,GAC7B,CAAe,CACrBjpC,KACAlL,KAAMm0C,EACNhoC,IAAK9M,KAAK8M,IACVtM,MAAOR,OAETmM,EAAOlD,EAAM4C,IAAM5C,EAGrBA,EAAMggB,KAAKukB,EAAcvlC,EAAA,KAG3B2oB,EAAAA,EAAAA,GAAK8jB,GAAS,CAACK,EAAYlpC,KACpBkpC,UACI5oC,EAAON,OAIlB+kB,EAAAA,EAAAA,GAAKzkB,GAASlD,IACZ+jB,GAAQ/lB,UAAUjH,KAAMiJ,EAAOA,EAAMhB,SACrC+kB,GAAQ2C,OAAO3vB,KAAMiJ,EAAA,GAEzB,CAKA+rC,eAAAA,GACE,MAAMxrC,EAAWxJ,KAAK8yC,UAChBl7B,EAAU5X,KAAK6P,KAAKC,SAASjO,OAC7B8V,EAAUnO,EAAS3H,OAGzB,GADA2H,EAAS0P,MAAK,CAACC,EAAGhF,IAAMgF,EAAExP,MAAQwK,EAAExK,QAChCgO,EAAUC,EAAS,CACrB,IAAK,IAAIxV,EAAIwV,EAASxV,EAAIuV,IAAWvV,EACnCpC,KAAKi1C,oBAAoB7yC,GAE3BoH,EAAS2O,OAAOP,EAASD,EAAUC,GAErC5X,KAAKkzC,gBAAkB1pC,EAAS0rC,MAAM,GAAGh8B,KAAKi4B,GAAc,QAAS,SACvE,CAKAgE,2BAAAA,GACE,MAAOrC,UAAWtpC,EAAUqG,MAAM,SAACC,IAAa9P,KAC5CwJ,EAAS3H,OAASiO,EAASjO,eACtB7B,KAAKqL,QAEd7B,EAASxI,SAAQ,CAACsJ,EAAMX,KACmC,IAArDmG,EAAS1D,QAAOsC,GAAKA,IAAMpE,EAAKqb,WAAU9jB,QAC5C7B,KAAKi1C,oBAAoBtrC,KAG/B,CAEAyrC,wBAAAA,GACE,MAAMC,EAAiB,GACjBvlC,EAAW9P,KAAK6P,KAAKC,SAC3B,IAAI1N,EAAGsH,EAIP,IAFA1J,KAAKm1C,8BAEA/yC,EAAI,EAAGsH,EAAOoG,EAASjO,OAAQO,EAAIsH,EAAMtH,IAAK,CACjD,MAAMmM,EAAUuB,EAAS1N,GACzB,IAAIkI,EAAOtK,KAAK+P,eAAe3N,GAC/B,MAAMzB,EAAO4N,EAAQ5N,MAAQX,KAAK8G,OAAOnG,KAazC,GAXI2J,EAAK3J,MAAQ2J,EAAK3J,OAASA,IAC7BX,KAAKi1C,oBAAoB7yC,GACzBkI,EAAOtK,KAAK+P,eAAe3N,IAE7BkI,EAAK3J,KAAOA,EACZ2J,EAAK8E,UAAYb,EAAQa,WAAa+9B,GAAaxsC,EAAMX,KAAKiI,SAC9DqC,EAAKgrC,MAAQ/mC,EAAQ+mC,OAAS,EAC9BhrC,EAAKX,MAAQvH,EACbkI,EAAKyJ,MAAQ,GAAKxF,EAAQwF,MAC1BzJ,EAAKirC,QAAUv1C,KAAK2gB,iBAAiBve,GAEjCkI,EAAKY,WACPZ,EAAKY,WAAWoD,YAAYlM,GAC5BkI,EAAKY,WAAW6C,iBACX,CACL,MAAMynC,EAAkBhtB,GAASwhB,cAAcrpC,IACzC,mBAACiN,EAAA,gBAAoBC,GAAmBvG,EAAAA,EAASwI,SAASnP,GAChEyG,OAAOe,OAAOqtC,EAAiB,CAC7B3nC,gBAAiB2a,GAASC,WAAW5a,GACrCD,mBAAoBA,GAAsB4a,GAASC,WAAW7a,KAEhEtD,EAAKY,WAAa,IAAIsqC,EAAgBx1C,KAAMoC,GAC5CizC,EAAelyC,KAAKmH,EAAKY,YAE7B,CAGA,OADAlL,KAAKg1C,kBACEK,CACT,CAMAI,cAAAA,IACE7kB,EAAAA,EAAAA,GAAK5wB,KAAK6P,KAAKC,UAAU,CAACvB,EAAStE,KACjCjK,KAAK+P,eAAe9F,GAAciB,WAAWgF,OAAO,GACnDlQ,KACL,CAKAkQ,KAAAA,GACElQ,KAAKy1C,iBACLz1C,KAAK09B,cAAc,QACrB,CAEAv3B,MAAAA,CAAO6D,GACL,MAAMlD,EAAS9G,KAAK8G,OAEpBA,EAAOX,SACP,MAAM8B,EAAUjI,KAAK4yC,SAAW9rC,EAAOwK,eAAexK,EAAOopC,oBAAqBlwC,KAAKuR,cACjFmkC,EAAgB11C,KAAK8W,qBAAuB7O,EAAQV,UAU1D,GARAvH,KAAK21C,gBACL31C,KAAK41C,sBACL51C,KAAK61C,uBAIL71C,KAAKmzC,SAASjH,cAEuD,IAAjElsC,KAAK09B,cAAc,eAAgB,CAAC1zB,OAAMiiC,YAAY,IACxD,OAIF,MAAMoJ,EAAiBr1C,KAAKo1C,2BAE5Bp1C,KAAK09B,cAAc,wBAGnB,IAAI1N,EAAa,EACjB,IAAK,IAAI5tB,EAAI,EAAGsH,EAAO1J,KAAK6P,KAAKC,SAASjO,OAAQO,EAAIsH,EAAMtH,IAAK,CAC/D,MAAM,WAAC8I,GAAclL,KAAK+P,eAAe3N,GACnC8N,GAASwlC,IAAyD,IAAxCL,EAAer4B,QAAQ9R,GAGvDA,EAAW2F,sBAAsBX,GACjC8f,EAAa5uB,KAAKqC,KAAKyH,EAAW2I,iBAAkBmc,EACtD,CACAA,EAAahwB,KAAK81C,YAAc7tC,EAAQylB,OAAOqoB,YAAc/lB,EAAa,EAC1EhwB,KAAKg2C,cAAchmB,GAGd0lB,IAGH9kB,EAAAA,EAAAA,GAAKykB,GAAiBnqC,IACpBA,EAAWgF,OAAO,IAItBlQ,KAAKi2C,gBAAgBjsC,GAGrBhK,KAAK09B,cAAc,cAAe,CAAC1zB,SAEnChK,KAAK4vB,QAAQ1W,KAAKi4B,GAAc,IAAK,SAGrC,MAAM,QAAC7uC,EAAO,WAAEywC,GAAc/yC,KAC1B+yC,EACF/yC,KAAKk2C,cAAcnD,GAAY,GACtBzwC,EAAQT,QACjB7B,KAAKm2C,mBAAmB7zC,EAASA,GAAS,GAG5CtC,KAAKo0C,QACP,CAKAuB,aAAAA,IACE/kB,EAAAA,EAAAA,GAAK5wB,KAAKmM,QAASlD,IACjB+jB,GAAQ8C,UAAU9vB,KAAMiJ,EAAA,IAG1BjJ,KAAKq0C,sBACLr0C,KAAKw0C,qBACP,CAKAoB,mBAAAA,GACE,MAAM3tC,EAAUjI,KAAKiI,QACfmuC,EAAiB,IAAIpH,IAAI5nC,OAAOC,KAAKrH,KAAKgzC,aAC1CqD,EAAY,IAAIrH,IAAI/mC,EAAQquC,SAE7BC,EAAAA,EAAAA,IAAUH,EAAgBC,MAAgBr2C,KAAKizC,uBAAyBhrC,EAAQ0rC,aAEnF3zC,KAAKw2C,eACLx2C,KAAK6zC,aAET,CAKAgC,oBAAAA,GACE,MAAM,eAACzC,GAAkBpzC,KACnBy2C,EAAUz2C,KAAK02C,0BAA4B,GACjD,IAAK,MAAM,OAAC9vC,EAAM,MAAEtF,EAAA,MAAOoQ,KAAU+kC,EAAS,CAE5CzE,GAAgBoB,EAAgB9xC,EADR,oBAAXsF,GAAgC8K,EAAQA,EAEvD,CACF,CAKAglC,sBAAAA,GACE,MAAMp+B,EAAetY,KAAKsY,aAC1B,IAAKA,IAAiBA,EAAazW,OACjC,OAGF7B,KAAKsY,aAAe,GACpB,MAAMq+B,EAAe32C,KAAK6P,KAAKC,SAASjO,OAClC+0C,EAAW9V,GAAQ,IAAIkO,IAC3B12B,EACGlM,QAAO2lC,GAAKA,EAAE,KAAOjR,IACrBlc,KAAI,CAACmtB,EAAG3vC,IAAMA,EAAI,IAAM2vC,EAAE55B,OAAO,GAAG+vB,KAAK,QAGxC2O,EAAYD,EAAQ,GAC1B,IAAK,IAAIx0C,EAAI,EAAGA,EAAIu0C,EAAcv0C,IAChC,KAAKm0C,EAAAA,EAAAA,IAAUM,EAAWD,EAAQx0C,IAChC,OAGJ,OAAOqO,MAAMtM,KAAK0yC,GACfjyB,KAAImtB,GAAKA,EAAEhK,MAAM,OACjBnjB,KAAIzL,IAAA,CAAOvS,OAAQuS,EAAE,GAAI7X,OAAQ6X,EAAE,GAAIzH,OAAQyH,EAAE,MACtD,CAOA68B,aAAAA,CAAchmB,GACZ,IAA+D,IAA3DhwB,KAAK09B,cAAc,eAAgB,CAACuO,YAAY,IAClD,OAGFjf,GAAQ7mB,OAAOnG,KAAMA,KAAKyc,MAAOzc,KAAKwc,OAAQwT,GAE9C,MAAMlb,EAAO9U,KAAK+U,UACZ+hC,EAAShiC,EAAK2H,OAAS,GAAK3H,EAAK0H,QAAU,EAEjDxc,KAAK4vB,QAAU,IACfgB,EAAAA,EAAAA,GAAK5wB,KAAKmvB,OAAQvC,IACZkqB,GAA2B,cAAjBlqB,EAAIxC,WAOdwC,EAAI3lB,WACN2lB,EAAI3lB,YAENjH,KAAK4vB,QAAQzsB,QAAQypB,EAAIgD,WAAU,GAClC5vB,MAEHA,KAAK4vB,QAAQ5uB,SAAQ,CAACmB,EAAMwH,KAC1BxH,EAAK40C,KAAOptC,CAAA,IAGd3J,KAAK09B,cAAc,cACrB,CAOAuY,eAAAA,CAAgBjsC,GACd,IAA6E,IAAzEhK,KAAK09B,cAAc,uBAAwB,CAAC1zB,OAAMiiC,YAAY,IAAlE,CAIA,IAAK,IAAI7pC,EAAI,EAAGsH,EAAO1J,KAAK6P,KAAKC,SAASjO,OAAQO,EAAIsH,IAAQtH,EAC5DpC,KAAK+P,eAAe3N,GAAG8I,WAAWjE,YAGpC,IAAK,IAAI7E,EAAI,EAAGsH,EAAO1J,KAAK6P,KAAKC,SAASjO,OAAQO,EAAIsH,IAAQtH,EAC5DpC,KAAKg3C,eAAe50C,GAAGouC,EAAAA,EAAAA,IAAWxmC,GAAQA,EAAK,CAACC,aAAc7H,IAAM4H,GAGtEhK,KAAK09B,cAAc,sBAAuB,CAAC1zB,SAC7C,CAOAgtC,cAAAA,CAAertC,EAAOK,GACpB,MAAMM,EAAOtK,KAAK+P,eAAepG,GAC3B0O,EAAO,CAAC/N,OAAMX,QAAOK,OAAMiiC,YAAY,IAEW,IAApDjsC,KAAK09B,cAAc,sBAAuBrlB,KAI9C/N,EAAKY,WAAWvJ,QAAQqI,GAExBqO,EAAK4zB,YAAa,EAClBjsC,KAAK09B,cAAc,qBAAsBrlB,GAC3C,CAEA+7B,MAAAA,IACiE,IAA3Dp0C,KAAK09B,cAAc,eAAgB,CAACuO,YAAY,MAIhDloC,EAASV,IAAIrD,MACXA,KAAKqzC,WAAatvC,EAAS9B,QAAQjC,OACrC+D,EAASzC,MAAMtB,OAGjBA,KAAKqC,OACLivC,GAAqB,CAAC9wC,MAAOR,QAEjC,CAEAqC,IAAAA,GACE,IAAID,EACJ,GAAIpC,KAAK+zC,kBAAmB,CAC1B,MAAM,MAACt3B,EAAA,OAAOD,GAAUxc,KAAK+zC,kBAC7B/zC,KAAKg0C,QAAQv3B,EAAOD,GACpBxc,KAAK+zC,kBAAoB,KAI3B,GAFA/zC,KAAK2vC,QAED3vC,KAAKyc,OAAS,GAAKzc,KAAKwc,QAAU,EACpC,OAGF,IAA6D,IAAzDxc,KAAK09B,cAAc,aAAc,CAACuO,YAAY,IAChD,OAMF,MAAMgL,EAASj3C,KAAK4vB,QACpB,IAAKxtB,EAAI,EAAGA,EAAI60C,EAAOp1C,QAAUo1C,EAAO70C,GAAGytB,GAAK,IAAKztB,EACnD60C,EAAO70C,GAAGC,KAAKrC,KAAK+U,WAMtB,IAHA/U,KAAKk3C,gBAGE90C,EAAI60C,EAAOp1C,SAAUO,EAC1B60C,EAAO70C,GAAGC,KAAKrC,KAAK+U,WAGtB/U,KAAK09B,cAAc,YACrB,CAKAj0B,sBAAAA,CAAuBF,GACrB,MAAMC,EAAWxJ,KAAKkzC,gBAChB1b,EAAS,GACf,IAAIp1B,EAAGsH,EAEP,IAAKtH,EAAI,EAAGsH,EAAOF,EAAS3H,OAAQO,EAAIsH,IAAQtH,EAAG,CACjD,MAAMkI,EAAOd,EAASpH,GACjBmH,IAAiBe,EAAKirC,SACzB/d,EAAOr0B,KAAKmH,EAEhB,CAEA,OAAOktB,CACT,CAMAlN,4BAAAA,GACE,OAAOtqB,KAAKyJ,wBAAuB,EACrC,CAOAytC,aAAAA,GACE,IAAqE,IAAjEl3C,KAAK09B,cAAc,qBAAsB,CAACuO,YAAY,IACxD,OAGF,MAAMziC,EAAWxJ,KAAKsqB,+BACtB,IAAK,IAAIloB,EAAIoH,EAAS3H,OAAS,EAAGO,GAAK,IAAKA,EAC1CpC,KAAKm3C,aAAa3tC,EAASpH,IAG7BpC,KAAK09B,cAAc,oBACrB,CAOAyZ,YAAAA,CAAa7sC,GACX,MAAMwC,EAAM9M,KAAK8M,IACX6H,EAAOrK,EAAK2J,MACZmjC,GAAWziC,EAAKF,SAChBK,EAxrBV,SAAwBxK,EAAMyK,GAC5B,MAAM,OAACtF,EAAA,OAAQE,GAAUrF,EACzB,OAAImF,GAAUE,EACL,CACL6E,KAAM09B,GAAeziC,EAAQsF,EAAW,QACxCT,MAAO49B,GAAeziC,EAAQsF,EAAW,SACzCV,IAAK69B,GAAeviC,EAAQoF,EAAW,OACvCR,OAAQ29B,GAAeviC,EAAQoF,EAAW,WAGvCA,CACT,CA6qBiBsiC,CAAe/sC,EAAMtK,KAAK+U,WACjCsD,EAAO,CACX/N,OACAX,MAAOW,EAAKX,MACZsiC,YAAY,IAGwC,IAAlDjsC,KAAK09B,cAAc,oBAAqBrlB,KAIxC++B,IACFpR,EAAAA,EAAAA,GAASl5B,EAAK,CACZ0H,MAAoB,IAAdG,EAAKH,KAAiB,EAAIM,EAAKN,KAAOG,EAAKH,KACjDF,OAAsB,IAAfK,EAAKL,MAAkBtU,KAAKyc,MAAQ3H,EAAKR,MAAQK,EAAKL,MAC7DD,KAAkB,IAAbM,EAAKN,IAAgB,EAAIS,EAAKT,IAAMM,EAAKN,IAC9CE,QAAwB,IAAhBI,EAAKJ,OAAmBvU,KAAKwc,OAAS1H,EAAKP,OAASI,EAAKJ,SAIrEjK,EAAKY,WAAW7I,OAEZ+0C,IACFjR,EAAAA,EAAAA,GAAWr5B,GAGbuL,EAAK4zB,YAAa,EAClBjsC,KAAK09B,cAAc,mBAAoBrlB,GACzC,CAOAsS,aAAAA,CAAcjL,GACZ,OAAOkL,EAAAA,EAAAA,GAAelL,EAAO1f,KAAK+U,UAAW/U,KAAK81C,YACpD,CAEAwB,yBAAAA,CAA0BhyB,EAAGtb,EAAM/B,EAASwiB,GAC1C,MAAM7jB,EAASulB,EAAYC,MAAMpiB,GACjC,MAAsB,oBAAXpD,EACFA,EAAO5G,KAAMslB,EAAGrd,EAASwiB,GAG3B,EACT,CAEA1a,cAAAA,CAAe9F,GACb,MAAMsE,EAAUvO,KAAK6P,KAAKC,SAAS7F,GAC7BT,EAAWxJ,KAAK8yC,UACtB,IAAIxoC,EAAOd,EAAS4C,QAAOsC,GAAKA,GAAKA,EAAEiX,WAAapX,IAAS9L,MAoB7D,OAlBK6H,IACHA,EAAO,CACL3J,KAAM,KACNkP,KAAM,GACNtB,QAAS,KACTrD,WAAY,KACZgI,OAAQ,KACRpE,QAAS,KACTG,QAAS,KACTqmC,MAAO/mC,GAAWA,EAAQ+mC,OAAS,EACnC3rC,MAAOM,EACP0b,SAAUpX,EACVhC,QAAS,GACTqF,SAAS,GAEXpI,EAASrG,KAAKmH,IAGTA,CACT,CAEAiH,UAAAA,GACE,OAAOvR,KAAK0N,WAAa1N,KAAK0N,UAAW6H,EAAAA,EAAAA,GAAc,KAAM,CAAC/U,MAAOR,KAAMW,KAAM,UACnF,CAEA0mB,sBAAAA,GACE,OAAOrnB,KAAKsqB,+BAA+BzoB,MAC7C,CAEA8e,gBAAAA,CAAiB1W,GACf,MAAMsE,EAAUvO,KAAK6P,KAAKC,SAAS7F,GACnC,IAAKsE,EACH,OAAO,EAGT,MAAMjE,EAAOtK,KAAK+P,eAAe9F,GAIjC,MAA8B,mBAAhBK,EAAK4I,QAAwB5I,EAAK4I,QAAU3E,EAAQ2E,MACpE,CAEAqkC,oBAAAA,CAAqBttC,EAAcsrC,GACpBv1C,KAAK+P,eAAe9F,GAC5BiJ,QAAUqiC,CACjB,CAEA/vB,oBAAAA,CAAqB7b,GACnB3J,KAAKozC,eAAezpC,IAAU3J,KAAKozC,eAAezpC,EACpD,CAEAoU,iBAAAA,CAAkBpU,GAChB,OAAQ3J,KAAKozC,eAAezpC,EAC9B,CAKA6tC,iBAAAA,CAAkBvtC,EAAcuL,EAAW+/B,GACzC,MAAMvrC,EAAOurC,EAAU,OAAS,OAC1BjrC,EAAOtK,KAAK+P,eAAe9F,GAC3BxJ,EAAQ6J,EAAKY,WAAWqL,wBAAmBjW,EAAW0J,IAExDiM,EAAAA,EAAAA,GAAQT,IACVlL,EAAKuF,KAAK2F,GAAWtC,QAAUqiC,EAC/Bv1C,KAAKmG,WAELnG,KAAKu3C,qBAAqBttC,EAAcsrC,GAExC90C,EAAM0F,OAAOmE,EAAM,CAACirC,YACpBv1C,KAAKmG,QAAQ2G,GAAQA,EAAI7C,eAAiBA,EAAeD,OAAO1J,IAEpE,CAEAm3C,IAAAA,CAAKxtC,EAAcuL,GACjBxV,KAAKw3C,kBAAkBvtC,EAAcuL,GAAW,EAClD,CAEAkiC,IAAAA,CAAKztC,EAAcuL,GACjBxV,KAAKw3C,kBAAkBvtC,EAAcuL,GAAW,EAClD,CAKAy/B,mBAAAA,CAAoBhrC,GAClB,MAAMK,EAAOtK,KAAK8yC,UAAU7oC,GACxBK,GAAQA,EAAKY,YACfZ,EAAKY,WAAWiF,kBAEXnQ,KAAK8yC,UAAU7oC,EACxB,CAEA0tC,KAAAA,GACE,IAAIv1C,EAAGsH,EAIP,IAHA1J,KAAK2D,OACLI,EAASF,OAAO7D,MAEXoC,EAAI,EAAGsH,EAAO1J,KAAK6P,KAAKC,SAASjO,OAAQO,EAAIsH,IAAQtH,EACxDpC,KAAKi1C,oBAAoB7yC,EAE7B,CAEAw1C,OAAAA,GACE53C,KAAK09B,cAAc,iBACnB,MAAM,OAACtM,EAAM,IAAEtkB,GAAO9M,KAEtBA,KAAK23C,QACL33C,KAAK8G,OAAO4oC,aAERte,IACFpxB,KAAKw2C,gBACL1C,EAAAA,EAAAA,IAAY1iB,EAAQtkB,GACpB9M,KAAKyvC,SAASpe,eAAevkB,GAC7B9M,KAAKoxB,OAAS,KACdpxB,KAAK8M,IAAM,aAGN+kC,GAAU7xC,KAAK6L,IAEtB7L,KAAK09B,cAAc,eACrB,CAEAma,aAAAA,GACE,OAAO73C,KAAKoxB,OAAO0mB,aAAal2C,UAClC,CAKAiyC,UAAAA,GACE7zC,KAAK+3C,iBACD/3C,KAAKiI,QAAQ0rC,WACf3zC,KAAKg4C,uBAELh4C,KAAKqzC,UAAW,CAEpB,CAKA0E,cAAAA,GACE,MAAMl3C,EAAYb,KAAKgzC,WACjBvD,EAAWzvC,KAAKyvC,SAEhBwI,EAAOA,CAACt3C,EAAM4wB,KAClBke,EAASne,iBAAiBtxB,KAAMW,EAAM4wB,GACtC1wB,EAAUF,GAAQ4wB,CAAA,EAGdA,EAAWA,CAACjM,EAAG5W,EAAGC,KACtB2W,EAAErF,QAAUvR,EACZ4W,EAAEpF,QAAUvR,EACZ3O,KAAKk2C,cAAc5wB,EAAA,GAGrBsL,EAAAA,EAAAA,GAAK5wB,KAAKiI,QAAQquC,QAAS31C,GAASs3C,EAAKt3C,EAAM4wB,IACjD,CAKAymB,oBAAAA,GACOh4C,KAAKizC,uBACRjzC,KAAKizC,qBAAuB,CAAC,GAE/B,MAAMpyC,EAAYb,KAAKizC,qBACjBxD,EAAWzvC,KAAKyvC,SAEhBwI,EAAOA,CAACt3C,EAAM4wB,KAClBke,EAASne,iBAAiBtxB,KAAMW,EAAM4wB,GACtC1wB,EAAUF,GAAQ4wB,CAAA,EAEd2mB,EAAUA,CAACv3C,EAAM4wB,KACjB1wB,EAAUF,KACZ8uC,EAASje,oBAAoBxxB,KAAMW,EAAM4wB,UAClC1wB,EAAUF,KAIf4wB,EAAWA,CAAC9U,EAAOD,KACnBxc,KAAKoxB,QACPpxB,KAAKm0B,OAAO1X,EAAOD,IAIvB,IAAI27B,EACJ,MAAM9E,EAAWA,KACf6E,EAAQ,SAAU7E,GAElBrzC,KAAKqzC,UAAW,EAChBrzC,KAAKm0B,SAEL8jB,EAAK,SAAU1mB,GACf0mB,EAAK,SAAUE,EAAA,EAGjBA,EAAWA,KACTn4C,KAAKqzC,UAAW,EAEhB6E,EAAQ,SAAU3mB,GAGlBvxB,KAAK23C,QACL33C,KAAKg0C,QAAQ,EAAG,GAEhBiE,EAAK,SAAU5E,EAAA,EAGb5D,EAAS9d,WAAW3xB,KAAKoxB,QAC3BiiB,IAEA8E,GAEJ,CAKA3B,YAAAA,IACE5lB,EAAAA,EAAAA,GAAK5wB,KAAKgzC,YAAY,CAACzhB,EAAU5wB,KAC/BX,KAAKyvC,SAASje,oBAAoBxxB,KAAMW,EAAM4wB,EAAA,IAEhDvxB,KAAKgzC,WAAa,CAAC,GAEnBpiB,EAAAA,EAAAA,GAAK5wB,KAAKizC,sBAAsB,CAAC1hB,EAAU5wB,KACzCX,KAAKyvC,SAASje,oBAAoBxxB,KAAMW,EAAM4wB,EAAA,IAEhDvxB,KAAKizC,0BAAuB3yC,CAC9B,CAEA83C,gBAAAA,CAAiBl2C,EAAO8H,EAAMutB,GAC5B,MAAM8gB,EAAS9gB,EAAU,MAAQ,SACjC,IAAIjtB,EAAMnI,EAAMC,EAAGsH,EAOnB,IALa,YAATM,IACFM,EAAOtK,KAAK+P,eAAe7N,EAAM,GAAG+H,cACpCK,EAAKY,WAAW,IAAMmtC,EAAS,wBAG5Bj2C,EAAI,EAAGsH,EAAOxH,EAAML,OAAQO,EAAIsH,IAAQtH,EAAG,CAC9CD,EAAOD,EAAME,GACb,MAAM8I,EAAa/I,GAAQnC,KAAK+P,eAAe5N,EAAK8H,cAAciB,WAC9DA,GACFA,EAAWmtC,EAAS,cAAcl2C,EAAK8S,QAAS9S,EAAK8H,aAAc9H,EAAKwH,MAE5E,CACF,CAMA2uC,iBAAAA,GACE,OAAOt4C,KAAKsC,SAAW,EACzB,CAMAi2C,iBAAAA,CAAkBC,GAChB,MAAMC,EAAaz4C,KAAKsC,SAAW,GAC7B4D,EAASsyC,EAAe5zB,KAAI8zB,IAA2B,IAA1B,aAACzuC,EAAY,MAAEN,GAAM+uC,EACtD,MAAMpuC,EAAOtK,KAAK+P,eAAe9F,GACjC,IAAKK,EACH,MAAM,IAAIse,MAAM,6BAA+B3e,GAGjD,MAAO,CACLA,eACAgL,QAAS3K,EAAKuF,KAAKlG,GACnBA,QACD,MAEcgvC,EAAAA,EAAAA,IAAezyC,EAAQuyC,KAGtCz4C,KAAKsC,QAAU4D,EAEflG,KAAK+yC,WAAa,KAClB/yC,KAAKm2C,mBAAmBjwC,EAAQuyC,GAEpC,CAWA/a,aAAAA,CAAckO,EAAMvzB,EAAMjM,GACxB,OAAOpM,KAAKmzC,SAASxH,OAAO3rC,KAAM4rC,EAAMvzB,EAAMjM,EAChD,CAOA+B,eAAAA,CAAgByqC,GACd,OAA6E,IAAtE54C,KAAKmzC,SAASr6B,OAAO1M,QAAO4kC,GAAKA,EAAEhF,OAAOngC,KAAO+sC,IAAU/2C,MACpE,CAKAs0C,kBAAAA,CAAmBjwC,EAAQuyC,EAAYI,GACrC,MAAMC,EAAe94C,KAAKiI,QAAQ8wC,MAC5B3vB,EAAOA,CAACjQ,EAAGhF,IAAMgF,EAAE/M,QAAOsC,IAAMyF,EAAE04B,MAAKl+B,GAAKD,EAAEzE,eAAiB0E,EAAE1E,cAAgByE,EAAE/E,QAAUgF,EAAEhF,UAC/FqvC,EAAc5vB,EAAKqvB,EAAYvyC,GAC/B+yC,EAAYJ,EAAS3yC,EAASkjB,EAAKljB,EAAQuyC,GAE7CO,EAAYn3C,QACd7B,KAAKo4C,iBAAiBY,EAAaF,EAAa9uC,MAAM,GAGpDivC,EAAUp3C,QAAUi3C,EAAa9uC,MACnChK,KAAKo4C,iBAAiBa,EAAWH,EAAa9uC,MAAM,EAExD,CAKAksC,aAAAA,CAAc5wB,EAAGuzB,GACf,MAAMxgC,EAAO,CACXpV,MAAOqiB,EACPuzB,SACA5M,YAAY,EACZiN,YAAal5C,KAAK2qB,cAAcrF,IAE5B6zB,EAAenN,IAAYA,EAAO/jC,QAAQquC,QAAUt2C,KAAKiI,QAAQquC,QAAQlpB,SAAS9H,EAAE4P,OAAOv0B,MAEjG,IAA6D,IAAzDX,KAAK09B,cAAc,cAAerlB,EAAM8gC,GAC1C,OAGF,MAAM7pB,EAAUtvB,KAAKo5C,aAAa9zB,EAAGuzB,EAAQxgC,EAAK6gC,aASlD,OAPA7gC,EAAK4zB,YAAa,EAClBjsC,KAAK09B,cAAc,aAAcrlB,EAAM8gC,IAEnC7pB,GAAWjX,EAAKiX,UAClBtvB,KAAKo0C,SAGAp0C,IACT,CAUAo5C,YAAAA,CAAa9zB,EAAGuzB,EAAQK,GACtB,MAAO52C,QAASm2C,EAAa,GAAE,QAAExwC,GAAWjI,KAetCyqB,EAAmBouB,EACnB3yC,EAASlG,KAAKq5C,mBAAmB/zB,EAAGmzB,EAAYS,EAAazuB,GAC7D6uB,GAAUC,EAAAA,EAAAA,IAAcj0B,GACxBk0B,EAxnCV,SAA4Bl0B,EAAGk0B,EAAWN,EAAaI,GACrD,OAAKJ,GAA0B,aAAX5zB,EAAE3kB,KAGlB24C,EACKE,EAEFl0B,EALE,IAMX,CAgnCsBm0B,CAAmBn0B,EAAGtlB,KAAK+yC,WAAYmG,EAAaI,GAElEJ,IAGFl5C,KAAK+yC,WAAa,MAGlBlX,EAAAA,EAAAA,GAAa5zB,EAAQyxC,QAAS,CAACp0B,EAAGpf,EAAQlG,MAAOA,MAE7Cs5C,IACFzd,EAAAA,EAAAA,GAAa5zB,EAAQod,QAAS,CAACC,EAAGpf,EAAQlG,MAAOA,OAIrD,MAAMsvB,IAAWqpB,EAAAA,EAAAA,IAAezyC,EAAQuyC,GAQxC,OAPInpB,GAAWupB,KACb74C,KAAKsC,QAAU4D,EACflG,KAAKm2C,mBAAmBjwC,EAAQuyC,EAAYI,IAG9C74C,KAAK+yC,WAAayG,EAEXlqB,CACT,CAUA+pB,kBAAAA,CAAmB/zB,EAAGmzB,EAAYS,EAAazuB,GAC7C,GAAe,aAAXnF,EAAE3kB,KACJ,MAAO,GAGT,IAAKu4C,EAEH,OAAOT,EAGT,MAAMK,EAAe94C,KAAKiI,QAAQ8wC,MAClC,OAAO/4C,KAAKs3C,0BAA0BhyB,EAAGwzB,EAAa9uC,KAAM8uC,EAAcruB,EAC5E,EAIF,SAAS4nB,KACP,OAAOzhB,EAAAA,EAAAA,GAAKwhB,GAAMP,WAAYrxC,GAAUA,EAAM2yC,SAASjH,cACzD,CEzuCA,SAASyN,GAAkBj2B,EAAiB3D,EAAqBC,EAAqB45B,GACpF,MAAMC,GARiB/wC,EAQG4a,EAAIzb,QAAQ6xC,cAP/BC,EAAAA,EAAAA,IAAkBjxC,EAAO,CAAC,aAAc,WAAY,aAAc,cAD3E,IAAyBA,EASvB,MAAMkxC,GAAiBh6B,EAAcD,GAAe,EAC9Ck6B,EAAa74C,KAAKC,IAAI24C,EAAeJ,EAAa75B,EAAc,GAShEm6B,EAAqBp9B,IACzB,MAAMq9B,GAAiBn6B,EAAc5e,KAAKC,IAAI24C,EAAel9B,IAAQ88B,EAAa,EAClF,OAAOlb,EAAAA,EAAAA,GAAY5hB,EAAK,EAAG1b,KAAKC,IAAI24C,EAAeG,GAAA,EAGrD,MAAO,CACLC,WAAYF,EAAkBL,EAAEO,YAChCC,SAAUH,EAAkBL,EAAEQ,UAC9BC,YAAY5b,EAAAA,EAAAA,GAAYmb,EAAES,WAAY,EAAGL,GACzCM,UAAU7b,EAAAA,EAAAA,GAAYmb,EAAEU,SAAU,EAAGN,GAEzC,CAKA,SAASO,GAAW5rC,EAAW6rC,EAAe/rC,EAAWC,GACvD,MAAO,CACLD,EAAGA,EAAIE,EAAIxN,KAAKsgB,IAAI+4B,GACpB9rC,EAAGA,EAAIC,EAAIxN,KAAKwgB,IAAI64B,GAExB,CAiBA,SAASC,GACP5tC,EACAmI,EACAkK,EACA0B,EACAxX,EACA2e,GAEA,MAAM,EAACtZ,EAAA,EAAGC,EAAG4S,WAAYjgB,EAAK,YAAEq5C,EAAa56B,YAAa66B,GAAU3lC,EAE9D+K,EAAc5e,KAAKqC,IAAIwR,EAAQ+K,YAAca,EAAU1B,EAASw7B,EAAa,GAC7E56B,EAAc66B,EAAS,EAAIA,EAAS/5B,EAAU1B,EAASw7B,EAAc,EAE3E,IAAIE,EAAgB,EACpB,MAAMC,EAAQzxC,EAAM/H,EAEpB,GAAIuf,EAAS,CAIX,MAEMk6B,IAFuBH,EAAS,EAAIA,EAAS/5B,EAAU,IAChCb,EAAc,EAAIA,EAAca,EAAU,IACI,EAE3Eg6B,GAAiBC,GAD4B,IAAvBC,EAA2BD,EAASC,GAAuBA,EAAqBl6B,GAAWi6B,IACvE,EAG5C,MACME,GAAeF,EADR15C,KAAKqC,IAAI,KAAOq3C,EAAQ96B,EAAcb,EAASoD,EAAAA,GAAMvC,GAC7B,EAC/BuB,EAAajgB,EAAQ05C,EAAcH,EACnCr5B,EAAWnY,EAAM2xC,EAAcH,GAC/B,WAACT,EAAA,SAAYC,EAAA,WAAUC,EAAU,SAAEC,GAAYZ,GAAkB1kC,EAAS8K,EAAaC,EAAawB,EAAWD,GAE/G05B,EAA2Bj7B,EAAco6B,EACzCc,EAAyBl7B,EAAcq6B,EACvCc,EAA0B55B,EAAa64B,EAAaa,EACpDG,EAAwB55B,EAAW64B,EAAWa,EAE9CG,EAA2Bt7B,EAAcu6B,EACzCgB,EAAyBv7B,EAAcw6B,EACvCgB,EAA0Bh6B,EAAa+4B,EAAae,EACpDG,EAAwBh6B,EAAW+4B,EAAWe,EAIpD,GAFAxuC,EAAI04B,YAEAxd,EAAU,CAEZ,MAAMyzB,GAAyBN,EAA0BC,GAAyB,EAKlF,GAJAtuC,EAAI4W,IAAIhV,EAAGC,EAAGqR,EAAam7B,EAAyBM,GACpD3uC,EAAI4W,IAAIhV,EAAGC,EAAGqR,EAAay7B,EAAuBL,GAG9Cf,EAAW,EAAG,CAChB,MAAMqB,EAAUlB,GAAWU,EAAwBE,EAAuB1sC,EAAGC,GAC7E7B,EAAI4W,IAAIg4B,EAAQhtC,EAAGgtC,EAAQ/sC,EAAG0rC,EAAUe,EAAuB55B,EAAWa,EAAAA,GAI5E,MAAMs5B,EAAKnB,GAAWc,EAAwB95B,EAAU9S,EAAGC,GAI3D,GAHA7B,EAAI44B,OAAOiW,EAAGjtC,EAAGitC,EAAGhtC,GAGhB4rC,EAAW,EAAG,CAChB,MAAMmB,EAAUlB,GAAWc,EAAwBE,EAAuB9sC,EAAGC,GAC7E7B,EAAI4W,IAAIg4B,EAAQhtC,EAAGgtC,EAAQ/sC,EAAG4rC,EAAU/4B,EAAWa,EAAAA,EAASm5B,EAAwBp6C,KAAKmhB,IAI3F,MAAMq5B,GAA0Bp6B,EAAY+4B,EAAWx6B,GAAiBwB,EAAc+4B,EAAav6B,IAAiB,EAKpH,GAJAjT,EAAI4W,IAAIhV,EAAGC,EAAGoR,EAAayB,EAAY+4B,EAAWx6B,EAAc67B,GAAuB,GACvF9uC,EAAI4W,IAAIhV,EAAGC,EAAGoR,EAAa67B,EAAuBr6B,EAAc+4B,EAAav6B,GAAc,GAGvFu6B,EAAa,EAAG,CAClB,MAAMoB,EAAUlB,GAAWa,EAA0BE,EAAyB7sC,EAAGC,GACjF7B,EAAI4W,IAAIg4B,EAAQhtC,EAAGgtC,EAAQ/sC,EAAG2rC,EAAYiB,EAA0Bn6C,KAAKmhB,GAAIhB,EAAac,EAAAA,GAI5F,MAAMw5B,EAAKrB,GAAWS,EAA0B15B,EAAY7S,EAAGC,GAI/D,GAHA7B,EAAI44B,OAAOmW,EAAGntC,EAAGmtC,EAAGltC,GAGhByrC,EAAa,EAAG,CAClB,MAAMsB,EAAUlB,GAAWS,EAA0BE,EAAyBzsC,EAAGC,GACjF7B,EAAI4W,IAAIg4B,EAAQhtC,EAAGgtC,EAAQ/sC,EAAGyrC,EAAY74B,EAAac,EAAAA,EAAS84B,QAE7D,CACLruC,EAAI24B,OAAO/2B,EAAGC,GAEd,MAAMmtC,EAAc16C,KAAKsgB,IAAIy5B,GAA2Bn7B,EAActR,EAChEqtC,EAAc36C,KAAKwgB,IAAIu5B,GAA2Bn7B,EAAcrR,EACtE7B,EAAI44B,OAAOoW,EAAaC,GAExB,MAAMC,EAAY56C,KAAKsgB,IAAI05B,GAAyBp7B,EAActR,EAC5DutC,EAAY76C,KAAKwgB,IAAIw5B,GAAyBp7B,EAAcrR,EAClE7B,EAAI44B,OAAOsW,EAAWC,GAGxBnvC,EAAIovC,WACN,CAyBA,SAASrW,GACP/4B,EACAmI,EACAkK,EACA0B,EACAmH,GAEA,MAAM,YAACm0B,EAAA,WAAa56B,EAAA,cAAYf,EAAa,QAAEvY,GAAWgN,GACpD,YAAC8O,EAAA,gBAAaq4B,EAAA,WAAiBrZ,EAAU,iBAAEE,GAAoBh7B,EAC/Do0C,EAAgC,UAAxBp0C,EAAQ6b,YAEtB,IAAKC,EACH,OAGFjX,EAAIw4B,YAAYvC,GAAc,IAC9Bj2B,EAAIy4B,eAAiBtC,EAEjBoZ,GACFvvC,EAAIsY,UAA0B,EAAdrB,EAChBjX,EAAIwvC,SAAWF,GAAmB,UAElCtvC,EAAIsY,UAAYrB,EAChBjX,EAAIwvC,SAAWF,GAAmB,SAGpC,IAAI56B,EAAWvM,EAAQuM,SACvB,GAAI26B,EAAa,CACfzB,GAAQ5tC,EAAKmI,EAASkK,EAAQ0B,EAASW,EAAUwG,GACjD,IAAK,IAAI5lB,EAAI,EAAGA,EAAI+5C,IAAe/5C,EACjC0K,EAAI64B,SAED5oB,MAAMyD,KACTgB,EAAWD,GAAcf,EAAgBE,EAAAA,GAAOA,EAAAA,IAIhD27B,GA7ON,SAAiBvvC,EAA+BmI,EAAqBuM,GACnE,MAAM,WAACD,EAAA,YAAYo5B,EAAA,EAAajsC,EAAA,EAAGC,EAAA,YAAGqR,EAAA,YAAaD,GAAe9K,EAClE,IAAIsnC,EAAc5B,EAAc36B,EAIhClT,EAAI04B,YACJ14B,EAAI4W,IAAIhV,EAAGC,EAAGqR,EAAauB,EAAag7B,EAAa/6B,EAAW+6B,GAC5Dx8B,EAAc46B,GAChB4B,EAAc5B,EAAc56B,EAC5BjT,EAAI4W,IAAIhV,EAAGC,EAAGoR,EAAayB,EAAW+6B,EAAah7B,EAAag7B,GAAa,IAE7EzvC,EAAI4W,IAAIhV,EAAGC,EAAGgsC,EAAan5B,EAAWa,EAAAA,EAASd,EAAac,EAAAA,GAE9DvV,EAAIovC,YACJpvC,EAAI6H,MACN,CA8NI6nC,CAAQ1vC,EAAKmI,EAASuM,GAGnB26B,IACHzB,GAAQ5tC,EAAKmI,EAASkK,EAAQ0B,EAASW,EAAUwG,GACjDlb,EAAI64B,SAER,EFwgCAnqB,EAAAA,EAAAA,GA5oCM42B,GAAA,WAEc9qC,EAAAA,IAASkU,EAAAA,EAAAA,GAFvB42B,GAAA,YAGeP,KAAUr2B,EAAAA,EAAAA,GAHzB42B,GAAA,YAIezJ,EAAAA,KAAUntB,EAAAA,EAAAA,GAJzB42B,GAAA,WAKc5pB,KAAShN,EAAAA,EAAAA,GALvB42B,GAAA,oBAMqB52B,EAAAA,EAAAA,GANrB42B,GAAA,WAOcN,IEuIL,MAAM2K,WAAmBpmB,GAmCtCt2B,WAAAA,CAAY+E,GACV6W,SAAKH,EAAAA,EAAAA,GAAC,KAAD,yBAAAA,EAAAA,EAAAA,GAAC,KAAD,oBAAAA,EAAAA,EAAAA,GAAC,KAAD,uBAAAA,EAAAA,EAAAA,GAAC,KAAD,uBAAAA,EAAAA,EAAAA,GAAC,KAAD,uBAAAA,EAAAA,EAAAA,GAAC,KAAD,uBAAAA,EAAAA,EAAAA,GAAC,KAAD,qBAELxb,KAAKiI,aAAU3H,EACfN,KAAKwgB,mBAAgBlgB,EACrBN,KAAKuhB,gBAAajhB,EAClBN,KAAKwhB,cAAWlhB,EAChBN,KAAK+f,iBAAczf,EACnBN,KAAKggB,iBAAc1f,EACnBN,KAAK26C,YAAc,EACnB36C,KAAKm8C,YAAc,EAEfr3C,GACFsC,OAAOe,OAAOnI,KAAM8E,EAExB,CAEA+lB,OAAAA,CAAQ6xB,EAAgBC,EAAgBlyB,GACtC,MAAM/K,EAAQ1f,KAAK6rB,SAAS,CAAC,IAAK,KAAMpB,IAClC,MAACzI,EAAK,SAAE2J,IAAYG,EAAAA,EAAAA,GAAkBpM,EAAO,CAAChR,EAAGguC,EAAQ/tC,EAAGguC,KAC5D,WAACp7B,EAAA,SAAYC,EAAA,YAAUzB,EAAW,YAAEC,EAAW,cAAEQ,GAAiBxgB,KAAK6rB,SAAS,CACpF,aACA,WACA,cACA,cACA,iBACCpB,GACGmyB,GAAW58C,KAAKiI,QAAQ4Y,QAAU7gB,KAAKiI,QAAQ8b,aAAe,EAE9D84B,GADiB9tC,EAAAA,EAAAA,GAAeyR,EAAegB,EAAWD,IACxBb,EAAAA,IAAOuB,EAAAA,EAAAA,GAAcD,EAAOT,EAAYC,GAC1Es7B,GAAeC,EAAAA,EAAAA,IAAWpxB,EAAU5L,EAAc68B,EAAS58B,EAAc48B,GAE/E,OAAQC,GAAiBC,CAC3B,CAEApxB,cAAAA,CAAejB,GACb,MAAM,EAAC/b,EAAC,EAAEC,EAAC,WAAE4S,EAAA,SAAYC,EAAA,YAAUzB,EAAA,YAAaC,GAAehgB,KAAK6rB,SAAS,CAC3E,IACA,IACA,aACA,WACA,cACA,eACCpB,IACG,OAACtL,EAAA,QAAQ0B,GAAW7gB,KAAKiI,QACzB+0C,GAAaz7B,EAAaC,GAAY,EACtCy7B,GAAcl9B,EAAcC,EAAca,EAAU1B,GAAU,EACpE,MAAO,CACLzQ,EAAGA,EAAItN,KAAKsgB,IAAIs7B,GAAaC,EAC7BtuC,EAAGA,EAAIvN,KAAKwgB,IAAIo7B,GAAaC,EAEjC,CAEA3mB,eAAAA,CAAgB7L,GACd,OAAOzqB,KAAK0rB,eAAejB,EAC7B,CAEApoB,IAAAA,CAAKyK,GACH,MAAM,QAAC7E,EAAO,cAAEuY,GAAiBxgB,KAC3Bmf,GAAUlX,EAAQkX,QAAU,GAAK,EACjC0B,GAAW5Y,EAAQ4Y,SAAW,GAAK,EACnCmH,EAAW/f,EAAQ+f,SAIzB,GAHAhoB,KAAK26C,YAAuC,UAAxB1yC,EAAQ6b,YAA2B,IAAO,EAC9D9jB,KAAKm8C,YAAc37B,EAAgBE,EAAAA,EAAMtf,KAAKqE,MAAM+a,EAAgBE,EAAAA,GAAO,EAErD,IAAlBF,GAAuBxgB,KAAK+f,YAAc,GAAK/f,KAAKggB,YAAc,EACpE,OAGFlT,EAAIg4B,OAEJ,MAAMkY,GAAah9C,KAAKuhB,WAAavhB,KAAKwhB,UAAY,EACtD1U,EAAIowC,UAAU97C,KAAKsgB,IAAIs7B,GAAa79B,EAAQ/d,KAAKwgB,IAAIo7B,GAAa79B,GAClE,MACMg+B,EAAeh+B,GADT,EAAI/d,KAAKwgB,IAAIxgB,KAAKC,IAAIkhB,EAAAA,EAAI/B,GAAiB,KAGvD1T,EAAIiY,UAAY9c,EAAQ+c,gBACxBlY,EAAImY,YAAchd,EAAQid,YA9L9B,SACEpY,EACAmI,EACAkK,EACA0B,EACAmH,GAEA,MAAM,YAACm0B,EAAW,WAAE56B,EAAA,cAAYf,GAAiBvL,EACjD,IAAIuM,EAAWvM,EAAQuM,SACvB,GAAI26B,EAAa,CACfzB,GAAQ5tC,EAAKmI,EAASkK,EAAQ0B,EAASW,EAAUwG,GACjD,IAAK,IAAI5lB,EAAI,EAAGA,EAAI+5C,IAAe/5C,EACjC0K,EAAIoB,OAED6O,MAAMyD,KACTgB,EAAWD,GAAcf,EAAgBE,EAAAA,GAAOA,EAAAA,IAGpDg6B,GAAQ5tC,EAAKmI,EAASkK,EAAQ0B,EAASW,EAAUwG,GACjDlb,EAAIoB,MAEN,CA2KIkvC,CAAQtwC,EAAK9M,KAAMm9C,EAAct8B,EAASmH,GAC1C6d,GAAW/4B,EAAK9M,KAAMm9C,EAAct8B,EAASmH,GAE7Clb,EAAIk4B,SACN,ECjXF,SAASqY,GAASvwC,EAAK7E,GAA0B,IAAjB4c,EAAAjjB,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,GAAAA,UAAA,GAAQqG,EACtC6E,EAAIwwC,SAAUvuC,EAAAA,EAAAA,GAAe8V,EAAM04B,eAAgBt1C,EAAQs1C,gBAC3DzwC,EAAIw4B,aAAYv2B,EAAAA,EAAAA,GAAe8V,EAAMke,WAAY96B,EAAQ86B,aACzDj2B,EAAIy4B,gBAAiBx2B,EAAAA,EAAAA,GAAe8V,EAAMoe,iBAAkBh7B,EAAQg7B,kBACpEn2B,EAAIwvC,UAAWvtC,EAAAA,EAAAA,GAAe8V,EAAMu3B,gBAAiBn0C,EAAQm0C,iBAC7DtvC,EAAIsY,WAAYrW,EAAAA,EAAAA,GAAe8V,EAAMd,YAAa9b,EAAQ8b,aAC1DjX,EAAImY,aAAclW,EAAAA,EAAAA,GAAe8V,EAAMK,YAAajd,EAAQid,YAC9D,CAEA,SAASwgB,GAAO54B,EAAK0wC,EAAUz4C,GAC7B+H,EAAI44B,OAAO3gC,EAAO2J,EAAG3J,EAAO4J,EAC9B,CAiBA,SAAS8uC,GAASh+B,EAAQyG,GAAsB,IAAb+G,EAASrrB,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,GAAAA,UAAA,MAC1C,MAAM8P,EAAQ+N,EAAO5d,QACdP,MAAOo8C,EAAc,EAAGr0C,IAAKs0C,EAAYjsC,EAAQ,GAAKub,GACtD3rB,MAAOs8C,EAAcv0C,IAAKw0C,GAAc33B,EACzC5kB,EAAQF,KAAKqC,IAAIi6C,EAAaE,GAC9Bv0C,EAAMjI,KAAKC,IAAIs8C,EAAWE,GAC1BC,EAAUJ,EAAcE,GAAgBD,EAAYC,GAAgBF,EAAcG,GAAcF,EAAYE,EAElH,MAAO,CACLnsC,QACApQ,QACAsE,KAAMsgB,EAAQtgB,KACd8D,KAAML,EAAM/H,IAAUw8C,EAAUpsC,EAAQrI,EAAM/H,EAAQ+H,EAAM/H,EAEhE,CAiBA,SAASy8C,GAAYjxC,EAAK4Y,EAAMQ,EAAS+G,GACvC,MAAM,OAACxN,EAAA,QAAQxX,GAAWyd,GACpB,MAAChU,EAAA,MAAOpQ,EAAA,KAAOsE,EAAA,KAAM8D,GAAQ+zC,GAASh+B,EAAQyG,EAAS+G,GACvD+wB,EA9CR,SAAuB/1C,GACrB,OAAIA,EAAQg2C,QACHC,EAAAA,GAGLj2C,EAAQk2C,SAA8C,aAAnCl2C,EAAQm2C,uBACtBC,EAAAA,GAGF3Y,EACT,CAoCqB4Y,CAAcr2C,GAEjC,IACI7F,EAAGsd,EAAO7N,GADV,KAACkG,GAAO,EAAI,QAAE3O,GAAW6jB,GAAU,CAAC,EAGxC,IAAK7qB,EAAI,EAAGA,GAAKsH,IAAQtH,EACvBsd,EAAQD,GAAQne,GAAS8H,EAAUM,EAAOtH,EAAIA,IAAMsP,GAEhDgO,EAAMG,OAGC9H,GACTjL,EAAI24B,OAAO/lB,EAAMhR,EAAGgR,EAAM/Q,GAC1BoJ,GAAO,GAEPimC,EAAWlxC,EAAK+E,EAAM6N,EAAOtW,EAASnB,EAAQg2C,SAGhDpsC,EAAO6N,GAQT,OALI9Z,IACF8Z,EAAQD,GAAQne,GAAS8H,EAAUM,EAAO,IAAMgI,GAChDssC,EAAWlxC,EAAK+E,EAAM6N,EAAOtW,EAASnB,EAAQg2C,YAGvCr4C,CACX,CAiBA,SAAS24C,GAAgBzxC,EAAK4Y,EAAMQ,EAAS+G,GAC3C,MAAMxN,EAASiG,EAAKjG,QACd,MAAC/N,EAAK,MAAEpQ,EAAK,KAAEoI,GAAQ+zC,GAASh+B,EAAQyG,EAAS+G,IACjD,KAAClV,GAAO,EAAI,QAAE3O,GAAW6jB,GAAU,CAAC,EAC1C,IAEI7qB,EAAGsd,EAAO8+B,EAAOh8B,EAAMJ,EAAMq8B,EAF7BC,EAAO,EACPC,EAAS,EAGb,MAAMC,EAAcj1C,IAAWrI,GAAS8H,EAAUM,EAAOC,EAAQA,IAAU+H,EACrEmtC,EAAQA,KACRr8B,IAASJ,IAEXtV,EAAI44B,OAAOgZ,EAAMt8B,GACjBtV,EAAI44B,OAAOgZ,EAAMl8B,GAGjB1V,EAAI44B,OAAOgZ,EAAMD,KASrB,IALI1mC,IACF2H,EAAQD,EAAOm/B,EAAW,IAC1B9xC,EAAI24B,OAAO/lB,EAAMhR,EAAGgR,EAAM/Q,IAGvBvM,EAAI,EAAGA,GAAKsH,IAAQtH,EAAG,CAG1B,GAFAsd,EAAQD,EAAOm/B,EAAWx8C,IAEtBsd,EAAMG,KAER,SAGF,MAAMnR,EAAIgR,EAAMhR,EACVC,EAAI+Q,EAAM/Q,EACVmwC,EAAa,EAAJpwC,EAEXowC,IAAWN,GAET7vC,EAAI6T,EACNA,EAAO7T,EACEA,EAAIyT,IACbA,EAAOzT,GAGT+vC,GAAQC,EAASD,EAAOhwC,KAAOiwC,IAE/BE,IAGA/xC,EAAI44B,OAAOh3B,EAAGC,GAEd6vC,EAAQM,EACRH,EAAS,EACTn8B,EAAOJ,EAAOzT,GAGhB8vC,EAAQ9vC,CACV,CACAkwC,GACF,CAOA,SAASE,GAAkBr5B,GACzB,MAAMvc,EAAOuc,EAAKzd,QACZ86B,EAAa55B,EAAK45B,YAAc55B,EAAK45B,WAAWlhC,OAEtD,OADqB6jB,EAAKM,aAAeN,EAAK/f,QAAUwD,EAAKg1C,SAA2C,aAAhCh1C,EAAKi1C,yBAA0Cj1C,EAAK80C,UAAYlb,EACnHwb,GAAkBR,EACzC,EDgMAviC,EAAAA,EAAAA,GAvHqBihC,GAAmB,KAE1B,QAAMjhC,EAAAA,EAAAA,GAFCihC,GAAmB,WAIpB,CAChB34B,YAAa,SACboB,YAAa,OACb6d,WAAY,GACZE,iBAAkB,EAClBmZ,qBAAiB97C,EACjBw5C,aAAc,EACd/1B,YAAa,EACb5E,OAAQ,EACR0B,QAAS,EACTmB,WAAO1hB,EACP0nB,UAAU,KACVxM,EAAAA,EAAAA,GAhBiBihC,GAAmB,gBAkBf,CACrBz3B,gBAAiB,qBACjBxJ,EAAAA,EAAAA,GApBiBihC,GAAmB,cAsBjB,CACnBr4B,aAAa,EACbC,WAAalH,GAAkB,eAATA,ICtD1B,MAAM6hC,GAA8B,oBAAXC,OAEzB,SAAS58C,GAAKyK,EAAK4Y,EAAMpkB,EAAOoQ,GAC1BstC,KAAct5B,EAAKzd,QAAQie,QA7BjC,SAA6BpZ,EAAK4Y,EAAMpkB,EAAOoQ,GAC7C,IAAIwtC,EAAOx5B,EAAKy5B,MACXD,IACHA,EAAOx5B,EAAKy5B,MAAQ,IAAIF,OACpBv5B,EAAKw5B,KAAKA,EAAM59C,EAAOoQ,IACzBwtC,EAAKhD,aAGTmB,GAASvwC,EAAK4Y,EAAKzd,SACnB6E,EAAI64B,OAAOuZ,EACb,CAoBIE,CAAoBtyC,EAAK4Y,EAAMpkB,EAAOoQ,GAlB1C,SAA0B5E,EAAK4Y,EAAMpkB,EAAOoQ,GAC1C,MAAM,SAAC2tC,EAAA,QAAUp3C,GAAWyd,EACtB45B,EAAgBP,GAAkBr5B,GAExC,IAAK,MAAMQ,KAAWm5B,EACpBhC,GAASvwC,EAAK7E,EAASie,EAAQrB,OAC/B/X,EAAI04B,YACA8Z,EAAcxyC,EAAK4Y,EAAMQ,EAAS,CAAC5kB,QAAO+H,IAAK/H,EAAQoQ,EAAQ,KACjE5E,EAAIovC,YAENpvC,EAAI64B,QAER,CAQI4Z,CAAiBzyC,EAAK4Y,EAAMpkB,EAAOoQ,EAEvC,CAEe,MAAM8tC,WAAoBnpB,GAoCvCt2B,WAAAA,CAAY+E,GACV6W,QAEA3b,KAAKmmB,UAAW,EAChBnmB,KAAKiI,aAAU3H,EACfN,KAAK+G,YAASzG,EACdN,KAAK2F,WAAQrF,EACbN,KAAKooB,eAAY9nB,EACjBN,KAAKm/C,WAAQ7+C,EACbN,KAAKy/C,aAAUn/C,EACfN,KAAK0/C,eAAYp/C,EACjBN,KAAKgmB,YAAa,EAClBhmB,KAAK2/C,gBAAiB,EACtB3/C,KAAK+lB,mBAAgBzlB,EAEjBwE,GACFsC,OAAOe,OAAOnI,KAAM8E,EAExB,CAEAgiB,mBAAAA,CAAoB/R,EAAW3F,GAC7B,MAAMnH,EAAUjI,KAAKiI,QACrB,IAAKA,EAAQk2C,SAA8C,aAAnCl2C,EAAQm2C,0BAA2Cn2C,EAAQg2C,UAAYj+C,KAAK2/C,eAAgB,CAClH,MAAM/5C,EAAOqC,EAAQme,SAAWpmB,KAAK2F,MAAQ3F,KAAKooB,WAClDw3B,EAAAA,EAAAA,IAA2B5/C,KAAKy/C,QAASx3C,EAAS8M,EAAWnP,EAAMwJ,GACnEpP,KAAK2/C,gBAAiB,EAE1B,CAEA,UAAIlgC,CAAOA,GACTzf,KAAKy/C,QAAUhgC,SACRzf,KAAK0/C,iBACL1/C,KAAKm/C,MACZn/C,KAAK2/C,gBAAiB,CACxB,CAEA,UAAIlgC,GACF,OAAOzf,KAAKy/C,OACd,CAEA,YAAIJ,GACF,OAAOr/C,KAAK0/C,YAAc1/C,KAAK0/C,WAAYG,EAAAA,EAAAA,IAAiB7/C,KAAMA,KAAKiI,QAAQie,SACjF,CAMAyR,KAAAA,GACE,MAAM0nB,EAAWr/C,KAAKq/C,SAChB5/B,EAASzf,KAAKyf,OACpB,OAAO4/B,EAASx9C,QAAU4d,EAAO4/B,EAAS,GAAG/9C,MAC/C,CAMAqb,IAAAA,GACE,MAAM0iC,EAAWr/C,KAAKq/C,SAChB5/B,EAASzf,KAAKyf,OACd/N,EAAQ2tC,EAASx9C,OACvB,OAAO6P,GAAS+N,EAAO4/B,EAAS3tC,EAAQ,GAAGrI,IAC7C,CASAy2C,WAAAA,CAAYpgC,EAAOmoB,GACjB,MAAM5/B,EAAUjI,KAAKiI,QACfa,EAAQ4W,EAAMmoB,GACdpoB,EAASzf,KAAKyf,OACd4/B,GAAWU,EAAAA,EAAAA,IAAe//C,KAAM,CAAC6nC,WAAUvmC,MAAOwH,EAAOO,IAAKP,IAEpE,IAAKu2C,EAASx9C,OACZ,OAGF,MAAM21B,EAAS,GACTwoB,EAvKV,SAAiC/3C,GAC/B,OAAIA,EAAQg2C,QACHgC,EAAAA,GAGLh4C,EAAQk2C,SAA8C,aAAnCl2C,EAAQm2C,uBACtB8B,EAAAA,GAGFC,EAAAA,EACT,CA6JyBC,CAAwBn4C,GAC7C,IAAI7F,EAAGsH,EACP,IAAKtH,EAAI,EAAGsH,EAAO21C,EAASx9C,OAAQO,EAAIsH,IAAQtH,EAAG,CACjD,MAAM,MAACd,EAAA,IAAO+H,GAAOg2C,EAASj9C,GACxBgjC,EAAK3lB,EAAOne,GACZ+jC,EAAK5lB,EAAOpW,GAClB,GAAI+7B,IAAOC,EAAI,CACb7N,EAAOr0B,KAAKiiC,GACZ,SAEF,MACMib,EAAeL,EAAa5a,EAAIC,EAD5BjkC,KAAKoY,KAAK1Q,EAAQs8B,EAAGyC,KAAcxC,EAAGwC,GAAYzC,EAAGyC,KAClB5/B,EAAQg2C,SACrDoC,EAAaxY,GAAYnoB,EAAMmoB,GAC/BrQ,EAAOr0B,KAAKk9C,EACd,CACA,OAAyB,IAAlB7oB,EAAO31B,OAAe21B,EAAO,GAAKA,CAC3C,CAgBAumB,WAAAA,CAAYjxC,EAAKoZ,EAAS+G,GAExB,OADsB8xB,GAAkB/+C,KACjCs/C,CAAcxyC,EAAK9M,KAAMkmB,EAAS+G,EAC3C,CASAiyB,IAAAA,CAAKpyC,EAAKxL,EAAOoQ,GACf,MAAM2tC,EAAWr/C,KAAKq/C,SAChBC,EAAgBP,GAAkB/+C,MACxC,IAAI4F,EAAO5F,KAAK2F,MAEhBrE,EAAQA,GAAS,EACjBoQ,EAAQA,GAAU1R,KAAKyf,OAAO5d,OAASP,EAEvC,IAAK,MAAM4kB,KAAWm5B,EACpBz5C,GAAQ05C,EAAcxyC,EAAK9M,KAAMkmB,EAAS,CAAC5kB,QAAO+H,IAAK/H,EAAQoQ,EAAQ,IAEzE,QAAS9L,CACX,CASAvD,IAAAA,CAAKyK,EAAKiI,EAAWzT,EAAOoQ,GAC1B,MAAMzJ,EAAUjI,KAAKiI,SAAW,CAAC,GAClBjI,KAAKyf,QAAU,IAEnB5d,QAAUoG,EAAQ8b,cAC3BjX,EAAIg4B,OAEJziC,GAAKyK,EAAK9M,KAAMsB,EAAOoQ,GAEvB5E,EAAIk4B,WAGFhlC,KAAKmmB,WAEPnmB,KAAK2/C,gBAAiB,EACtB3/C,KAAKm/C,WAAQ7+C,EAEjB,ECjbF,SAASggD,GAAQv2B,EAAkB2C,EAAalhB,EAAiBif,GAC/D,MAAMxiB,EAAU8hB,EAAG9hB,SACZ,CAACuD,GAAO1C,GAASihB,EAAG8B,SAAS,CAACrgB,GAAOif,GAE5C,OAAQrpB,KAAKoY,IAAIkT,EAAM5jB,GAASb,EAAQuX,OAASvX,EAAQs4C,SAC3D,ED6aA/kC,EAAAA,EAAAA,GA1MqBgkC,GAAoB,KAE3B,SAAOhkC,EAAAA,EAAAA,GAFAgkC,GAAoB,WAOrB,CAChBjC,eAAgB,OAChBxa,WAAY,GACZE,iBAAkB,EAClBmZ,gBAAiB,QACjBr4B,YAAa,EACby8B,iBAAiB,EACjBpC,uBAAwB,UACxBlwC,MAAM,EACNkY,UAAU,EACV63B,SAAS,EACTE,QAAS,KACT3iC,EAAAA,EAAAA,GAnBiBgkC,GAAoB,gBAwBhB,CACrBx6B,gBAAiB,kBACjBE,YAAa,iBACb1J,EAAAA,EAAAA,GA3BiBgkC,GAAoB,cA8BlB,CACnBp7B,aAAa,EACbC,WAAalH,GAAkB,eAATA,GAAkC,SAATA,IC/PpC,MAAMsjC,WAAqBpqB,GA6BxCt2B,WAAAA,CAAY+E,GACV6W,SAAKH,EAAAA,EAAAA,GAAC,KAAD,kBAAAA,EAAAA,EAAAA,GAAC,KAAD,gBAAAA,EAAAA,EAAAA,GAAC,KAAD,eAELxb,KAAKiI,aAAU3H,EACfN,KAAKmL,YAAS7K,EACdN,KAAK6f,UAAOvf,EACZN,KAAK2D,UAAOrD,EAERwE,GACFsC,OAAOe,OAAOnI,KAAM8E,EAExB,CAEA+lB,OAAAA,CAAQ61B,EAAgBC,EAAgBl2B,GACtC,MAAMxiB,EAAUjI,KAAKiI,SACf,EAACyG,EAAA,EAAGC,GAAK3O,KAAK6rB,SAAS,CAAC,IAAK,KAAMpB,GACzC,OAASrpB,KAAKmqB,IAAIm1B,EAAShyC,EAAG,GAAKtN,KAAKmqB,IAAIo1B,EAAShyC,EAAG,GAAMvN,KAAKmqB,IAAItjB,EAAQs4C,UAAYt4C,EAAQuX,OAAQ,EAC7G,CAEAohC,QAAAA,CAASF,EAAgBj2B,GACvB,OAAO61B,GAAQtgD,KAAM0gD,EAAQ,IAAKj2B,EACpC,CAEAo2B,QAAAA,CAASF,EAAgBl2B,GACvB,OAAO61B,GAAQtgD,KAAM2gD,EAAQ,IAAKl2B,EACpC,CAEAiB,cAAAA,CAAejB,GACb,MAAM,EAAC/b,EAAA,EAAGC,GAAK3O,KAAK6rB,SAAS,CAAC,IAAK,KAAMpB,GACzC,MAAO,CAAC/b,IAAGC,IACb,CAEA5F,IAAAA,CAAKd,GAEH,IAAIuX,GADJvX,EAAUA,GAAWjI,KAAKiI,SAAW,CAAC,GACjBuX,QAAU,EAC/BA,EAASpe,KAAKqC,IAAI+b,EAAQA,GAAUvX,EAAQ64C,aAAe,GAE3D,OAAgC,GAAxBthC,GADYA,GAAUvX,EAAQ8b,aAAe,GAEvD,CAEA1hB,IAAAA,CAAKyK,EAA+BgI,GAClC,MAAM7M,EAAUjI,KAAKiI,QAEjBjI,KAAK6f,MAAQ5X,EAAQuX,OAAS,MAAQoL,EAAAA,EAAAA,GAAe5qB,KAAM8U,EAAM9U,KAAK+I,KAAKd,GAAW,KAI1F6E,EAAImY,YAAchd,EAAQid,YAC1BpY,EAAIsY,UAAYnd,EAAQ8b,YACxBjX,EAAIiY,UAAY9c,EAAQ+c,iBACxB+7B,EAAAA,EAAAA,IAAUj0C,EAAK7E,EAASjI,KAAK0O,EAAG1O,KAAK2O,GACvC,CAEAqb,QAAAA,GACE,MAAM/hB,EAAUjI,KAAKiI,SAAW,CAAC,EAEjC,OAAOA,EAAQuX,OAASvX,EAAQs4C,SAClC,EC3FF,SAASS,GAAaC,EAAKx2B,GACzB,MAAM,EAAC/b,EAAC,EAAEC,EAAC,KAAEgM,EAAA,MAAM8B,EAAA,OAAOD,GAAmCykC,EAAIp1B,SAAS,CAAC,IAAK,IAAK,OAAQ,QAAS,UAAWpB,GAEjH,IAAIjW,EAAMF,EAAOD,EAAKE,EAAQ2sC,EAgB9B,OAdID,EAAIvmC,YACNwmC,EAAO1kC,EAAS,EAChBhI,EAAOpT,KAAKC,IAAIqN,EAAGiM,GACnBrG,EAAQlT,KAAKqC,IAAIiL,EAAGiM,GACpBtG,EAAM1F,EAAIuyC,EACV3sC,EAAS5F,EAAIuyC,IAEbA,EAAOzkC,EAAQ,EACfjI,EAAO9F,EAAIwyC,EACX5sC,EAAQ5F,EAAIwyC,EACZ7sC,EAAMjT,KAAKC,IAAIsN,EAAGgM,GAClBpG,EAASnT,KAAKqC,IAAIkL,EAAGgM,IAGhB,CAACnG,OAAMH,MAAKC,QAAOC,SAC5B,CAEA,SAAS4sC,GAAYthC,EAAM/W,EAAOzH,EAAKoC,GACrC,OAAOoc,EAAO,GAAI6e,EAAAA,EAAAA,GAAY51B,EAAOzH,EAAKoC,EAC5C,CAkCA,SAAS29C,GAAcH,GACrB,MAAMI,EAASL,GAAaC,GACtBxkC,EAAQ4kC,EAAO/sC,MAAQ+sC,EAAO7sC,KAC9BgI,EAAS6kC,EAAO9sC,OAAS8sC,EAAOhtC,IAChCsS,EApCR,SAA0Bs6B,EAAKK,EAAMC,GACnC,MAAMz4C,EAAQm4C,EAAIh5C,QAAQ8b,YACpBlE,EAAOohC,EAAIxmC,cACXo/B,GAAI2H,EAAAA,EAAAA,IAAO14C,GAEjB,MAAO,CACLoL,EAAGitC,GAAYthC,EAAKxL,IAAKwlC,EAAExlC,IAAK,EAAGktC,GACnC3yC,EAAGuyC,GAAYthC,EAAKvL,MAAOulC,EAAEvlC,MAAO,EAAGgtC,GACvCntC,EAAGgtC,GAAYthC,EAAKtL,OAAQslC,EAAEtlC,OAAQ,EAAGgtC,GACzCntC,EAAG+sC,GAAYthC,EAAKrL,KAAMqlC,EAAErlC,KAAM,EAAG8sC,GAEzC,CAyBiBG,CAAiBR,EAAKxkC,EAAQ,EAAGD,EAAS,GACnDgD,EAxBR,SAA2ByhC,EAAKK,EAAMC,GACpC,MAAM,mBAAC1mC,GAAsBomC,EAAIp1B,SAAS,CAAC,uBACrC/iB,EAAQm4C,EAAIh5C,QAAQ6xC,aACpBD,GAAI6H,EAAAA,EAAAA,IAAc54C,GAClB64C,EAAOvgD,KAAKC,IAAIigD,EAAMC,GACtB1hC,EAAOohC,EAAIxmC,cAIXmnC,EAAe/mC,IAAsB3T,EAAAA,EAAAA,GAAS4B,GAEpD,MAAO,CACL+4C,QAASV,IAAaS,GAAgB/hC,EAAKxL,KAAOwL,EAAKrL,KAAMqlC,EAAEgI,QAAS,EAAGF,GAC3EG,SAAUX,IAAaS,GAAgB/hC,EAAKxL,KAAOwL,EAAKvL,MAAOulC,EAAEiI,SAAU,EAAGH,GAC9EI,WAAYZ,IAAaS,GAAgB/hC,EAAKtL,QAAUsL,EAAKrL,KAAMqlC,EAAEkI,WAAY,EAAGJ,GACpFK,YAAab,IAAaS,GAAgB/hC,EAAKtL,QAAUsL,EAAKvL,MAAOulC,EAAEmI,YAAa,EAAGL,GAE3F,CAOiBM,CAAkBhB,EAAKxkC,EAAQ,EAAGD,EAAS,GAE1D,MAAO,CACL0lC,MAAO,CACLxzC,EAAG2yC,EAAO7sC,KACV7F,EAAG0yC,EAAOhtC,IACVoa,EAAGhS,EACHkS,EAAGnS,EACHgD,UAEF68B,MAAO,CACL3tC,EAAG2yC,EAAO7sC,KAAOmS,EAAOvS,EACxBzF,EAAG0yC,EAAOhtC,IAAMsS,EAAOzS,EACvBua,EAAGhS,EAAQkK,EAAOvS,EAAIuS,EAAO/X,EAC7B+f,EAAGnS,EAASmK,EAAOzS,EAAIyS,EAAOxS,EAC9BqL,OAAQ,CACNqiC,QAASzgD,KAAKqC,IAAI,EAAG+b,EAAOqiC,QAAUzgD,KAAKqC,IAAIkjB,EAAOzS,EAAGyS,EAAOvS,IAChE0tC,SAAU1gD,KAAKqC,IAAI,EAAG+b,EAAOsiC,SAAW1gD,KAAKqC,IAAIkjB,EAAOzS,EAAGyS,EAAO/X,IAClEmzC,WAAY3gD,KAAKqC,IAAI,EAAG+b,EAAOuiC,WAAa3gD,KAAKqC,IAAIkjB,EAAOxS,EAAGwS,EAAOvS,IACtE4tC,YAAa5gD,KAAKqC,IAAI,EAAG+b,EAAOwiC,YAAc5gD,KAAKqC,IAAIkjB,EAAOxS,EAAGwS,EAAO/X,MAIhF,CAEA,SAASic,GAAQo2B,EAAKvyC,EAAGC,EAAG8b,GAC1B,MAAM03B,EAAc,OAANzzC,EACR0zC,EAAc,OAANzzC,EAER0yC,EAASJ,KADEkB,GAASC,IACSpB,GAAaC,EAAKx2B,GAErD,OAAO42B,IACHc,IAASpF,EAAAA,EAAAA,IAAWruC,EAAG2yC,EAAO7sC,KAAM6sC,EAAO/sC,UAC3C8tC,IAASrF,EAAAA,EAAAA,IAAWpuC,EAAG0yC,EAAOhtC,IAAKgtC,EAAO9sC,QAChD,CAWA,SAAS8tC,GAAkBv1C,EAAKw1C,GAC9Bx1C,EAAIw1C,KAAKA,EAAK5zC,EAAG4zC,EAAK3zC,EAAG2zC,EAAK7zB,EAAG6zB,EAAK3zB,EACxC,CAEA,SAAS4zB,GAAYD,EAAME,GAAsB,IAAdC,EAAU7gD,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,GAAAA,UAAA,MAC3C,MAAM8M,EAAI4zC,EAAK5zC,IAAM+zC,EAAQ/zC,GAAK8zC,EAAS,EACrC7zC,EAAI2zC,EAAK3zC,IAAM8zC,EAAQ9zC,GAAK6zC,EAAS,EACrC/zB,GAAK6zB,EAAK5zC,EAAI4zC,EAAK7zB,IAAMg0B,EAAQ/zC,EAAI+zC,EAAQh0B,EAAI+zB,EAAS,GAAK9zC,EAC/DigB,GAAK2zB,EAAK3zC,EAAI2zC,EAAK3zB,IAAM8zB,EAAQ9zC,EAAI8zC,EAAQ9zB,EAAI6zB,EAAS,GAAK7zC,EACrE,MAAO,CACLD,EAAG4zC,EAAK5zC,EAAIA,EACZC,EAAG2zC,EAAK3zC,EAAIA,EACZ8f,EAAG6zB,EAAK7zB,EAAIA,EACZE,EAAG2zB,EAAK3zB,EAAIA,EACZnP,OAAQ8iC,EAAK9iC,OAEjB,EDhCAhE,EAAAA,EAAAA,GAvFqBilC,GAAqB,KAE5B,UAMZjlC,EAAAA,EAAAA,GARmBilC,GAAqB,WAWtB,CAChB18B,YAAa,EACbw8B,UAAW,EACXv8B,iBAAkB,EAClB88B,YAAa,EACbn8B,WAAY,SACZnF,OAAQ,EACRc,SAAU,KAGZ9E,EAAAA,EAAAA,GArBmBilC,GAAqB,gBAwBjB,CACrBz7B,gBAAiB,kBACjBE,YAAa,gBC+FF,MAAMw9B,WAAmBrsB,GAuBtCt2B,WAAAA,CAAY+E,GACV6W,QAEA3b,KAAKiI,aAAU3H,EACfN,KAAK0a,gBAAapa,EAClBN,KAAK2a,UAAOra,EACZN,KAAKyc,WAAQnc,EACbN,KAAKwc,YAASlc,EACdN,KAAKub,mBAAgBjb,EAEjBwE,GACFsC,OAAOe,OAAOnI,KAAM8E,EAExB,CAEAzC,IAAAA,CAAKyK,GACH,MAAM,cAACyO,EAAetT,SAAS,YAACid,EAAA,gBAAaF,IAAoBhlB,MAC3D,MAACq8C,EAAK,MAAE6F,GAASd,GAAcphD,MAC/B2iD,GApESnjC,EAoEe0iC,EAAM1iC,QAnExBqiC,SAAWriC,EAAOsiC,UAAYtiC,EAAOuiC,YAAcviC,EAAOwiC,YAmExBY,EAAAA,GAAqBP,GApEvE,IAAmB7iC,EAsEf1S,EAAIg4B,OAEAod,EAAMzzB,IAAM4tB,EAAM5tB,GAAKyzB,EAAMvzB,IAAM0tB,EAAM1tB,IAC3C7hB,EAAI04B,YACJmd,EAAY71C,EAAKy1C,GAAYL,EAAO3mC,EAAe8gC,IACnDvvC,EAAI6H,OACJguC,EAAY71C,EAAKy1C,GAAYlG,GAAQ9gC,EAAe2mC,IACpDp1C,EAAIiY,UAAYG,EAChBpY,EAAIoB,KAAK,YAGXpB,EAAI04B,YACJmd,EAAY71C,EAAKy1C,GAAYlG,EAAO9gC,IACpCzO,EAAIiY,UAAYC,EAChBlY,EAAIoB,OAEJpB,EAAIk4B,SACN,CAEAna,OAAAA,CAAQ61B,EAAQC,EAAQl2B,GACtB,OAAOI,GAAQ7qB,KAAM0gD,EAAQC,EAAQl2B,EACvC,CAEAm2B,QAAAA,CAASF,EAAQj2B,GACf,OAAOI,GAAQ7qB,KAAM0gD,EAAQ,KAAMj2B,EACrC,CAEAo2B,QAAAA,CAASF,EAAQl2B,GACf,OAAOI,GAAQ7qB,KAAM,KAAM2gD,EAAQl2B,EACrC,CAEAiB,cAAAA,CAAejB,GACb,MAAM,EAAC/b,EAAA,EAAGC,EAAA,KAAGgM,EAAI,WAAED,GAAuC1a,KAAK6rB,SAAS,CAAC,IAAK,IAAK,OAAQ,cAAepB,GAC1G,MAAO,CACL/b,EAAGgM,GAAchM,EAAIiM,GAAQ,EAAIjM,EACjCC,EAAG+L,EAAa/L,GAAKA,EAAIgM,GAAQ,EAErC,CAEAqP,QAAAA,CAASxe,GACP,MAAgB,MAATA,EAAexL,KAAKyc,MAAQ,EAAIzc,KAAKwc,OAAS,CACvD,GACFhB,EAAAA,EAAAA,GArFqBknC,GAAmB,KAE1B,QAAMlnC,EAAAA,EAAAA,GAFCknC,GAAmB,WAOpB,CAChBjoC,cAAe,QACfsJ,YAAa,EACb+1B,aAAc,EACdv+B,cAAe,OACfoJ,gBAAYrkB,KACZkb,EAAAA,EAAAA,GAbiBknC,GAAmB,gBAkBf,CACrB19B,gBAAiB,kBACjBE,YAAa,kHCnJjB,MAAM29B,GAAgB,CACpB,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,sBAIIC,GAAoCD,GAAcj+B,KAAItgB,GAASA,EAAMy+C,QAAQ,OAAQ,SAASA,QAAQ,IAAK,YAEjH,SAASC,GAAe5gD,GACtB,OAAOygD,GAAczgD,EAAIygD,GAAchhD,OACzC,CAEA,SAASohD,GAAmB7gD,GAC1B,OAAO0gD,GAAkB1gD,EAAI0gD,GAAkBjhD,OACjD,CAqBA,SAASqhD,GAAa1iD,GACpB,IAAI4B,EAAI,EAER,MAAO,CAACmM,EAAuBtE,KAC7B,MAAMiB,EAAa1K,EAAMuP,eAAe9F,GAAciB,WAElDA,aAAsB4U,EACxB1d,EAnBN,SAAiCmM,EAAuBnM,GAGtD,OAFAmM,EAAQyW,gBAAkBzW,EAAQsB,KAAK+U,KAAI,IAAMo+B,GAAe5gD,OAEzDA,CACT,CAeU+gD,CAAwB50C,EAASnM,GAC5B8I,aAAsB6b,EAC/B3kB,EAfN,SAAkCmM,EAAuBnM,GAGvD,OAFAmM,EAAQyW,gBAAkBzW,EAAQsB,KAAK+U,KAAI,IAAMq+B,GAAmB7gD,OAE7DA,CACT,CAWUghD,CAAyB70C,EAASnM,GAC7B8I,IACT9I,EA9BN,SAAgCmM,EAAuBnM,GAIrD,OAHAmM,EAAQ2W,YAAc89B,GAAe5gD,GACrCmM,EAAQyW,gBAAkBi+B,GAAmB7gD,KAEpCA,CACX,CAyBUihD,CAAuB90C,EAASnM,IAG1C,CAEA,SAASkhD,GACP9a,GAEA,IAAI+a,EAEJ,IAAKA,KAAK/a,EACR,GAAIA,EAAY+a,GAAGr+B,aAAesjB,EAAY+a,GAAGv+B,gBAC/C,OAAO,EAIX,OAAO,CACT,CAQA,IAAAw+B,GAAe,CACb33C,GAAI,SAEJvE,SAAU,CACRiwB,SAAS,EACTksB,eAAe,GAGjB5yB,YAAAA,CAAarwB,EAAckjD,EAAOz7C,GAChC,IAAKA,EAAQsvB,QACX,OAGF,MACE1nB,MAAM,SAACC,GACP7H,QAAS07C,GACPnjD,EAAMsG,QACJ,SAAC+N,GAAY8uC,EAEnB,IAAK17C,EAAQw7C,gBAAkBH,GAA0BxzC,KAxB3Di8B,EAwBiG4X,KAtB3E5X,EAAW7mB,aAAe6mB,EAAW/mB,kBAsBwDnQ,GAAYyuC,GAA0BzuC,IACrJ,OA1BN,IACEk3B,EA4BE,MAAM6X,EAAYV,GAAa1iD,GAE/BsP,EAAS9O,QAAQ4iD,EACnB,GCwCF,SAASC,GAAsBt1C,GAC7B,GAAIA,EAAQyX,WAAY,CACtB,MAAMnW,EAAOtB,EAAQpB,aACdoB,EAAQyX,kBACRzX,EAAQpB,MACf/F,OAAO08C,eAAev1C,EAAS,OAAQ,CACrCw1C,cAAc,EACdC,YAAY,EACZC,UAAU,EACVn7C,MAAO+G,IAGb,CAEA,SAASq0C,GAAmB1jD,GAC1BA,EAAMqP,KAAKC,SAAS9O,SAASuN,IAC3Bs1C,GAAsBt1C,EAAA,GAE1B,CAuBA,IAAA41C,GAAe,CACbt4C,GAAI,aAEJvE,SAAU,CACR88C,UAAW,UACX7sB,SAAS,GAGX8sB,qBAAsBA,CAAC7jD,EAAO6X,EAAMpQ,KAClC,IAAKA,EAAQsvB,QAGX,YADA2sB,GAAmB1jD,GAKrB,MAAMotB,EAAiBptB,EAAMic,MAE7Bjc,EAAMqP,KAAKC,SAAS9O,SAAQ,CAACuN,EAAStE,KACpC,MAAM,MAACkD,EAAA,UAAOiC,GAAab,EACrBjE,EAAO9J,EAAMuP,eAAe9F,GAC5B4F,EAAO1C,GAASoB,EAAQsB,KAE9B,GAAsD,OAAlD3K,EAAAA,EAAAA,GAAQ,CAACkK,EAAW5O,EAAMyH,QAAQmH,YAEpC,OAGF,IAAK9E,EAAKY,WAAWuC,mBAEnB,OAGF,MAAM62C,EAAQ9jD,EAAM2L,OAAO7B,EAAKwE,SAChC,GAAmB,WAAfw1C,EAAM3jD,MAAoC,SAAf2jD,EAAM3jD,KAEnC,OAGF,GAAIH,EAAMyH,QAAQuJ,QAEhB,OAGF,IAAI,MAAClQ,EAAK,MAAEoQ,GAjElB,SAAmDpH,EAAMmV,GACvD,MAAM8kC,EAAa9kC,EAAO5d,OAE1B,IACI6P,EADApQ,EAAQ,EAGZ,MAAM,OAACgK,GAAUhB,GACX,IAACjJ,EAAG,IAAEoC,EAAG,WAAE+P,EAAU,WAAEC,GAAcnI,EAAOoI,gBAWlD,OATIF,IACFlS,GAAQo9B,EAAAA,EAAAA,IAAY5U,EAAAA,EAAAA,GAAarK,EAAQnU,EAAOE,KAAMnK,GAAK4oB,GAAI,EAAGs6B,EAAa,IAG/E7yC,EADE+B,GACMirB,EAAAA,EAAAA,IAAY5U,EAAAA,EAAAA,GAAarK,EAAQnU,EAAOE,KAAM/H,GAAKymB,GAAK,EAAG5oB,EAAOijD,GAAcjjD,EAEhFijD,EAAajjD,EAGhB,CAACA,QAAOoQ,QACjB,CA8C2B8yC,CAA0Cl6C,EAAMuF,GAErE,GAAI6B,IADczJ,EAAQw8C,WAAa,EAAI72B,GAIzC,YADAi2B,GAAsBt1C,GAuBxB,IAAIm2C,EACJ,QApBIxoC,EAAAA,EAAAA,GAAc/O,KAIhBoB,EAAQpB,MAAQ0C,SACTtB,EAAQsB,KACfzI,OAAO08C,eAAev1C,EAAS,OAAQ,CACrCw1C,cAAc,EACdC,YAAY,EACZphD,IAAK,WACH,OAAO5C,KAAKgmB,UACd,EACAjjB,IAAK,SAASqrC,GACZpuC,KAAKmN,MAAQihC,CACf,KAMInmC,EAAQm8C,WAChB,IAAK,OACHM,EA5QR,SAAwB70C,EAAMvO,EAAOoQ,EAAOkc,EAAgB3lB,GAS1D,MAAM08C,EAAU18C,EAAQ08C,SAAW/2B,EAEnC,GAAI+2B,GAAWjzC,EACb,OAAO7B,EAAKqlC,MAAM5zC,EAAOA,EAAQoQ,GAGnC,MAAMgzC,EAAY,GAEZE,GAAelzC,EAAQ,IAAMizC,EAAU,GAC7C,IAAIE,EAAe,EACnB,MAAMC,EAAWxjD,EAAQoQ,EAAQ,EAEjC,IACItP,EAAG2iD,EAAcC,EAASlwC,EAAMmwC,EADhC9rC,EAAI7X,EAKR,IAFAojD,EAAUG,KAAkBh1C,EAAKsJ,GAE5B/W,EAAI,EAAGA,EAAIuiD,EAAU,EAAGviD,IAAK,CAChC,IAEImoB,EAFAm0B,EAAO,EACPwG,EAAO,EAIX,MAAMC,EAAgB/jD,KAAKqE,OAAOrD,EAAI,GAAKwiD,GAAe,EAAItjD,EACxD8jD,EAAchkD,KAAKC,IAAID,KAAKqE,OAAOrD,EAAI,GAAKwiD,GAAe,EAAGlzC,GAASpQ,EACvE+jD,EAAiBD,EAAcD,EAErC,IAAK56B,EAAI46B,EAAe56B,EAAI66B,EAAa76B,IACvCm0B,GAAQ7uC,EAAK0a,GAAG7b,EAChBw2C,GAAQr1C,EAAK0a,GAAG5b,EAGlB+vC,GAAQ2G,EACRH,GAAQG,EAGR,MAAMC,EAAYlkD,KAAKqE,MAAMrD,EAAIwiD,GAAe,EAAItjD,EAC9CikD,EAAUnkD,KAAKC,IAAID,KAAKqE,OAAOrD,EAAI,GAAKwiD,GAAe,EAAGlzC,GAASpQ,GAClEoN,EAAG82C,EAAS72C,EAAG82C,GAAW51C,EAAKsJ,GAStC,IAFA6rC,EAAUlwC,GAAQ,EAEbyV,EAAI+6B,EAAW/6B,EAAIg7B,EAASh7B,IAC/BzV,EAAO,GAAM1T,KAAKoY,KACfgsC,EAAU9G,IAAS7uC,EAAK0a,GAAG5b,EAAI82C,IAC/BD,EAAU31C,EAAK0a,GAAG7b,IAAMw2C,EAAOO,IAG9B3wC,EAAOkwC,IACTA,EAAUlwC,EACViwC,EAAel1C,EAAK0a,GACpB06B,EAAQ16B,GAIZm6B,EAAUG,KAAkBE,EAC5B5rC,EAAI8rC,CACN,CAKA,OAFAP,EAAUG,KAAkBh1C,EAAKi1C,GAE1BJ,CACT,CA+LoBgB,CAAe71C,EAAMvO,EAAOoQ,EAAOkc,EAAgB3lB,GAC/D,MACF,IAAK,UACHy8C,EAhMR,SAA0B70C,EAAMvO,EAAOoQ,EAAOkc,GAC5C,IAEIxrB,EAAGsd,EAAOhR,EAAGC,EAAG6vC,EAAOmH,EAAUC,EAAUC,EAAYrjC,EAAMJ,EAF7Ds8B,EAAO,EACPC,EAAS,EAEb,MAAM+F,EAAY,GACZI,EAAWxjD,EAAQoQ,EAAQ,EAE3Bo0C,EAAOj2C,EAAKvO,GAAOoN,EAEnBq3C,EADOl2C,EAAKi1C,GAAUp2C,EACVo3C,EAElB,IAAK1jD,EAAId,EAAOc,EAAId,EAAQoQ,IAAStP,EAAG,CACtCsd,EAAQ7P,EAAKzN,GACbsM,GAAKgR,EAAMhR,EAAIo3C,GAAQC,EAAKn4B,EAC5Bjf,EAAI+Q,EAAM/Q,EACV,MAAMmwC,EAAa,EAAJpwC,EAEf,GAAIowC,IAAWN,EAET7vC,EAAI6T,GACNA,EAAO7T,EACPg3C,EAAWvjD,GACFuM,EAAIyT,IACbA,EAAOzT,EACPi3C,EAAWxjD,GAIbs8C,GAAQC,EAASD,EAAOh/B,EAAMhR,KAAOiwC,MAChC,CAEL,MAAMqH,EAAY5jD,EAAI,EAEtB,KAAK8Z,EAAAA,EAAAA,GAAcypC,MAAczpC,EAAAA,EAAAA,GAAc0pC,GAAW,CAKxD,MAAMK,EAAqB7kD,KAAKC,IAAIskD,EAAUC,GACxCM,EAAqB9kD,KAAKqC,IAAIkiD,EAAUC,GAE1CK,IAAuBJ,GAAcI,IAAuBD,GAC9DtB,EAAUvhD,KAAK,IACV0M,EAAKo2C,GACRv3C,EAAGgwC,IAGHwH,IAAuBL,GAAcK,IAAuBF,GAC9DtB,EAAUvhD,KAAK,IACV0M,EAAKq2C,GACRx3C,EAAGgwC,IAOLt8C,EAAI,GAAK4jD,IAAcH,GAEzBnB,EAAUvhD,KAAK0M,EAAKm2C,IAItBtB,EAAUvhD,KAAKuc,GACf8+B,EAAQM,EACRH,EAAS,EACTn8B,EAAOJ,EAAOzT,EACdg3C,EAAWC,EAAWC,EAAazjD,EAEvC,CAEA,OAAOsiD,CACT,CAwHoByB,CAAiBt2C,EAAMvO,EAAOoQ,EAAOkc,GACjD,MACF,QACE,MAAM,IAAIhF,MAAM,qCAAAhd,OAAqC3D,EAAQm8C,UAAS,MAGxE71C,EAAQyX,WAAa0+B,CAAA,GACrB,EAGJ9M,OAAAA,CAAQp3C,GACN0jD,GAAmB1jD,EACrB,GC3OK,SAAS4lD,GAAWve,EAAUlQ,EAAOhb,EAAM/W,GAChD,GAAIA,EACF,OAEF,IAAItE,EAAQq2B,EAAMkQ,GACdx+B,EAAMsT,EAAKkrB,GAMf,MAJiB,UAAbA,IACFvmC,GAAQ+kD,EAAAA,EAAAA,IAAgB/kD,GACxB+H,GAAMg9C,EAAAA,EAAAA,IAAgBh9C,IAEjB,CAACw+B,WAAUvmC,QAAO+H,MAC3B,CAqBO,SAASi9C,GAAgBhlD,EAAO+H,EAAKoW,GAC1C,KAAMpW,EAAM/H,EAAO+H,IAAO,CACxB,MAAMqW,EAAQD,EAAOpW,GACrB,IAAK0T,MAAM2C,EAAMhR,KAAOqO,MAAM2C,EAAM/Q,GAClC,KAEJ,CACA,OAAOtF,CACT,CAEA,SAASk9C,GAASptC,EAAGhF,EAAGnP,EAAM/D,GAC5B,OAAIkY,GAAKhF,EACAlT,EAAGkY,EAAEnU,GAAOmP,EAAEnP,IAEhBmU,EAAIA,EAAEnU,GAAQmP,EAAIA,EAAEnP,GAAQ,CACrC,CCnFO,SAASwhD,GAAoBC,EAAU/gC,GAC5C,IAAIjG,EAAS,GACT9Z,GAAQ,EAUZ,OARIiC,EAAAA,EAAAA,GAAQ6+C,IACV9gD,GAAQ,EAER8Z,EAASgnC,GAEThnC,EDwCG,SAA6BgnC,EAAU/gC,GAC5C,MAAM,EAAChX,EAAI,KAAI,EAAEC,EAAI,MAAQ83C,GAAY,CAAC,EACpCC,EAAahhC,EAAKjG,OAClBA,EAAS,GAaf,OAZAiG,EAAK25B,SAASr+C,SAAQ2lD,IAAkB,IAAjB,MAACrlD,EAAK,IAAE+H,GAAIs9C,EACjCt9C,EAAMi9C,GAAgBhlD,EAAO+H,EAAKq9C,GAClC,MAAM/uB,EAAQ+uB,EAAWplD,GACnBqb,EAAO+pC,EAAWr9C,GACd,OAANsF,GACF8Q,EAAOtc,KAAK,CAACuL,EAAGipB,EAAMjpB,EAAGC,MACzB8Q,EAAOtc,KAAK,CAACuL,EAAGiO,EAAKjO,EAAGC,OACT,OAAND,IACT+Q,EAAOtc,KAAK,CAACuL,IAAGC,EAAGgpB,EAAMhpB,IACzB8Q,EAAOtc,KAAK,CAACuL,IAAGC,EAAGgO,EAAKhO,QAGrB8Q,CACT,CCzDamnC,CAAoBH,EAAU/gC,GAGlCjG,EAAO5d,OAAS,IAAI29C,GAAY,CACrC//B,SACAxX,QAAS,CAACk2C,QAAS,GACnBx4C,QACAyiB,UAAWziB,IACR,IACP,CAEO,SAASkhD,GAAiB7pB,GAC/B,OAAOA,IAA0B,IAAhBA,EAAO9uB,IAC1B,CC5BO,SAAS44C,GAAeC,EAASp9C,EAAOq9C,GAE7C,IAAI94C,EADW64C,EAAQp9C,GACLuE,KAClB,MAAM+4C,EAAU,CAACt9C,GACjB,IAAI5E,EAEJ,IAAKiiD,EACH,OAAO94C,EAGT,MAAgB,IAATA,IAA6C,IAA3B+4C,EAAQjqC,QAAQ9O,IAAc,CACrD,KAAK/D,EAAAA,EAAAA,GAAS+D,GACZ,OAAOA,EAIT,GADAnJ,EAASgiD,EAAQ74C,IACZnJ,EACH,OAAO,EAGT,GAAIA,EAAOwwC,QACT,OAAOrnC,EAGT+4C,EAAQ9jD,KAAK+K,GACbA,EAAOnJ,EAAOmJ,IAChB,CAEA,OAAO,CACT,CAOO,SAASg5C,GAAYxhC,EAAM/b,EAAO+H,GAEvC,MAAMxD,EAwER,SAAyBwX,GACvB,MAAMzd,EAAUyd,EAAKzd,QACfk/C,EAAal/C,EAAQiG,KAC3B,IAAIA,GAAOa,EAAAA,EAAAA,GAAeo4C,GAAcA,EAAWpiD,OAAQoiD,QAE9C7mD,IAAT4N,IACFA,IAASjG,EAAQ+c,iBAGnB,IAAa,IAAT9W,GAA2B,OAATA,EACpB,OAAO,EAGT,IAAa,IAATA,EACF,MAAO,SAET,OAAOA,CACT,CAzFek5C,CAAgB1hC,GAE7B,IAAIxe,EAAAA,EAAAA,GAASgH,GACX,OAAO6O,MAAM7O,EAAKpF,QAAiBoF,EAGrC,IAAInJ,EAASsiD,WAAWn5C,GAExB,OAAI/D,EAAAA,EAAAA,GAASpF,IAAW3D,KAAKqE,MAAMV,KAAYA,EAOjD,SAA2BuiD,EAAS39C,EAAO5E,EAAQ2M,GACjC,MAAZ41C,GAA+B,MAAZA,IACrBviD,EAAS4E,EAAQ5E,GAGnB,GAAIA,IAAW4E,GAAS5E,EAAS,GAAKA,GAAU2M,EAC9C,OAAO,EAGT,OAAO3M,CACT,CAhBWwiD,CAAkBr5C,EAAK,GAAIvE,EAAO5E,EAAQ2M,GAG5C,CAAC,SAAU,QAAS,MAAO,QAAS,SAASsL,QAAQ9O,IAAS,GAAKA,CAC5E,CCHA,SAASs5C,GAAe/nC,EAAQgoC,EAAaC,GAC3C,MAAMC,EAAY,GAClB,IAAK,IAAIp9B,EAAI,EAAGA,EAAIm9B,EAAW7lD,OAAQ0oB,IAAK,CAC1C,MAAM7E,EAAOgiC,EAAWn9B,IAClB,MAACoN,EAAK,KAAEhb,EAAI,MAAE+C,GAASkoC,GAAUliC,EAAM+hC,EAAa,KAE1D,MAAK/nC,GAAUiY,GAAShb,GAGxB,GAAIgb,EAGFgwB,EAAUE,QAAQnoC,QAGlB,GADAD,EAAOtc,KAAKuc,IACP/C,EAEH,KAGN,CACA8C,EAAOtc,QAAQwkD,EACjB,CAQA,SAASC,GAAUliC,EAAM+hC,EAAa5f,GACpC,MAAMnoB,EAAQgG,EAAKo6B,YAAY2H,EAAa5f,GAC5C,IAAKnoB,EACH,MAAO,CAAC,EAGV,MAAMooC,EAAapoC,EAAMmoB,GACnBwX,EAAW35B,EAAK25B,SAChBqH,EAAahhC,EAAKjG,OACxB,IAAIkY,GAAQ,EACRhb,GAAO,EACX,IAAK,IAAIva,EAAI,EAAGA,EAAIi9C,EAASx9C,OAAQO,IAAK,CACxC,MAAM8jB,EAAUm5B,EAASj9C,GACnB2lD,EAAarB,EAAWxgC,EAAQ5kB,OAAOumC,GACvCmgB,EAAYtB,EAAWxgC,EAAQ7c,KAAKw+B,GAC1C,IAAIkV,EAAAA,EAAAA,IAAW+K,EAAYC,EAAYC,GAAY,CACjDrwB,EAAQmwB,IAAeC,EACvBprC,EAAOmrC,IAAeE,EACtB,MAEJ,CACA,MAAO,CAACrwB,QAAOhb,OAAM+C,QACvB,CC1GO,MAAMuoC,GACXloD,WAAAA,CAAYoJ,GACVnJ,KAAK0O,EAAIvF,EAAKuF,EACd1O,KAAK2O,EAAIxF,EAAKwF,EACd3O,KAAKwf,OAASrW,EAAKqW,MACrB,CAEAu+B,WAAAA,CAAYjxC,EAAKu0C,EAAQl4C,GACvB,MAAM,EAACuF,EAAA,EAAGC,EAAA,OAAG6Q,GAAUxf,KAGvB,OAFAqhD,EAASA,GAAU,CAAC//C,MAAO,EAAG+H,IAAKqX,EAAAA,GACnC5T,EAAI4W,IAAIhV,EAAGC,EAAG6Q,EAAQ6hC,EAAOh4C,IAAKg4C,EAAO//C,OAAO,IACxC6H,EAAKk4C,MACf,CAEAvB,WAAAA,CAAYpgC,GACV,MAAM,EAAChR,EAAA,EAAGC,EAAA,OAAG6Q,GAAUxf,KACjBgiB,EAAQtC,EAAMsC,MACpB,MAAO,CACLtT,EAAGA,EAAItN,KAAKsgB,IAAIM,GAASxC,EACzB7Q,EAAGA,EAAIvN,KAAKwgB,IAAII,GAASxC,EACzBwC,QAEJ,ECbK,SAASkmC,GAAWlrB,GACzB,MAAM,MAACx8B,EAAK,KAAE0N,EAAA,KAAMwX,GAAQsX,EAE5B,IAAI7yB,EAAAA,EAAAA,GAAS+D,GACX,OAwBJ,SAAwB1N,EAAOmJ,GAC7B,MAAMW,EAAO9J,EAAMuP,eAAepG,GAC5B4rC,EAAUjrC,GAAQ9J,EAAMmgB,iBAAiBhX,GAC/C,OAAO4rC,EAAUjrC,EAAKiE,QAAU,IAClC,CA5BW45C,CAAe3nD,EAAO0N,GAG/B,GAAa,UAATA,EACF,OFNG,SAAyB8uB,GAC9B,MAAM,MAAC/zB,EAAK,MAAEU,EAAA,KAAO+b,GAAQsX,EACvBvd,EAAS,GACT4/B,EAAW35B,EAAK25B,SAChB+I,EAAe1iC,EAAKjG,OACpBioC,EAiBR,SAAuBz+C,EAAOU,GAC5B,MAAM0+C,EAAQ,GACR/sB,EAAQryB,EAAM+B,wBAAwB,QAE5C,IAAK,IAAI5I,EAAI,EAAGA,EAAIk5B,EAAMz5B,OAAQO,IAAK,CACrC,MAAMkI,EAAOgxB,EAAMl5B,GACnB,GAAIkI,EAAKX,QAAUA,EACjB,MAEGW,EAAK4I,QACRm1C,EAAMR,QAAQv9C,EAAKiE,QAEvB,CACA,OAAO85C,CACT,CA/BqBC,CAAcr/C,EAAOU,GACxC+9C,EAAWvkD,KAAKqjD,GAAoB,CAAC93C,EAAG,KAAMC,EAAG1F,EAAMsL,QAASmR,IAEhE,IAAK,IAAItjB,EAAI,EAAGA,EAAIi9C,EAASx9C,OAAQO,IAAK,CACxC,MAAM8jB,EAAUm5B,EAASj9C,GACzB,IAAK,IAAImoB,EAAIrE,EAAQ5kB,MAAOipB,GAAKrE,EAAQ7c,IAAKkhB,IAC5Ci9B,GAAe/nC,EAAQ2oC,EAAa79B,GAAIm9B,EAE5C,CACA,OAAO,IAAIlI,GAAY,CAAC//B,SAAQxX,QAAS,CAAC,GAC5C,CETWsgD,CAAgBvrB,GAGzB,GAAa,UAAT9uB,EACF,OAAO,EAGT,MAAMu4C,EAmBR,SAAyBzpB,GACvB,MAAM/zB,EAAQ+zB,EAAO/zB,OAAS,CAAC,EAE/B,GAAIA,EAAMqf,yBACR,OAsBJ,SAAiC0U,GAC/B,MAAM,MAAC/zB,EAAA,KAAOiF,GAAQ8uB,EAChB/0B,EAAUgB,EAAMhB,QAChBpG,EAASoH,EAAMkJ,YAAYtQ,OAC3BP,EAAQ2G,EAAQmB,QAAUH,EAAMxF,IAAMwF,EAAM5H,IAC5CyH,EHuBD,SAAyBoF,EAAMjF,EAAO6Q,GAC3C,IAAIhR,EAYJ,OATEA,EADW,UAAToF,EACM4L,EACU,QAAT5L,EACDjF,EAAMhB,QAAQmB,QAAUH,EAAM5H,IAAM4H,EAAMxF,KACzCyD,EAAAA,EAAAA,GAASgH,GAEVA,EAAKpF,MAELG,EAAMm4B,eAETt4B,CACT,CGrCgB0/C,CAAgBt6C,EAAMjF,EAAO3H,GACrCyD,EAAS,GAEf,GAAIkD,EAAQmX,KAAK4I,SAAU,CACzB,MAAMzL,EAAStT,EAAMqf,yBAAyB,EAAGhnB,GACjD,OAAO,IAAI2mD,GAAU,CACnBv5C,EAAG6N,EAAO7N,EACVC,EAAG4N,EAAO5N,EACV6Q,OAAQvW,EAAM4e,8BAA8B/e,KAIhD,IAAK,IAAI1G,EAAI,EAAGA,EAAIP,IAAUO,EAC5B2C,EAAO5B,KAAK8F,EAAMqf,yBAAyBlmB,EAAG0G,IAEhD,OAAO/D,CACT,CA3CW0jD,CAAwBzrB,GAEjC,OAIF,SAA+BA,GAC7B,MAAM,MAAC/zB,EAAQ,QAAIiF,GAAQ8uB,EACrB+D,EHqBD,SAAyB7yB,EAAMjF,GACpC,IAAI83B,EAAQ,KAWZ,MAVa,UAAT7yB,EACF6yB,EAAQ93B,EAAMsL,OACI,QAATrG,EACT6yB,EAAQ93B,EAAMoL,KACLnN,EAAAA,EAAAA,GAASgH,GAElB6yB,EAAQ93B,EAAMwQ,iBAAiBvL,EAAKpF,OAC3BG,EAAM4S,eACfklB,EAAQ93B,EAAM4S,gBAETklB,CACT,CGlCgB2nB,CAAgBx6C,EAAMjF,GAEpC,IAAIkB,EAAAA,EAAAA,GAAS42B,GAAQ,CACnB,MAAMrmB,EAAazR,EAAM6S,eAEzB,MAAO,CACLpN,EAAGgM,EAAaqmB,EAAQ,KACxBpyB,EAAG+L,EAAa,KAAOqmB,GAI3B,OAAO,IACT,CAlBS4nB,CAAsB3rB,EAC/B,CA1BmB4rB,CAAgB5rB,GAEjC,OAAIypB,aAAoBwB,GACfxB,EAGFD,GAAoBC,EAAU/gC,EACvC,CC9BO,SAASmjC,GAAU/7C,EAAKkwB,EAAQloB,GACrC,MAAM/P,EAASmjD,GAAWlrB,IACpB,KAACtX,EAAI,MAAEzc,EAAA,KAAOuC,GAAQwxB,EACtB8rB,EAAWpjC,EAAKzd,QAChBk/C,EAAa2B,EAAS56C,KACtB5J,EAAQwkD,EAAS9jC,iBACjB,MAAC+jC,EAAQzkD,EAAK,MAAE+jD,EAAQ/jD,GAAS6iD,GAAc,CAAC,EAClDpiD,GAAU2gB,EAAKjG,OAAO5d,UACxBmkC,EAAAA,EAAAA,GAASl5B,EAAKgI,GAMlB,SAAgBhI,EAAKhI,GACnB,MAAM,KAAC4gB,EAAA,OAAM3gB,EAAA,MAAQgkD,EAAA,MAAOV,EAAA,KAAOvzC,EAAA,MAAM7L,GAASnE,EAC5C+iC,EAAWniB,EAAK/f,MAAQ,QAAUb,EAAI0G,KAE5CsB,EAAIg4B,OAEa,MAAb+C,GAAoBwgB,IAAUU,IAChCC,GAAal8C,EAAK/H,EAAQ+P,EAAKT,KAC/BnG,GAAKpB,EAAK,CAAC4Y,OAAM3gB,SAAQT,MAAOykD,EAAO9/C,QAAO4+B,aAC9C/6B,EAAIk4B,UACJl4B,EAAIg4B,OACJkkB,GAAal8C,EAAK/H,EAAQ+P,EAAKP,SAEjCrG,GAAKpB,EAAK,CAAC4Y,OAAM3gB,SAAQT,MAAO+jD,EAAOp/C,QAAO4+B,aAE9C/6B,EAAIk4B,SACN,CArBIikB,CAAOn8C,EAAK,CAAC4Y,OAAM3gB,SAAQgkD,QAAOV,QAAOvzC,OAAM7L,QAAOuC,UACtD26B,EAAAA,EAAAA,GAAWr5B,GAEf,CAoBA,SAASk8C,GAAal8C,EAAK/H,EAAQmkD,GACjC,MAAM,SAAC7J,EAAA,OAAU5/B,GAAU1a,EAC3B,IAAI4yB,GAAQ,EACRwxB,GAAW,EAEfr8C,EAAI04B,YACJ,IAAK,MAAMtf,KAAWm5B,EAAU,CAC9B,MAAM,MAAC/9C,EAAA,IAAO+H,GAAO6c,EACfU,EAAanH,EAAOne,GACpBulB,EAAYpH,EAAO6mC,GAAgBhlD,EAAO+H,EAAKoW,IACjDkY,GACF7qB,EAAI24B,OAAO7e,EAAWlY,EAAGkY,EAAWjY,GACpCgpB,GAAQ,IAER7qB,EAAI44B,OAAO9e,EAAWlY,EAAGw6C,GACzBp8C,EAAI44B,OAAO9e,EAAWlY,EAAGkY,EAAWjY,IAEtCw6C,IAAapkD,EAAOg5C,YAAYjxC,EAAKoZ,EAAS,CAACnO,KAAMoxC,IACjDA,EACFr8C,EAAIovC,YAEJpvC,EAAI44B,OAAO7e,EAAUnY,EAAGw6C,EAE5B,CAEAp8C,EAAI44B,OAAO3gC,EAAO4yB,QAAQjpB,EAAGw6C,GAC7Bp8C,EAAIovC,YACJpvC,EAAI6H,MACN,CAEA,SAASzG,GAAKpB,EAAKhI,GACjB,MAAM,KAAC4gB,EAAI,OAAE3gB,EAAM,SAAE8iC,EAAQ,MAAEvjC,EAAK,MAAE2E,GAASnE,EACzCu6C,ENlED,SAAmB35B,EAAM3gB,EAAQ8iC,GACtC,MAAMwX,EAAW35B,EAAK25B,SAChB5/B,EAASiG,EAAKjG,OACd2pC,EAAUrkD,EAAO0a,OACjB0oB,EAAQ,GAEd,IAAK,MAAMjiB,KAAWm5B,EAAU,CAC9B,IAAI,MAAC/9C,EAAA,IAAO+H,GAAO6c,EACnB7c,EAAMi9C,GAAgBhlD,EAAO+H,EAAKoW,GAElC,MAAM4hC,EAAS+E,GAAWve,EAAUpoB,EAAOne,GAAQme,EAAOpW,GAAM6c,EAAQtgB,MAExE,IAAKb,EAAOs6C,SAAU,CAGpBlX,EAAMhlC,KAAK,CACT65B,OAAQ9W,EACRnhB,OAAQs8C,EACR//C,MAAOme,EAAOne,GACd+H,IAAKoW,EAAOpW,KAEd,SAIF,MAAMggD,GAAiBtJ,EAAAA,EAAAA,IAAeh7C,EAAQs8C,GAE9C,IAAK,MAAMiI,KAAOD,EAAgB,CAChC,MAAME,EAAYnD,GAAWve,EAAUuhB,EAAQE,EAAIhoD,OAAQ8nD,EAAQE,EAAIjgD,KAAMigD,EAAI1jD,MAC3E4jD,GAAcC,EAAAA,EAAAA,IAAcvjC,EAASzG,EAAQ8pC,GAEnD,IAAK,MAAMG,KAAcF,EACvBrhB,EAAMhlC,KAAK,CACT65B,OAAQ0sB,EACR3kD,OAAQukD,EACRhoD,MAAO,CACL,CAACumC,GAAW0e,GAASlF,EAAQkI,EAAW,QAASnoD,KAAKqC,MAExD4F,IAAK,CACH,CAACw+B,GAAW0e,GAASlF,EAAQkI,EAAW,MAAOnoD,KAAKC,OAI5D,CACF,CACA,OAAO8mC,CACT,CMoBmBuX,CAAUh6B,EAAM3gB,EAAQ8iC,GAEzC,IAAK,MAAO7K,OAAQ2sB,EAAK5kD,OAAQukD,EAAG,MAAEhoD,EAAK,IAAE+H,KAAQg2C,EAAU,CAC7D,MAAOx6B,OAAO,gBAACG,EAAkB1gB,GAAS,CAAC,GAAKqlD,EAC1CC,GAAsB,IAAX7kD,EAEjB+H,EAAIg4B,OACJh4B,EAAIiY,UAAYC,EAEhB6kC,GAAW/8C,EAAK7D,EAAO2gD,GAAYxD,GAAWve,EAAUvmC,EAAO+H,IAE/DyD,EAAI04B,YAEJ,MAAM2jB,IAAazjC,EAAKq4B,YAAYjxC,EAAK68C,GAEzC,IAAI/jD,EACJ,GAAIgkD,EAAU,CACRT,EACFr8C,EAAIovC,YAEJ4N,GAAmBh9C,EAAK/H,EAAQsE,EAAKw+B,GAGvC,MAAMkiB,IAAehlD,EAAOg5C,YAAYjxC,EAAKw8C,EAAK,CAACvxC,KAAMoxC,EAAU//C,SAAS,IAC5ExD,EAAOujD,GAAYY,EACdnkD,GACHkkD,GAAmBh9C,EAAK/H,EAAQzD,EAAOumC,GAI3C/6B,EAAIovC,YACJpvC,EAAIoB,KAAKtI,EAAO,UAAY,WAE5BkH,EAAIk4B,SACN,CACF,CAEA,SAAS6kB,GAAW/8C,EAAK7D,EAAOo4C,GAC9B,MAAM,IAAChtC,EAAA,OAAKE,GAAUtL,EAAMzI,MAAMuU,WAC5B,SAAC8yB,EAAA,MAAUvmC,EAAA,IAAO+H,GAAOg4C,GAAU,CAAC,EACzB,MAAbxZ,IACF/6B,EAAI04B,YACJ14B,EAAIw1C,KAAKhhD,EAAO+S,EAAKhL,EAAM/H,EAAOiT,EAASF,GAC3CvH,EAAI6H,OAER,CAEA,SAASm1C,GAAmBh9C,EAAK/H,EAAQ2a,EAAOmoB,GAC9C,MAAMmiB,EAAoBjlD,EAAO+6C,YAAYpgC,EAAOmoB,GAChDmiB,GACFl9C,EAAI44B,OAAOskB,EAAkBt7C,EAAGs7C,EAAkBr7C,EAEtD,CC7GA,IAAAhF,GAAe,CACbkC,GAAI,SAEJo+C,mBAAAA,CAAoBzpD,EAAOkjD,EAAOz7C,GAChC,MAAMyJ,GAASlR,EAAMqP,KAAKC,UAAY,IAAIjO,OACpCklD,EAAU,GAChB,IAAIz8C,EAAMlI,EAAGsjB,EAAMsX,EAEnB,IAAK56B,EAAI,EAAGA,EAAIsP,IAAStP,EACvBkI,EAAO9J,EAAMuP,eAAe3N,GAC5BsjB,EAAOpb,EAAKiE,QACZyuB,EAAS,KAELtX,GAAQA,EAAKzd,SAAWyd,aAAgB85B,KAC1CxiB,EAAS,CACPuY,QAAS/0C,EAAMmgB,iBAAiBve,GAChCuH,MAAOvH,EACP8L,KAAMg5C,GAAYxhC,EAAMtjB,EAAGsP,GAC3BlR,QACAgL,KAAMlB,EAAKY,WAAWjD,QAAQmH,UAC9BnG,MAAOqB,EAAKQ,OACZ4a,SAIJpb,EAAK4/C,QAAUltB,EACf+pB,EAAQ5jD,KAAK65B,GAGf,IAAK56B,EAAI,EAAGA,EAAIsP,IAAStP,EACvB46B,EAAS+pB,EAAQ3kD,GACZ46B,IAA0B,IAAhBA,EAAO9uB,OAItB8uB,EAAO9uB,KAAO44C,GAAeC,EAAS3kD,EAAG6F,EAAQ++C,WAErD,EAEAmD,UAAAA,CAAW3pD,EAAOkjD,EAAOz7C,GACvB,MAAM5F,EAA4B,eAArB4F,EAAQmiD,SACf5gD,EAAWhJ,EAAM8pB,+BACjBxV,EAAOtU,EAAMuU,UACnB,IAAK,IAAI3S,EAAIoH,EAAS3H,OAAS,EAAGO,GAAK,IAAKA,EAAG,CAC7C,MAAM46B,EAASxzB,EAASpH,GAAG8nD,QACtBltB,IAILA,EAAOtX,KAAKoB,oBAAoBhS,EAAMkoB,EAAOxxB,MACzCnJ,GAAQ26B,EAAO9uB,MACjB26C,GAAUroD,EAAMsM,IAAKkwB,EAAQloB,GAEjC,CACF,EAEAu1C,kBAAAA,CAAmB7pD,EAAOkjD,EAAOz7C,GAC/B,GAAyB,uBAArBA,EAAQmiD,SACV,OAGF,MAAM5gD,EAAWhJ,EAAM8pB,+BACvB,IAAK,IAAIloB,EAAIoH,EAAS3H,OAAS,EAAGO,GAAK,IAAKA,EAAG,CAC7C,MAAM46B,EAASxzB,EAASpH,GAAG8nD,QAEvBrD,GAAiB7pB,IACnB6rB,GAAUroD,EAAMsM,IAAKkwB,EAAQx8B,EAAMuU,UAEvC,CACF,EAEAu1C,iBAAAA,CAAkB9pD,EAAO6X,EAAMpQ,GAC7B,MAAM+0B,EAAS3kB,EAAK/N,KAAK4/C,QAEpBrD,GAAiB7pB,IAAgC,sBAArB/0B,EAAQmiD,UAIzCvB,GAAUroD,EAAMsM,IAAKkwB,EAAQx8B,EAAMuU,UACrC,EAEAzN,SAAU,CACR0/C,WAAW,EACXoD,SAAU,sBCvEd,MAAMG,GAAaA,CAACC,EAAW1jB,KAC7B,IAAI,UAAC2jB,EAAY3jB,EAAA,SAAU4jB,EAAW5jB,GAAY0jB,EAOlD,OALIA,EAAUG,gBACZF,EAAYrpD,KAAKC,IAAIopD,EAAW3jB,GAChC4jB,EAAWF,EAAUI,iBAAmBxpD,KAAKC,IAAIqpD,EAAU5jB,IAGtD,CACL4jB,WACAD,YACAI,WAAYzpD,KAAKqC,IAAIqjC,EAAU2jB,GAChC,EAKI,MAAMK,WAAez0B,GAK1Bt2B,WAAAA,CAAY+G,GACV6U,QAEA3b,KAAK+qD,QAAS,EAGd/qD,KAAKgrD,eAAiB,GAKtBhrD,KAAKirD,aAAe,KAGpBjrD,KAAKkrD,cAAe,EAEpBlrD,KAAKQ,MAAQsG,EAAOtG,MACpBR,KAAKiI,QAAUnB,EAAOmB,QACtBjI,KAAK8M,IAAMhG,EAAOgG,IAClB9M,KAAKmrD,iBAAc7qD,EACnBN,KAAKorD,iBAAc9qD,EACnBN,KAAKqrD,gBAAa/qD,EAClBN,KAAK2iB,eAAYriB,EACjBN,KAAK0iB,cAAWpiB,EAChBN,KAAKqU,SAAM/T,EACXN,KAAKuU,YAASjU,EACdN,KAAKwU,UAAOlU,EACZN,KAAKsU,WAAQhU,EACbN,KAAKwc,YAASlc,EACdN,KAAKyc,WAAQnc,EACbN,KAAKg6B,cAAW15B,EAChBN,KAAKoqB,cAAW9pB,EAChBN,KAAKmkB,YAAS7jB,EACdN,KAAK2tB,cAAWrtB,CAClB,CAEA6F,MAAAA,CAAOuc,EAAUC,EAAWmZ,GAC1B97B,KAAK0iB,SAAWA,EAChB1iB,KAAK2iB,UAAYA,EACjB3iB,KAAKg6B,SAAW8B,EAEhB97B,KAAKk8B,gBACLl8B,KAAKsrD,cACLtrD,KAAKm9B,KACP,CAEAjB,aAAAA,GACMl8B,KAAK8b,gBACP9b,KAAKyc,MAAQzc,KAAK0iB,SAClB1iB,KAAKwU,KAAOxU,KAAKg6B,SAASxlB,KAC1BxU,KAAKsU,MAAQtU,KAAKyc,QAElBzc,KAAKwc,OAASxc,KAAK2iB,UACnB3iB,KAAKqU,IAAMrU,KAAKg6B,SAAS3lB,IACzBrU,KAAKuU,OAASvU,KAAKwc,OAEvB,CAEA8uC,WAAAA,GACE,MAAMd,EAAYxqD,KAAKiI,QAAQiK,QAAU,CAAC,EAC1C,IAAIi5C,GAActvB,EAAAA,EAAAA,GAAK2uB,EAAU9lC,eAAgB,CAAC1kB,KAAKQ,OAAQR,OAAS,GAEpEwqD,EAAUp+C,SACZ++C,EAAcA,EAAY/+C,QAAQjK,GAASqoD,EAAUp+C,OAAOjK,EAAMnC,KAAKQ,MAAMqP,SAG3E26C,EAAUtxC,OACZiyC,EAAcA,EAAYjyC,MAAK,CAACC,EAAGhF,IAAMq2C,EAAUtxC,KAAKC,EAAGhF,EAAGnU,KAAKQ,MAAMqP,SAGvE7P,KAAKiI,QAAQmB,SACf+hD,EAAY/hD,UAGdpJ,KAAKmrD,YAAcA,CACrB,CAEAhuB,GAAAA,GACE,MAAM,QAACl1B,EAAO,IAAE6E,GAAO9M,KAMvB,IAAKiI,EAAQ8f,QAEX,YADA/nB,KAAKyc,MAAQzc,KAAKwc,OAAS,GAI7B,MAAMguC,EAAYviD,EAAQiK,OACpBq5C,GAAY9xB,EAAAA,EAAAA,IAAO+wB,EAAUhxB,MAC7BsN,EAAWykB,EAAUxiD,KACrBi2B,EAAch/B,KAAKwrD,uBACnB,SAACd,EAAQ,WAAEG,GAAcN,GAAWC,EAAW1jB,GAErD,IAAIrqB,EAAOD,EAEX1P,EAAI0sB,KAAO+xB,EAAU/qB,OAEjBxgC,KAAK8b,gBACPW,EAAQzc,KAAK0iB,SACblG,EAASxc,KAAKyrD,SAASzsB,EAAa8H,EAAU4jB,EAAUG,GAAc,KAEtEruC,EAASxc,KAAK2iB,UACdlG,EAAQzc,KAAK0rD,SAAS1sB,EAAausB,EAAWb,EAAUG,GAAc,IAGxE7qD,KAAKyc,MAAQrb,KAAKC,IAAIob,EAAOxU,EAAQya,UAAY1iB,KAAK0iB,UACtD1iB,KAAKwc,OAASpb,KAAKC,IAAImb,EAAQvU,EAAQ0a,WAAa3iB,KAAK2iB,UAC3D,CAKA8oC,QAAAA,CAASzsB,EAAa8H,EAAU4jB,EAAUG,GACxC,MAAM,IAAC/9C,EAAG,SAAE4V,EAAUza,SAAUiK,QAAQ,QAACwd,KAAa1vB,KAChD2rD,EAAW3rD,KAAKgrD,eAAiB,GAEjCK,EAAarrD,KAAKqrD,WAAa,CAAC,GAChC3xB,EAAamxB,EAAan7B,EAChC,IAAIk8B,EAAc5sB,EAElBlyB,EAAI22B,UAAY,OAChB32B,EAAI82B,aAAe,SAEnB,IAAIioB,GAAO,EACPx3C,GAAOqlB,EAgBX,OAfA15B,KAAKmrD,YAAYnqD,SAAQ,CAACukB,EAAYnjB,KACpC,MAAM0pD,EAAYpB,EAAY5jB,EAAW,EAAKh6B,EAAIi/C,YAAYxmC,EAAWT,MAAMrI,OAErE,IAANra,GAAWipD,EAAWA,EAAWxpD,OAAS,GAAKiqD,EAAY,EAAIp8B,EAAUhN,KAC3EkpC,GAAelyB,EACf2xB,EAAWA,EAAWxpD,QAAUO,EAAI,EAAI,EAAI,IAAM,EAClDiS,GAAOqlB,EACPmyB,KAGFF,EAASvpD,GAAK,CAACoS,KAAM,EAAGH,MAAKw3C,MAAKpvC,MAAOqvC,EAAWtvC,OAAQquC,GAE5DQ,EAAWA,EAAWxpD,OAAS,IAAMiqD,EAAYp8B,CAAA,IAG5Ck8B,CACT,CAEAF,QAAAA,CAAS1sB,EAAausB,EAAWb,EAAUsB,GACzC,MAAM,IAACl/C,EAAG,UAAE6V,EAAW1a,SAAUiK,QAAQ,QAACwd,KAAa1vB,KACjD2rD,EAAW3rD,KAAKgrD,eAAiB,GACjCI,EAAcprD,KAAKorD,YAAc,GACjCa,EAActpC,EAAYqc,EAEhC,IAAIktB,EAAax8B,EACby8B,EAAkB,EAClBC,EAAmB,EAEnB53C,EAAO,EACP63C,EAAM,EAyBV,OAvBArsD,KAAKmrD,YAAYnqD,SAAQ,CAACukB,EAAYnjB,KACpC,MAAM,UAAC0pD,EAAS,WAAEjB,GA8VxB,SAA2BH,EAAUa,EAAWz+C,EAAKyY,EAAYymC,GAC/D,MAAMF,EAKR,SAA4BvmC,EAAYmlC,EAAUa,EAAWz+C,GAC3D,IAAIw/C,EAAiB/mC,EAAWT,KAC5BwnC,GAA4C,kBAAnBA,IAC3BA,EAAiBA,EAAehpD,QAAO,CAAC6V,EAAGhF,IAAMgF,EAAEtX,OAASsS,EAAEtS,OAASsX,EAAIhF,KAE7E,OAAOu2C,EAAYa,EAAUxiD,KAAO,EAAK+D,EAAIi/C,YAAYO,GAAgB7vC,KAC3E,CAXoB8vC,CAAmBhnC,EAAYmlC,EAAUa,EAAWz+C,GAChE+9C,EAYR,SAA6BmB,EAAazmC,EAAYinC,GACpD,IAAI3B,EAAamB,EACc,kBAApBzmC,EAAWT,OACpB+lC,EAAa4B,GAA0BlnC,EAAYinC,IAErD,OAAO3B,CACT,CAlBqB6B,CAAoBV,EAAazmC,EAAYgmC,EAAU7xB,YAC1E,MAAO,CAACoyB,YAAWjB,aACrB,CAlWsC8B,CAAkBjC,EAAUa,EAAWz+C,EAAKyY,EAAYymC,GAGpF5pD,EAAI,GAAKgqD,EAAmBvB,EAAa,EAAIn7B,EAAUu8B,IACzDC,GAAcC,EAAkBz8B,EAChC07B,EAAYjoD,KAAK,CAACsZ,MAAO0vC,EAAiB3vC,OAAQ4vC,IAClD53C,GAAQ23C,EAAkBz8B,EAC1B28B,IACAF,EAAkBC,EAAmB,GAIvCT,EAASvpD,GAAK,CAACoS,OAAMH,IAAK+3C,EAAkBC,MAAK5vC,MAAOqvC,EAAWtvC,OAAQquC,GAG3EsB,EAAkB/qD,KAAKqC,IAAI0oD,EAAiBL,GAC5CM,GAAoBvB,EAAan7B,CAAA,IAGnCw8B,GAAcC,EACdf,EAAYjoD,KAAK,CAACsZ,MAAO0vC,EAAiB3vC,OAAQ4vC,IAE3CF,CACT,CAEAU,cAAAA,GACE,IAAK5sD,KAAKiI,QAAQ8f,QAChB,OAEF,MAAMiX,EAAch/B,KAAKwrD,uBAClBR,eAAgBW,EAAU1jD,SAAS,MAAC2xB,EAAO1nB,QAAQ,QAACwd,GAAQ,IAAEm9B,IAAQ7sD,KACvE8sD,GAAYC,EAAAA,EAAAA,IAAcF,EAAK7sD,KAAKwU,KAAMxU,KAAKyc,OACrD,GAAIzc,KAAK8b,eAAgB,CACvB,IAAI+vC,EAAM,EACNr3C,GAAO+xB,EAAAA,EAAAA,IAAe3M,EAAO55B,KAAKwU,KAAOkb,EAAS1vB,KAAKsU,MAAQtU,KAAKqrD,WAAWQ,IACnF,IAAK,MAAMmB,KAAUrB,EACfE,IAAQmB,EAAOnB,MACjBA,EAAMmB,EAAOnB,IACbr3C,GAAO+xB,EAAAA,EAAAA,IAAe3M,EAAO55B,KAAKwU,KAAOkb,EAAS1vB,KAAKsU,MAAQtU,KAAKqrD,WAAWQ,KAEjFmB,EAAO34C,KAAOrU,KAAKqU,IAAM2qB,EAActP,EACvCs9B,EAAOx4C,KAAOs4C,EAAUG,WAAWH,EAAUp+C,EAAE8F,GAAOw4C,EAAOvwC,OAC7DjI,GAAQw4C,EAAOvwC,MAAQiT,MAEpB,CACL,IAAI28B,EAAM,EACNh4C,GAAMkyB,EAAAA,EAAAA,IAAe3M,EAAO55B,KAAKqU,IAAM2qB,EAActP,EAAS1vB,KAAKuU,OAASvU,KAAKorD,YAAYiB,GAAK7vC,QACtG,IAAK,MAAMwwC,KAAUrB,EACfqB,EAAOX,MAAQA,IACjBA,EAAMW,EAAOX,IACbh4C,GAAMkyB,EAAAA,EAAAA,IAAe3M,EAAO55B,KAAKqU,IAAM2qB,EAActP,EAAS1vB,KAAKuU,OAASvU,KAAKorD,YAAYiB,GAAK7vC,SAEpGwwC,EAAO34C,IAAMA,EACb24C,EAAOx4C,MAAQxU,KAAKwU,KAAOkb,EAC3Bs9B,EAAOx4C,KAAOs4C,EAAUG,WAAWH,EAAUp+C,EAAEs+C,EAAOx4C,MAAOw4C,EAAOvwC,OACpEpI,GAAO24C,EAAOxwC,OAASkT,EAG7B,CAEA5T,YAAAA,GACE,MAAiC,QAA1B9b,KAAKiI,QAAQmiB,UAAgD,WAA1BpqB,KAAKiI,QAAQmiB,QACzD,CAEA/nB,IAAAA,GACE,GAAIrC,KAAKiI,QAAQ8f,QAAS,CACxB,MAAMjb,EAAM9M,KAAK8M,KACjBk5B,EAAAA,EAAAA,GAASl5B,EAAK9M,MAEdA,KAAKktD,SAEL/mB,EAAAA,EAAAA,GAAWr5B,GAEf,CAKAogD,KAAAA,GACE,MAAOjlD,QAASkB,EAAA,YAAMiiD,EAAA,WAAaC,EAAA,IAAYv+C,GAAO9M,MAChD,MAAC45B,EAAO1nB,OAAQs4C,GAAarhD,EAC7BgkD,EAAe7lD,EAAAA,EAAShD,MACxBwoD,GAAYC,EAAAA,EAAAA,IAAc5jD,EAAK0jD,IAAK7sD,KAAKwU,KAAMxU,KAAKyc,OACpD8uC,GAAY9xB,EAAAA,EAAAA,IAAO+wB,EAAUhxB,OAC7B,QAAC9J,GAAW86B,EACZ1jB,EAAWykB,EAAUxiD,KACrBqkD,EAAetmB,EAAW,EAChC,IAAIumB,EAEJrtD,KAAKomC,YAGLt5B,EAAI22B,UAAYqpB,EAAUrpB,UAAU,QACpC32B,EAAI82B,aAAe,SACnB92B,EAAIsY,UAAY,GAChBtY,EAAI0sB,KAAO+xB,EAAU/qB,OAErB,MAAM,SAACkqB,EAAA,UAAUD,EAAA,WAAWI,GAAcN,GAAWC,EAAW1jB,GAyE1DhrB,EAAe9b,KAAK8b,eACpBkjB,EAAch/B,KAAKwrD,sBAEvB6B,EADEvxC,EACO,CACPpN,GAAG63B,EAAAA,EAAAA,IAAe3M,EAAO55B,KAAKwU,KAAOkb,EAAS1vB,KAAKsU,MAAQ+2C,EAAW,IACtE18C,EAAG3O,KAAKqU,IAAMqb,EAAUsP,EACxBtZ,KAAM,GAGC,CACPhX,EAAG1O,KAAKwU,KAAOkb,EACf/gB,GAAG43B,EAAAA,EAAAA,IAAe3M,EAAO55B,KAAKqU,IAAM2qB,EAActP,EAAS1vB,KAAKuU,OAAS62C,EAAY,GAAG5uC,QACxFkJ,KAAM,IAIV4nC,EAAAA,EAAAA,IAAsBttD,KAAK8M,IAAK3D,EAAKokD,eAErC,MAAM7zB,EAAamxB,EAAan7B,EAChC1vB,KAAKmrD,YAAYnqD,SAAQ,CAACukB,EAAYnjB,KACpC0K,EAAImY,YAAcM,EAAWJ,UAC7BrY,EAAIiY,UAAYQ,EAAWJ,UAE3B,MAAMqoC,EAAY1gD,EAAIi/C,YAAYxmC,EAAWT,MAAMrI,MAC7CgnB,EAAYqpB,EAAUrpB,UAAUle,EAAWke,YAAcle,EAAWke,UAAY+mB,EAAU/mB,YAC1FhnB,EAAQiuC,EAAW0C,EAAeI,EACxC,IAAI9+C,EAAI2+C,EAAO3+C,EACXC,EAAI0+C,EAAO1+C,EAEfm+C,EAAUW,SAASztD,KAAKyc,OAEpBX,EACE1Z,EAAI,GAAKsM,EAAI+N,EAAQiT,EAAU1vB,KAAKsU,QACtC3F,EAAI0+C,EAAO1+C,GAAK+qB,EAChB2zB,EAAO3nC,OACPhX,EAAI2+C,EAAO3+C,GAAI63B,EAAAA,EAAAA,IAAe3M,EAAO55B,KAAKwU,KAAOkb,EAAS1vB,KAAKsU,MAAQ+2C,EAAWgC,EAAO3nC,QAElFtjB,EAAI,GAAKuM,EAAI+qB,EAAa15B,KAAKuU,SACxC7F,EAAI2+C,EAAO3+C,EAAIA,EAAI08C,EAAYiC,EAAO3nC,MAAMjJ,MAAQiT,EACpD29B,EAAO3nC,OACP/W,EAAI0+C,EAAO1+C,GAAI43B,EAAAA,EAAAA,IAAe3M,EAAO55B,KAAKqU,IAAM2qB,EAActP,EAAS1vB,KAAKuU,OAAS62C,EAAYiC,EAAO3nC,MAAMlJ,SAYhH,GA1HoB,SAAS9N,EAAGC,EAAG4W,GACnC,GAAIxI,MAAM2tC,IAAaA,GAAY,GAAK3tC,MAAM0tC,IAAcA,EAAY,EACtE,OAIF39C,EAAIg4B,OAEJ,MAAM1f,GAAYrW,EAAAA,EAAAA,GAAewW,EAAWH,UAAW,GAUvD,GATAtY,EAAIiY,WAAYhW,EAAAA,EAAAA,GAAewW,EAAWR,UAAWooC,GACrDrgD,EAAIwwC,SAAUvuC,EAAAA,EAAAA,GAAewW,EAAW+3B,QAAS,QACjDxwC,EAAIy4B,gBAAiBx2B,EAAAA,EAAAA,GAAewW,EAAWggB,eAAgB,GAC/Dz4B,EAAIwvC,UAAWvtC,EAAAA,EAAAA,GAAewW,EAAW+2B,SAAU,SACnDxvC,EAAIsY,UAAYA,EAChBtY,EAAImY,aAAclW,EAAAA,EAAAA,GAAewW,EAAWN,YAAakoC,GAEzDrgD,EAAIw4B,aAAYv2B,EAAAA,EAAAA,GAAewW,EAAWmoC,SAAU,KAEhDlD,EAAUG,cAAe,CAG3B,MAAMgD,EAAc,CAClBnuC,OAAQirC,EAAYrpD,KAAKwsD,MAAQ,EACjCjpC,WAAYY,EAAWZ,WACvBrE,SAAUiF,EAAWjF,SACrByD,YAAaqB,GAET7B,EAAUupC,EAAUe,MAAMn/C,EAAGg8C,EAAW,GACxClnC,EAAU7U,EAAIy+C,GAGpBU,EAAAA,EAAAA,IAAgBhhD,EAAK6gD,EAAapqC,EAASC,EAASgnC,EAAUI,iBAAmBF,OAC5E,CAGL,MAAMqD,EAAUp/C,EAAIvN,KAAKqC,KAAKqjC,EAAW2jB,GAAa,EAAG,GACnDuD,EAAWlB,EAAUG,WAAWv+C,EAAGg8C,GACnC5Q,GAAe4H,EAAAA,EAAAA,IAAcn8B,EAAWu0B,cAE9ChtC,EAAI04B,YAEAp+B,OAAOW,OAAO+xC,GAAcjN,MAAK1xB,GAAW,IAANA,KACxCynC,EAAAA,EAAAA,IAAmB91C,EAAK,CACtB4B,EAAGs/C,EACHr/C,EAAGo/C,EACHt/B,EAAGi8B,EACH/7B,EAAG87B,EACHjrC,OAAQs6B,IAGVhtC,EAAIw1C,KAAK0L,EAAUD,EAASrD,EAAUD,GAGxC39C,EAAIoB,OACc,IAAdkX,GACFtY,EAAI64B,SAIR74B,EAAIk4B,SACN,CAuDEipB,CAFcnB,EAAUp+C,EAAEA,GAELC,EAAG4W,GAExB7W,GAAIw/C,EAAAA,EAAAA,IAAOzqB,EAAW/0B,EAAIg8C,EAAW0C,EAActxC,EAAepN,EAAI+N,EAAQzc,KAAKsU,MAAOnL,EAAK0jD,KAvDhF,SAASn+C,EAAGC,EAAG4W,IAC9B2gB,EAAAA,EAAAA,GAAWp5B,EAAKyY,EAAWT,KAAMpW,EAAGC,EAAKk8C,EAAa,EAAIU,EAAW,CACnE4C,cAAe5oC,EAAWrS,OAC1BuwB,UAAWqpB,EAAUrpB,UAAUle,EAAWke,YAE9C,CAqDE2qB,CAAStB,EAAUp+C,EAAEA,GAAIC,EAAG4W,GAExBzJ,EACFuxC,EAAO3+C,GAAK+N,EAAQiT,OACf,GAA+B,kBAApBnK,EAAWT,KAAmB,CAC9C,MAAM0nC,EAAiBjB,EAAU7xB,WACjC2zB,EAAO1+C,GAAK89C,GAA0BlnC,EAAYinC,GAAkB98B,OAEpE29B,EAAO1+C,GAAK+qB,MAIhB20B,EAAAA,EAAAA,IAAqBruD,KAAK8M,IAAK3D,EAAKokD,cACtC,CAKAnnB,SAAAA,GACE,MAAMj9B,EAAOnJ,KAAKiI,QACZ62B,EAAY31B,EAAKw1B,MACjB2vB,GAAY70B,EAAAA,EAAAA,IAAOqF,EAAUtF,MAC7B+0B,GAAet+B,EAAAA,EAAAA,GAAU6O,EAAUpP,SAEzC,IAAKoP,EAAU/W,QACb,OAGF,MAAM+kC,GAAYC,EAAAA,EAAAA,IAAc5jD,EAAK0jD,IAAK7sD,KAAKwU,KAAMxU,KAAKyc,OACpD3P,EAAM9M,KAAK8M,IACXsd,EAAW0U,EAAU1U,SACrBgjC,EAAekB,EAAUvlD,KAAO,EAChCylD,EAA6BD,EAAal6C,IAAM+4C,EACtD,IAAIz+C,EAIA6F,EAAOxU,KAAKwU,KACZkO,EAAW1iB,KAAKyc,MAEpB,GAAIzc,KAAK8b,eAEP4G,EAAWthB,KAAKqC,OAAOzD,KAAKqrD,YAC5B18C,EAAI3O,KAAKqU,IAAMm6C,EACfh6C,GAAO+xB,EAAAA,EAAAA,IAAep9B,EAAKywB,MAAOplB,EAAMxU,KAAKsU,MAAQoO,OAChD,CAEL,MAAMC,EAAY3iB,KAAKorD,YAAY9nD,QAAO,CAACC,EAAKwF,IAAS3H,KAAKqC,IAAIF,EAAKwF,EAAKyT,SAAS,GACrF7N,EAAI6/C,GAA6BjoB,EAAAA,EAAAA,IAAep9B,EAAKywB,MAAO55B,KAAKqU,IAAKrU,KAAKuU,OAASoO,EAAYxZ,EAAK+I,OAAOwd,QAAU1vB,KAAKwrD,uBAK7H,MAAM98C,GAAI63B,EAAAA,EAAAA,IAAenc,EAAU5V,EAAMA,EAAOkO,GAGhD5V,EAAI22B,UAAYqpB,EAAUrpB,WAAU5J,EAAAA,EAAAA,IAAmBzP,IACvDtd,EAAI82B,aAAe,SACnB92B,EAAImY,YAAc6Z,EAAUx6B,MAC5BwI,EAAIiY,UAAY+Z,EAAUx6B,MAC1BwI,EAAI0sB,KAAO80B,EAAU9tB,QAErB0F,EAAAA,EAAAA,GAAWp5B,EAAKgyB,EAAUha,KAAMpW,EAAGC,EAAG2/C,EACxC,CAKA9C,mBAAAA,GACE,MAAM1sB,EAAY9+B,KAAKiI,QAAQ02B,MACzB2vB,GAAY70B,EAAAA,EAAAA,IAAOqF,EAAUtF,MAC7B+0B,GAAet+B,EAAAA,EAAAA,GAAU6O,EAAUpP,SACzC,OAAOoP,EAAU/W,QAAUumC,EAAU50B,WAAa60B,EAAa/xC,OAAS,CAC1E,CAKAiyC,gBAAAA,CAAiB//C,EAAGC,GAClB,IAAIvM,EAAGssD,EAAQC,EAEf,IAAI5R,EAAAA,EAAAA,IAAWruC,EAAG1O,KAAKwU,KAAMxU,KAAKsU,SAC7ByoC,EAAAA,EAAAA,IAAWpuC,EAAG3O,KAAKqU,IAAKrU,KAAKuU,QAGhC,IADAo6C,EAAK3uD,KAAKgrD,eACL5oD,EAAI,EAAGA,EAAIusD,EAAG9sD,SAAUO,EAG3B,GAFAssD,EAASC,EAAGvsD,IAER26C,EAAAA,EAAAA,IAAWruC,EAAGggD,EAAOl6C,KAAMk6C,EAAOl6C,KAAOk6C,EAAOjyC,SAC/CsgC,EAAAA,EAAAA,IAAWpuC,EAAG+/C,EAAOr6C,IAAKq6C,EAAOr6C,IAAMq6C,EAAOlyC,QAEjD,OAAOxc,KAAKmrD,YAAY/oD,GAK9B,OAAO,IACT,CAMAwsD,WAAAA,CAAYtpC,GACV,MAAMnc,EAAOnJ,KAAKiI,QAClB,IAoDJ,SAAoBtH,EAAMwI,GACxB,IAAc,cAATxI,GAAiC,aAATA,KAAyBwI,EAAKuwC,SAAWvwC,EAAK0lD,SACzE,OAAO,EAET,GAAI1lD,EAAKkc,UAAqB,UAAT1kB,GAA6B,YAATA,GACvC,OAAO,EAET,OAAO,CACT,CA5DSmuD,CAAWxpC,EAAE3kB,KAAMwI,GACtB,OAIF,MAAM4lD,EAAc/uD,KAAKyuD,iBAAiBnpC,EAAE5W,EAAG4W,EAAE3W,GAEjD,GAAe,cAAX2W,EAAE3kB,MAAmC,aAAX2kB,EAAE3kB,KAAqB,CACnD,MAAM68C,EAAWx9C,KAAKirD,aAChB+D,GApfW76C,EAofqB46C,EApfT,QAAf51C,EAofcqkC,IApfe,OAANrpC,GAAcgF,EAAElP,eAAiBkK,EAAElK,cAAgBkP,EAAExP,QAAUwK,EAAExK,OAqflG6zC,IAAawR,IACfnzB,EAAAA,EAAAA,GAAK1yB,EAAK0lD,QAAS,CAACvpC,EAAGk4B,EAAUx9C,MAAOA,MAG1CA,KAAKirD,aAAe8D,EAEhBA,IAAgBC,IAClBnzB,EAAAA,EAAAA,GAAK1yB,EAAKuwC,QAAS,CAACp0B,EAAGypC,EAAa/uD,MAAOA,KAE/C,MAAW+uD,IACTlzB,EAAAA,EAAAA,GAAK1yB,EAAKkc,QAAS,CAACC,EAAGypC,EAAa/uD,MAAOA,MA/f9BivD,IAAC91C,EAAGhF,CAigBrB,EAyBF,SAASs4C,GAA0BlnC,EAAYinC,GAE7C,OAAOA,GADajnC,EAAWT,KAAOS,EAAWT,KAAKjjB,OAAS,EAEjE,CAYA,IAAAqtD,GAAe,CACbrjD,GAAI,SAMJsjD,SAAUrE,GAEVxpD,KAAAA,CAAMd,EAAOkjD,EAAOz7C,GAClB,MAAMwc,EAASjkB,EAAMikB,OAAS,IAAIqmC,GAAO,CAACh+C,IAAKtM,EAAMsM,IAAK7E,UAASzH,UACnEwsB,GAAQ/lB,UAAUzG,EAAOikB,EAAQxc,GACjC+kB,GAAQ2C,OAAOnvB,EAAOikB,EACxB,EAEA9gB,IAAAA,CAAKnD,GACHwsB,GAAQ8C,UAAUtvB,EAAOA,EAAMikB,eACxBjkB,EAAMikB,MACf,EAKAmX,YAAAA,CAAap7B,EAAOkjD,EAAOz7C,GACzB,MAAMwc,EAASjkB,EAAMikB,OACrBuI,GAAQ/lB,UAAUzG,EAAOikB,EAAQxc,GACjCwc,EAAOxc,QAAUA,CACnB,EAIAo1B,WAAAA,CAAY78B,GACV,MAAMikB,EAASjkB,EAAMikB,OACrBA,EAAO6mC,cACP7mC,EAAOmoC,gBACT,EAGAwC,UAAAA,CAAW5uD,EAAO6X,GACXA,EAAKwgC,QACRr4C,EAAMikB,OAAOmqC,YAAYv2C,EAAKpV,MAElC,EAEAqE,SAAU,CACRygB,SAAS,EACTqC,SAAU,MACVwP,MAAO,SACPjM,UAAU,EACVvkB,SAAS,EACT+a,OAAQ,IAGRkB,OAAAA,CAAQC,EAAGC,EAAYd,GACrB,MAAM9a,EAAQ4b,EAAWtb,aACnBolD,EAAK5qC,EAAOjkB,MACd6uD,EAAG1uC,iBAAiBhX,IACtB0lD,EAAG5X,KAAK9tC,GACR4b,EAAWrS,QAAS,IAEpBm8C,EAAG3X,KAAK/tC,GACR4b,EAAWrS,QAAS,EAExB,EAEAwmC,QAAS,KACTmV,QAAS,KAET38C,OAAQ,CACN5N,MAAQwI,GAAQA,EAAItM,MAAMyH,QAAQ3D,MAClComD,SAAU,GACVh7B,QAAS,GAYThL,cAAAA,CAAelkB,GACb,MAAMsP,EAAWtP,EAAMqP,KAAKC,UACrBoC,QAAQ,cAACy4C,EAAA,WAAehmC,EAAU,UAAE8e,EAAA,MAAWn/B,EAAA,gBAAOgrD,EAAe,aAAExV,IAAiBt5C,EAAMikB,OAAOxc,QAE5G,OAAOzH,EAAMiJ,yBAAyBmb,KAAKta,IACzC,MAAMua,EAAQva,EAAKY,WAAWgK,SAASy1C,EAAgB,OAAIrqD,GACrDyjB,GAAckM,EAAAA,EAAAA,GAAUpL,EAAMd,aAEpC,MAAO,CACLe,KAAMhV,EAASxF,EAAKX,OAAOoK,MAC3BgR,UAAWF,EAAMG,gBACjBG,UAAW7gB,EACX4O,QAAS5I,EAAKirC,QACd+H,QAASz4B,EAAM04B,eACfmQ,SAAU7oC,EAAMke,WAChBwC,eAAgB1gB,EAAMoe,iBACtBqZ,SAAUz3B,EAAMu3B,gBAChBh3B,WAAYrB,EAAYtH,MAAQsH,EAAYvH,QAAU,EACtDyI,YAAaJ,EAAMK,YACnBP,WAAYA,GAAcE,EAAMF,WAChCrE,SAAUuE,EAAMvE,SAChBmjB,UAAWA,GAAa5e,EAAM4e,UAC9BqW,aAAcwV,IAAoBxV,GAAgBj1B,EAAMi1B,cAGxD7vC,aAAcK,EAAKX,MACpB,GACA3J,KACL,GAGF2+B,MAAO,CACLr6B,MAAQwI,GAAQA,EAAItM,MAAMyH,QAAQ3D,MAClCyjB,SAAS,EACTqC,SAAU,SACVtF,KAAM,KAIV0jB,YAAa,CACXpkB,YAAcjH,IAAUA,EAAKmH,WAAW,MACxCpS,OAAQ,CACNkS,YAAcjH,IAAU,CAAC,iBAAkB,SAAU,QAAQiQ,SAASjQ,MCtsBrE,MAAMoyC,WAAcl5B,GAIzBt2B,WAAAA,CAAY+G,GACV6U,QAEA3b,KAAKQ,MAAQsG,EAAOtG,MACpBR,KAAKiI,QAAUnB,EAAOmB,QACtBjI,KAAK8M,IAAMhG,EAAOgG,IAClB9M,KAAKwvD,cAAWlvD,EAChBN,KAAKqU,SAAM/T,EACXN,KAAKuU,YAASjU,EACdN,KAAKwU,UAAOlU,EACZN,KAAKsU,WAAQhU,EACbN,KAAKyc,WAAQnc,EACbN,KAAKwc,YAASlc,EACdN,KAAKoqB,cAAW9pB,EAChBN,KAAKmkB,YAAS7jB,EACdN,KAAK2tB,cAAWrtB,CAClB,CAEA6F,MAAAA,CAAOuc,EAAUC,GACf,MAAMxZ,EAAOnJ,KAAKiI,QAKlB,GAHAjI,KAAKwU,KAAO,EACZxU,KAAKqU,IAAM,GAENlL,EAAK4e,QAER,YADA/nB,KAAKyc,MAAQzc,KAAKwc,OAASxc,KAAKsU,MAAQtU,KAAKuU,OAAS,GAIxDvU,KAAKyc,MAAQzc,KAAKsU,MAAQoO,EAC1B1iB,KAAKwc,OAASxc,KAAKuU,OAASoO,EAE5B,MAAM+gB,GAAY97B,EAAAA,EAAAA,GAAQuB,EAAK2b,MAAQ3b,EAAK2b,KAAKjjB,OAAS,EAC1D7B,KAAKwvD,UAAWv/B,EAAAA,EAAAA,GAAU9mB,EAAKumB,SAC/B,MAAM+/B,EAAW/rB,GAAYjK,EAAAA,EAAAA,IAAOtwB,EAAKqwB,MAAME,WAAa15B,KAAKwvD,SAAShzC,OAEtExc,KAAK8b,eACP9b,KAAKwc,OAASizC,EAEdzvD,KAAKyc,MAAQgzC,CAEjB,CAEA3zC,YAAAA,GACE,MAAM4Q,EAAM1sB,KAAKiI,QAAQmiB,SACzB,MAAe,QAARsC,GAAyB,WAARA,CAC1B,CAEAgjC,SAAAA,CAAUvwC,GACR,MAAM,IAAC9K,EAAA,KAAKG,EAAA,OAAMD,EAAA,MAAQD,EAAA,QAAOrM,GAAWjI,KACtC45B,EAAQ3xB,EAAQ2xB,MACtB,IACIlX,EAAU2jB,EAAQC,EADlBhmB,EAAW,EAmBf,OAhBItgB,KAAK8b,gBACPuqB,GAASE,EAAAA,EAAAA,IAAe3M,EAAOplB,EAAMF,GACrCgyB,EAASjyB,EAAM8K,EACfuD,EAAWpO,EAAQE,IAEM,SAArBvM,EAAQmiB,UACVic,EAAS7xB,EAAO2K,EAChBmnB,GAASC,EAAAA,EAAAA,IAAe3M,EAAOrlB,EAAQF,GACvCiM,GAAiB,GAANiC,EAAAA,IAEX8jB,EAAS/xB,EAAQ6K,EACjBmnB,GAASC,EAAAA,EAAAA,IAAe3M,EAAOvlB,EAAKE,GACpC+L,EAAgB,GAALiC,EAAAA,GAEbG,EAAWnO,EAASF,GAEf,CAACgyB,SAAQC,SAAQ5jB,WAAUpC,WACpC,CAEAje,IAAAA,GACE,MAAMyK,EAAM9M,KAAK8M,IACX3D,EAAOnJ,KAAKiI,QAElB,IAAKkB,EAAK4e,QACR,OAGF,MAAM4nC,GAAWl2B,EAAAA,EAAAA,IAAOtwB,EAAKqwB,MAEvBra,EADawwC,EAASj2B,WACA,EAAI15B,KAAKwvD,SAASn7C,KACxC,OAACgyB,EAAA,OAAQC,EAAA,SAAQ5jB,EAAA,SAAUpC,GAAYtgB,KAAK0vD,UAAUvwC,IAE5D+mB,EAAAA,EAAAA,GAAWp5B,EAAK3D,EAAK2b,KAAM,EAAG,EAAG6qC,EAAU,CACzCrrD,MAAO6E,EAAK7E,MACZoe,WACApC,WACAmjB,WAAW5J,EAAAA,EAAAA,IAAmB1wB,EAAKywB,OACnCgK,aAAc,SACde,YAAa,CAAC0B,EAAQC,IAE1B,EAeF,IAAAspB,GAAe,CACb/jD,GAAI,QAMJsjD,SAAUI,GAEVjuD,KAAAA,CAAMd,EAAOkjD,EAAOz7C,IArBtB,SAAqBzH,EAAOs+B,GAC1B,MAAMH,EAAQ,IAAI4wB,GAAM,CACtBziD,IAAKtM,EAAMsM,IACX7E,QAAS62B,EACTt+B,UAGFwsB,GAAQ/lB,UAAUzG,EAAOm+B,EAAOG,GAChC9R,GAAQ2C,OAAOnvB,EAAOm+B,GACtBn+B,EAAMqvD,WAAalxB,CACrB,CAYImxB,CAAYtvD,EAAOyH,EACrB,EAEAtE,IAAAA,CAAKnD,GACH,MAAMqvD,EAAarvD,EAAMqvD,WACzB7iC,GAAQ8C,UAAUtvB,EAAOqvD,UAClBrvD,EAAMqvD,UACf,EAEAj0B,YAAAA,CAAap7B,EAAOkjD,EAAOz7C,GACzB,MAAM02B,EAAQn+B,EAAMqvD,WACpB7iC,GAAQ/lB,UAAUzG,EAAOm+B,EAAO12B,GAChC02B,EAAM12B,QAAUA,CAClB,EAEAX,SAAU,CACRsyB,MAAO,SACP7R,SAAS,EACTyR,KAAM,CACJrV,OAAQ,QAEVwJ,UAAU,EACV+B,QAAS,GACTtF,SAAU,MACVtF,KAAM,GACNX,OAAQ,KAGVwjB,cAAe,CACbrjC,MAAO,SAGTkkC,YAAa,CACXpkB,aAAa,EACbC,YAAY,IChKhB,MAAMO,GAAM,IAAImrC,QAEhB,IAAAC,GAAe,CACbnkD,GAAI,WAEJvK,KAAAA,CAAMd,EAAOkjD,EAAOz7C,GAClB,MAAM02B,EAAQ,IAAI4wB,GAAM,CACtBziD,IAAKtM,EAAMsM,IACX7E,UACAzH,UAGFwsB,GAAQ/lB,UAAUzG,EAAOm+B,EAAO12B,GAChC+kB,GAAQ2C,OAAOnvB,EAAOm+B,GACtB/Z,GAAI7hB,IAAIvC,EAAOm+B,EACjB,EAEAh7B,IAAAA,CAAKnD,GACHwsB,GAAQ8C,UAAUtvB,EAAOokB,GAAIhiB,IAAIpC,IACjCokB,GAAI9gB,OAAOtD,EACb,EAEAo7B,YAAAA,CAAap7B,EAAOkjD,EAAOz7C,GACzB,MAAM02B,EAAQ/Z,GAAIhiB,IAAIpC,GACtBwsB,GAAQ/lB,UAAUzG,EAAOm+B,EAAO12B,GAChC02B,EAAM12B,QAAUA,CAClB,EAEAX,SAAU,CACRsyB,MAAO,SACP7R,SAAS,EACTyR,KAAM,CACJrV,OAAQ,UAEVwJ,UAAU,EACV+B,QAAS,EACTtF,SAAU,MACVtF,KAAM,GACNX,OAAQ,MAGVwjB,cAAe,CACbrjC,MAAO,SAGTkkC,YAAa,CACXpkB,aAAa,EACbC,YAAY,IClChB,MAAM4rC,GAAc,CAIlBC,OAAAA,CAAQhuD,GACN,IAAKA,EAAML,OACT,OAAO,EAGT,IAAIO,EAAG41B,EACHm4B,EAAO,IAAInhB,IACXrgC,EAAI,EACJ+C,EAAQ,EAEZ,IAAKtP,EAAI,EAAG41B,EAAM91B,EAAML,OAAQO,EAAI41B,IAAO51B,EAAG,CAC5C,MAAM2nB,EAAK7nB,EAAME,GAAG6S,QACpB,GAAI8U,GAAMA,EAAGwM,WAAY,CACvB,MAAM7J,EAAM3C,EAAGuM,kBACf65B,EAAK/sD,IAAIspB,EAAIhe,GACbC,GAAK+d,EAAI/d,IACP+C,EAEN,CAIA,MAAO,CACLhD,EAHe,IAAIyhD,GAAM7sD,QAAO,CAAC6V,EAAGhF,IAAMgF,EAAIhF,IAAKg8C,EAAKpnD,KAIxD4F,EAAGA,EAAI+C,EAEX,EAKA4a,OAAAA,CAAQpqB,EAAOkuD,GACb,IAAKluD,EAAML,OACT,OAAO,EAGT,IAGIO,EAAG41B,EAAKq4B,EAHR3hD,EAAI0hD,EAAc1hD,EAClBC,EAAIyhD,EAAczhD,EAClB8c,EAActY,OAAOC,kBAGzB,IAAKhR,EAAI,EAAG41B,EAAM91B,EAAML,OAAQO,EAAI41B,IAAO51B,EAAG,CAC5C,MAAM2nB,EAAK7nB,EAAME,GAAG6S,QACpB,GAAI8U,GAAMA,EAAGwM,WAAY,CACvB,MAAMha,EAASwN,EAAG2B,iBACZ0iB,GAAIkiB,EAAAA,EAAAA,IAAsBF,EAAe7zC,GAE3C6xB,EAAI3iB,IACNA,EAAc2iB,EACdiiB,EAAiBtmC,GAGvB,CAEA,GAAIsmC,EAAgB,CAClB,MAAME,EAAKF,EAAe/5B,kBAC1B5nB,EAAI6hD,EAAG7hD,EACPC,EAAI4hD,EAAG5hD,EAGT,MAAO,CACLD,IACAC,IAEJ,GAIF,SAAS6hD,GAAa71C,EAAM81C,GAU1B,OATIA,KACE7oD,EAAAA,EAAAA,GAAQ6oD,GAEVhgD,MAAMuY,UAAU7lB,KAAKutD,MAAM/1C,EAAM81C,GAEjC91C,EAAKxX,KAAKstD,IAIP91C,CACT,CAQA,SAASg2C,GAAcC,GACrB,OAAoB,kBAARA,GAAoBA,aAAeC,SAAWD,EAAI5zC,QAAQ,OAAS,EACtE4zC,EAAI7oB,MAAM,MAEZ6oB,CACT,CASA,SAASE,GAAkBtwD,EAAO2B,GAChC,MAAM,QAAC8S,EAAO,aAAEhL,EAAA,MAAcN,GAASxH,EACjC+I,EAAa1K,EAAMuP,eAAe9F,GAAciB,YAChD,MAAC6I,EAAA,MAAOjL,GAASoC,EAAW4I,iBAAiBnK,GAEnD,MAAO,CACLnJ,QACAuT,QACA5I,OAAQD,EAAWsH,UAAU7I,GAC7B8L,IAAKjV,EAAMqP,KAAKC,SAAS7F,GAAc4F,KAAKlG,GAC5ConD,eAAgBjoD,EAChByF,QAASrD,EAAWsD,aACpBgH,UAAW7L,EACXM,eACAgL,UAEJ,CAKA,SAAS+7C,GAAeC,EAAShpD,GAC/B,MAAM6E,EAAMmkD,EAAQzwD,MAAMsM,KACpB,KAACokD,EAAI,OAAEC,EAAA,MAAQxyB,GAASsyB,GACxB,SAACvG,EAAA,UAAUD,GAAaxiD,EACxBmpD,GAAW33B,EAAAA,EAAAA,IAAOxxB,EAAQmpD,UAC1B9C,GAAY70B,EAAAA,EAAAA,IAAOxxB,EAAQqmD,WAC3B+C,GAAa53B,EAAAA,EAAAA,IAAOxxB,EAAQopD,YAC5BC,EAAiB3yB,EAAM98B,OACvB0vD,EAAkBJ,EAAOtvD,OACzB2vD,EAAoBN,EAAKrvD,OAEzB6tB,GAAUO,EAAAA,EAAAA,GAAUhoB,EAAQynB,SAClC,IAAIlT,EAASkT,EAAQlT,OACjBC,EAAQ,EAGRg1C,EAAqBP,EAAK5tD,QAAO,CAACoO,EAAOggD,IAAahgD,EAAQggD,EAASC,OAAO9vD,OAAS6vD,EAASE,MAAM/vD,OAAS6vD,EAASG,MAAMhwD,QAAQ,GAQ1I,GAPA4vD,GAAsBR,EAAQa,WAAWjwD,OAASovD,EAAQc,UAAUlwD,OAEhEyvD,IACF90C,GAAU80C,EAAiBhD,EAAU50B,YACnC43B,EAAiB,GAAKrpD,EAAQ+pD,aAC/B/pD,EAAQgqD,mBAEPR,EAAoB,CAGtBj1C,GAAUg1C,GADavpD,EAAQiqD,cAAgB9wD,KAAKqC,IAAIgnD,EAAW2G,EAAS13B,YAAc03B,EAAS13B,aAEjG+3B,EAAqBD,GAAqBJ,EAAS13B,YACnD+3B,EAAqB,GAAKxpD,EAAQkqD,YAElCZ,IACF/0C,GAAUvU,EAAQmqD,gBACjBb,EAAkBF,EAAW33B,YAC5B63B,EAAkB,GAAKtpD,EAAQoqD,eAInC,IAAIC,EAAe,EACnB,MAAMC,EAAe,SAAS7sC,GAC5BjJ,EAAQrb,KAAKqC,IAAIgZ,EAAO3P,EAAIi/C,YAAYrmC,GAAMjJ,MAAQ61C,EACxD,EA+BA,OA7BAxlD,EAAIg4B,OAEJh4B,EAAI0sB,KAAO80B,EAAU9tB,QACrB5P,EAAAA,EAAAA,GAAKqgC,EAAQtyB,MAAO4zB,GAGpBzlD,EAAI0sB,KAAO43B,EAAS5wB,QACpB5P,EAAAA,EAAAA,GAAKqgC,EAAQa,WAAWlmD,OAAOqlD,EAAQc,WAAYQ,GAGnDD,EAAerqD,EAAQiqD,cAAiBxH,EAAW,EAAIziD,EAAQgmB,WAAc,GAC7E2C,EAAAA,EAAAA,GAAKsgC,GAAOQ,KACV9gC,EAAAA,EAAAA,GAAK8gC,EAASC,OAAQY,IACtB3hC,EAAAA,EAAAA,GAAK8gC,EAASE,MAAOW,IACrB3hC,EAAAA,EAAAA,GAAK8gC,EAASG,MAAOU,EAAA,IAIvBD,EAAe,EAGfxlD,EAAI0sB,KAAO63B,EAAW7wB,QACtB5P,EAAAA,EAAAA,GAAKqgC,EAAQE,OAAQoB,GAErBzlD,EAAIk4B,UAGJvoB,GAASiT,EAAQjT,MAEV,CAACA,QAAOD,SACjB,CAyBA,SAASg2C,GAAgBhyD,EAAOyH,EAASc,EAAM0pD,GAC7C,MAAM,EAAC/jD,EAAA,MAAG+N,GAAS1T,GACZ0T,MAAOi2C,EAAY39C,WAAW,KAACP,EAAI,MAAEF,IAAU9T,EACtD,IAAImyD,EAAS,SAcb,MAZe,WAAXF,EACFE,EAASjkD,IAAM8F,EAAOF,GAAS,EAAI,OAAS,QACnC5F,GAAK+N,EAAQ,EACtBk2C,EAAS,OACAjkD,GAAKgkD,EAAaj2C,EAAQ,IACnCk2C,EAAS,SAtBb,SAA6BA,EAAQnyD,EAAOyH,EAASc,GACnD,MAAM,EAAC2F,EAAA,MAAG+N,GAAS1T,EACb6pD,EAAQ3qD,EAAQ4qD,UAAY5qD,EAAQ6qD,aAC1C,MAAe,SAAXH,GAAqBjkD,EAAI+N,EAAQm2C,EAAQpyD,EAAMic,OAIpC,UAAXk2C,GAAsBjkD,EAAI+N,EAAQm2C,EAAQ,QAA9C,CAGF,CAeMG,CAAoBJ,EAAQnyD,EAAOyH,EAASc,KAC9C4pD,EAAS,UAGJA,CACT,CAKA,SAASK,GAAmBxyD,EAAOyH,EAASc,GAC1C,MAAM0pD,EAAS1pD,EAAK0pD,QAAUxqD,EAAQwqD,QA/CxC,SAAyBjyD,EAAOuI,GAC9B,MAAM,EAAC4F,EAAA,OAAG6N,GAAUzT,EAEpB,OAAI4F,EAAI6N,EAAS,EACR,MACE7N,EAAKnO,EAAMgc,OAASA,EAAS,EAC/B,SAEF,QACT,CAsCkDy2C,CAAgBzyD,EAAOuI,GAEvE,MAAO,CACL4pD,OAAQ5pD,EAAK4pD,QAAU1qD,EAAQ0qD,QAAUH,GAAgBhyD,EAAOyH,EAASc,EAAM0pD,GAC/EA,SAEJ,CA4BA,SAASS,GAAmBjrD,EAASc,EAAMoqD,EAAW3yD,GACpD,MAAM,UAACqyD,EAAS,aAAEC,EAAA,aAAcM,GAAgBnrD,GAC1C,OAAC0qD,EAAA,OAAQF,GAAUU,EACnBE,EAAiBR,EAAYC,GAC7B,QAACjR,EAAO,SAAEC,EAAQ,WAAEC,EAAA,YAAYC,IAAeN,EAAAA,EAAAA,IAAc0R,GAEnE,IAAI1kD,EAhCN,SAAgB3F,EAAM4pD,GACpB,IAAI,EAACjkD,EAAA,MAAG+N,GAAS1T,EAMjB,MALe,UAAX4pD,EACFjkD,GAAK+N,EACe,WAAXk2C,IACTjkD,GAAM+N,EAAQ,GAET/N,CACT,CAwBU4kD,CAAOvqD,EAAM4pD,GACrB,MAAMhkD,EAvBR,SAAgB5F,EAAM0pD,EAAQY,GAE5B,IAAI,EAAC1kD,EAAA,OAAG6N,GAAUzT,EAQlB,MAPe,QAAX0pD,EACF9jD,GAAK0kD,EAEL1kD,GADoB,WAAX8jD,EACJj2C,EAAS62C,EAER72C,EAAS,EAEV7N,CACT,CAYY4kD,CAAOxqD,EAAM0pD,EAAQY,GAc/B,MAZe,WAAXZ,EACa,SAAXE,EACFjkD,GAAK2kD,EACe,UAAXV,IACTjkD,GAAK2kD,GAEa,SAAXV,EACTjkD,GAAKtN,KAAKqC,IAAIo+C,EAASE,GAAc8Q,EACjB,UAAXF,IACTjkD,GAAKtN,KAAKqC,IAAIq+C,EAAUE,GAAe6Q,GAGlC,CACLnkD,GAAGgwB,EAAAA,EAAAA,GAAYhwB,EAAG,EAAGlO,EAAMic,MAAQ1T,EAAK0T,OACxC9N,GAAG+vB,EAAAA,EAAAA,GAAY/vB,EAAG,EAAGnO,EAAMgc,OAASzT,EAAKyT,QAE7C,CAEA,SAASg3C,GAAYvC,EAASr3B,EAAO3xB,GACnC,MAAMynB,GAAUO,EAAAA,EAAAA,GAAUhoB,EAAQynB,SAElC,MAAiB,WAAVkK,EACHq3B,EAAQviD,EAAIuiD,EAAQx0C,MAAQ,EAClB,UAAVmd,EACEq3B,EAAQviD,EAAIuiD,EAAQx0C,MAAQiT,EAAQpb,MACpC28C,EAAQviD,EAAIghB,EAAQlb,IAC5B,CAKA,SAASi/C,GAAwB53B,GAC/B,OAAO20B,GAAa,GAAIG,GAAc90B,GACxC,CAUA,SAAS63B,GAAkB9yD,EAAWyU,GACpC,MAAMyT,EAAWzT,GAAWA,EAAQ9G,SAAW8G,EAAQ9G,QAAQ0iD,SAAW57C,EAAQ9G,QAAQ0iD,QAAQrwD,UAClG,OAAOkoB,EAAWloB,EAAUkoB,SAASA,GAAYloB,CACnD,CAEA,MAAM+yD,GAAmB,CAEvBC,YAAaC,EAAAA,GACbl1B,KAAAA,CAAMm1B,GACJ,GAAIA,EAAajyD,OAAS,EAAG,CAC3B,MAAMM,EAAO2xD,EAAa,GACpB5hD,EAAS/P,EAAK3B,MAAMqP,KAAKqC,OACzB6hD,EAAa7hD,EAASA,EAAOrQ,OAAS,EAE5C,GAAI7B,MAAQA,KAAKiI,SAAiC,YAAtBjI,KAAKiI,QAAQ+B,KACvC,OAAO7H,EAAKoM,QAAQwF,OAAS,GACxB,GAAI5R,EAAK4R,MACd,OAAO5R,EAAK4R,MACP,GAAIggD,EAAa,GAAK5xD,EAAKqT,UAAYu+C,EAC5C,OAAO7hD,EAAO/P,EAAKqT,WAIvB,MAAO,EACT,EACAw+C,WAAYH,EAAAA,GAGZ/B,WAAY+B,EAAAA,GAGZI,YAAaJ,EAAAA,GACb9/C,KAAAA,CAAMmgD,GACJ,GAAIl0D,MAAQA,KAAKiI,SAAiC,YAAtBjI,KAAKiI,QAAQ+B,KACvC,OAAOkqD,EAAYngD,MAAQ,KAAOmgD,EAAYnD,gBAAkBmD,EAAYnD,eAG9E,IAAIh9C,EAAQmgD,EAAY3lD,QAAQwF,OAAS,GAErCA,IACFA,GAAS,MAEX,MAAMjL,EAAQorD,EAAYnD,eAI1B,OAHK70C,EAAAA,EAAAA,GAAcpT,KACjBiL,GAASjL,GAEJiL,CACT,EACAogD,UAAAA,CAAWD,GACT,MACMjsD,EADOisD,EAAY1zD,MAAMuP,eAAemkD,EAAYjqD,cACrCiB,WAAWgK,SAASg/C,EAAY1+C,WACrD,MAAO,CACL0P,YAAajd,EAAQid,YACrBF,gBAAiB/c,EAAQ+c,gBACzBjB,YAAa9b,EAAQ8b,YACrBgf,WAAY96B,EAAQ86B,WACpBE,iBAAkBh7B,EAAQg7B,iBAC1B6W,aAAc,EAElB,EACAsa,cAAAA,GACE,OAAOp0D,KAAKiI,QAAQosD,SACtB,EACAC,eAAAA,CAAgBJ,GACd,MACMjsD,EADOisD,EAAY1zD,MAAMuP,eAAemkD,EAAYjqD,cACrCiB,WAAWgK,SAASg/C,EAAY1+C,WACrD,MAAO,CACLmP,WAAY1c,EAAQ0c,WACpBrE,SAAUrY,EAAQqY,SAEtB,EACAi0C,WAAYV,EAAAA,GAGZ9B,UAAW8B,EAAAA,GAGXW,aAAcX,EAAAA,GACd1C,OAAQ0C,EAAAA,GACRY,YAAaZ,EAAAA,IAYf,SAASa,GAA2B9zD,EAAWuc,EAAMrQ,EAAKm+B,GACxD,MAAMzT,EAAS52B,EAAUuc,GAAM1b,KAAKqL,EAAKm+B,GAEzC,MAAsB,qBAAXzT,EACFm8B,GAAiBx2C,GAAM1b,KAAKqL,EAAKm+B,GAGnCzT,CACT,CAEO,MAAMm9B,WAAgBt+B,GAO3Bt2B,WAAAA,CAAY+G,GACV6U,QAEA3b,KAAK40D,QAAU,EACf50D,KAAKsC,QAAU,GACftC,KAAK60D,oBAAiBv0D,EACtBN,KAAK80D,WAAQx0D,EACbN,KAAK+0D,uBAAoBz0D,EACzBN,KAAKg1D,cAAgB,GACrBh1D,KAAKoI,iBAAc9H,EACnBN,KAAK0N,cAAWpN,EAChBN,KAAKQ,MAAQsG,EAAOtG,MACpBR,KAAKiI,QAAUnB,EAAOmB,QACtBjI,KAAKi1D,gBAAa30D,EAClBN,KAAK2+B,WAAQr+B,EACbN,KAAK8xD,gBAAaxxD,EAClBN,KAAKkxD,UAAO5wD,EACZN,KAAK+xD,eAAYzxD,EACjBN,KAAKmxD,YAAS7wD,EACdN,KAAK2yD,YAASryD,EACdN,KAAKyyD,YAASnyD,EACdN,KAAK0O,OAAIpO,EACTN,KAAK2O,OAAIrO,EACTN,KAAKwc,YAASlc,EACdN,KAAKyc,WAAQnc,EACbN,KAAKk1D,YAAS50D,EACdN,KAAKm1D,YAAS70D,EAGdN,KAAKo1D,iBAAc90D,EACnBN,KAAKq1D,sBAAmB/0D,EACxBN,KAAKs1D,qBAAkBh1D,CACzB,CAEAwN,UAAAA,CAAW7F,GACTjI,KAAKiI,QAAUA,EACfjI,KAAK+0D,uBAAoBz0D,EACzBN,KAAK0N,cAAWpN,CAClB,CAKAiW,kBAAAA,GACE,MAAM7J,EAAS1M,KAAK+0D,kBAEpB,GAAIroD,EACF,OAAOA,EAGT,MAAMlM,EAAQR,KAAKQ,MACbyH,EAAUjI,KAAKiI,QAAQizB,WAAWl7B,KAAKuR,cACvCpI,EAAOlB,EAAQsvB,SAAW/2B,EAAMyH,QAAQV,WAAaU,EAAQK,WAC7DA,EAAa,IAAIzB,EAAW7G,KAAKQ,MAAO2I,GAK9C,OAJIA,EAAKuN,aACP1W,KAAK+0D,kBAAoB3tD,OAAOkP,OAAOhO,IAGlCA,CACT,CAKAiJ,UAAAA,GACE,OAAOvR,KAAK0N,WACZ1N,KAAK0N,UAtLqB4H,EAsLWtV,KAAKQ,MAAM+Q,aAtLd0/C,EAsL4BjxD,KAtLnB8zD,EAsLyB9zD,KAAKg1D,eArLpEz/C,EAAAA,EAAAA,GAAcD,EAAQ,CAC3B27C,UACA6C,eACAnzD,KAAM,cAJV,IAA8B2U,EAAQ27C,EAAS6C,CAuL7C,CAEAyB,QAAAA,CAASlgD,EAASpN,GAChB,MAAM,UAACrH,GAAaqH,EAEd2rD,EAAcc,GAA2B9zD,EAAW,cAAeZ,KAAMqV,GACzEspB,EAAQ+1B,GAA2B9zD,EAAW,QAASZ,KAAMqV,GAC7D2+C,EAAaU,GAA2B9zD,EAAW,aAAcZ,KAAMqV,GAE7E,IAAIu8C,EAAQ,GAKZ,OAJAA,EAAQpB,GAAaoB,EAAOjB,GAAciD,IAC1ChC,EAAQpB,GAAaoB,EAAOjB,GAAchyB,IAC1CizB,EAAQpB,GAAaoB,EAAOjB,GAAcqD,IAEnCpC,CACT,CAEA4D,aAAAA,CAAc1B,EAAc7rD,GAC1B,OAAOwrD,GACLiB,GAA2BzsD,EAAQrH,UAAW,aAAcZ,KAAM8zD,GAEtE,CAEA2B,OAAAA,CAAQ3B,EAAc7rD,GACpB,MAAM,UAACrH,GAAaqH,EACdytD,EAAY,GAgBlB,OAdA9kC,EAAAA,EAAAA,GAAKkjC,GAAez+C,IAClB,MAAMq8C,EAAW,CACfC,OAAQ,GACRC,MAAO,GACPC,MAAO,IAEH8D,EAASjC,GAAkB9yD,EAAWyU,GAC5Cm7C,GAAakB,EAASC,OAAQhB,GAAc+D,GAA2BiB,EAAQ,cAAe31D,KAAMqV,KACpGm7C,GAAakB,EAASE,MAAO8C,GAA2BiB,EAAQ,QAAS31D,KAAMqV,IAC/Em7C,GAAakB,EAASG,MAAOlB,GAAc+D,GAA2BiB,EAAQ,aAAc31D,KAAMqV,KAElGqgD,EAAUvyD,KAAKuuD,EAAA,IAGVgE,CACT,CAEAE,YAAAA,CAAa9B,EAAc7rD,GACzB,OAAOwrD,GACLiB,GAA2BzsD,EAAQrH,UAAW,YAAaZ,KAAM8zD,GAErE,CAGA+B,SAAAA,CAAU/B,EAAc7rD,GACtB,MAAM,UAACrH,GAAaqH,EAEdusD,EAAeE,GAA2B9zD,EAAW,eAAgBZ,KAAM8zD,GAC3E3C,EAASuD,GAA2B9zD,EAAW,SAAUZ,KAAM8zD,GAC/DW,EAAcC,GAA2B9zD,EAAW,cAAeZ,KAAM8zD,GAE/E,IAAIlC,EAAQ,GAKZ,OAJAA,EAAQpB,GAAaoB,EAAOjB,GAAc6D,IAC1C5C,EAAQpB,GAAaoB,EAAOjB,GAAcQ,IAC1CS,EAAQpB,GAAaoB,EAAOjB,GAAc8D,IAEnC7C,CACT,CAKAkE,YAAAA,CAAa7tD,GACX,MAAM/B,EAASlG,KAAKsC,QACduN,EAAO7P,KAAKQ,MAAMqP,KAClBulD,EAAc,GACdC,EAAmB,GACnBC,EAAkB,GACxB,IACIlzD,EAAG41B,EADH87B,EAAe,GAGnB,IAAK1xD,EAAI,EAAG41B,EAAM9xB,EAAOrE,OAAQO,EAAI41B,IAAO51B,EAC1C0xD,EAAa3wD,KAAK2tD,GAAkB9wD,KAAKQ,MAAO0F,EAAO9D,KAyBzD,OArBI6F,EAAQmE,SACV0nD,EAAeA,EAAa1nD,QAAO,CAAC6I,EAAStL,EAAO8iB,IAAUxkB,EAAQmE,OAAO6I,EAAStL,EAAO8iB,EAAO5c,MAIlG5H,EAAQ8tD,WACVjC,EAAeA,EAAa56C,MAAK,CAACC,EAAGhF,IAAMlM,EAAQ8tD,SAAS58C,EAAGhF,EAAGtE,OAIpE+gB,EAAAA,EAAAA,GAAKkjC,GAAez+C,IAClB,MAAMsgD,EAASjC,GAAkBzrD,EAAQrH,UAAWyU,GACpD+/C,EAAYjyD,KAAKuxD,GAA2BiB,EAAQ,aAAc31D,KAAMqV,IACxEggD,EAAiBlyD,KAAKuxD,GAA2BiB,EAAQ,kBAAmB31D,KAAMqV,IAClFigD,EAAgBnyD,KAAKuxD,GAA2BiB,EAAQ,iBAAkB31D,KAAMqV,GAAA,IAGlFrV,KAAKo1D,YAAcA,EACnBp1D,KAAKq1D,iBAAmBA,EACxBr1D,KAAKs1D,gBAAkBA,EACvBt1D,KAAKi1D,WAAanB,EACXA,CACT,CAEA3tD,MAAAA,CAAOmpB,EAASupB,GACd,MAAM5wC,EAAUjI,KAAKiI,QAAQizB,WAAWl7B,KAAKuR,cACvCrL,EAASlG,KAAKsC,QACpB,IAAIuF,EACAisD,EAAe,GAEnB,GAAK5tD,EAAOrE,OAML,CACL,MAAMuoB,EAAW6lC,GAAYhoD,EAAQmiB,UAAU3oB,KAAKzB,KAAMkG,EAAQlG,KAAK60D,gBACvEf,EAAe9zD,KAAK81D,aAAa7tD,GAEjCjI,KAAK2+B,MAAQ3+B,KAAKu1D,SAASzB,EAAc7rD,GACzCjI,KAAK8xD,WAAa9xD,KAAKw1D,cAAc1B,EAAc7rD,GACnDjI,KAAKkxD,KAAOlxD,KAAKy1D,QAAQ3B,EAAc7rD,GACvCjI,KAAK+xD,UAAY/xD,KAAK41D,aAAa9B,EAAc7rD,GACjDjI,KAAKmxD,OAASnxD,KAAK61D,UAAU/B,EAAc7rD,GAE3C,MAAMc,EAAO/I,KAAK80D,MAAQ9D,GAAehxD,KAAMiI,GACzC+tD,EAAkB5uD,OAAOe,OAAO,CAAC,EAAGiiB,EAAUrhB,GAC9CoqD,EAAYH,GAAmBhzD,KAAKQ,MAAOyH,EAAS+tD,GACpDC,EAAkB/C,GAAmBjrD,EAAS+tD,EAAiB7C,EAAWnzD,KAAKQ,OAErFR,KAAK2yD,OAASQ,EAAUR,OACxB3yD,KAAKyyD,OAASU,EAAUV,OAExB5qD,EAAa,CACX+sD,QAAS,EACTlmD,EAAGunD,EAAgBvnD,EACnBC,EAAGsnD,EAAgBtnD,EACnB8N,MAAO1T,EAAK0T,MACZD,OAAQzT,EAAKyT,OACb04C,OAAQ9qC,EAAS1b,EACjBymD,OAAQ/qC,EAASzb,QA9BE,IAAjB3O,KAAK40D,UACP/sD,EAAa,CACX+sD,QAAS,IAgCf50D,KAAKg1D,cAAgBlB,EACrB9zD,KAAK0N,cAAWpN,EAEZuH,GACF7H,KAAKuW,qBAAqBpQ,OAAOnG,KAAM6H,GAGrCynB,GAAWrnB,EAAQiuD,UACrBjuD,EAAQiuD,SAASz0D,KAAKzB,KAAM,CAACQ,MAAOR,KAAKQ,MAAOywD,QAASjxD,KAAM64C,UAEnE,CAEAsd,SAAAA,CAAUC,EAActpD,EAAK/D,EAAMd,GACjC,MAAMouD,EAAgBr2D,KAAKs2D,iBAAiBF,EAAcrtD,EAAMd,GAEhE6E,EAAI44B,OAAO2wB,EAAch0B,GAAIg0B,EAAc/zB,IAC3Cx1B,EAAI44B,OAAO2wB,EAAc9zB,GAAI8zB,EAAc7zB,IAC3C11B,EAAI44B,OAAO2wB,EAAcE,GAAIF,EAAcG,GAC7C,CAEAF,gBAAAA,CAAiBF,EAAcrtD,EAAMd,GACnC,MAAM,OAAC0qD,EAAM,OAAEF,GAAUzyD,MACnB,UAAC6yD,EAAA,aAAWO,GAAgBnrD,GAC5B,QAAC45C,EAAO,SAAEC,EAAQ,WAAEC,EAAA,YAAYC,IAAeN,EAAAA,EAAAA,IAAc0R,IAC5D1kD,EAAG+nD,EAAK9nD,EAAG+nD,GAAON,GACnB,MAAC35C,EAAA,OAAOD,GAAUzT,EACxB,IAAIs5B,EAAIE,EAAIg0B,EAAIj0B,EAAIE,EAAIg0B,EAgDxB,MA9Ce,WAAX/D,GACFjwB,EAAKk0B,EAAOl6C,EAAS,EAEN,SAAXm2C,GACFtwB,EAAKo0B,EACLl0B,EAAKF,EAAKwwB,EAGVvwB,EAAKE,EAAKqwB,EACV2D,EAAKh0B,EAAKqwB,IAEVxwB,EAAKo0B,EAAMh6C,EACX8lB,EAAKF,EAAKwwB,EAGVvwB,EAAKE,EAAKqwB,EACV2D,EAAKh0B,EAAKqwB,GAGZ0D,EAAKl0B,IAGHE,EADa,SAAXowB,EACG8D,EAAMr1D,KAAKqC,IAAIo+C,EAASE,GAAe8Q,EACxB,UAAXF,EACJ8D,EAAMh6C,EAAQrb,KAAKqC,IAAIq+C,EAAUE,GAAe6Q,EAEhD7yD,KAAKk1D,OAGG,QAAXzC,GACFnwB,EAAKo0B,EACLl0B,EAAKF,EAAKuwB,EAGVxwB,EAAKE,EAAKswB,EACV0D,EAAKh0B,EAAKswB,IAEVvwB,EAAKo0B,EAAMl6C,EACXgmB,EAAKF,EAAKuwB,EAGVxwB,EAAKE,EAAKswB,EACV0D,EAAKh0B,EAAKswB,GAEZ2D,EAAKl0B,GAEA,CAACD,KAAIE,KAAIg0B,KAAIj0B,KAAIE,KAAIg0B,KAC9B,CAEApwB,SAAAA,CAAUuwB,EAAI7pD,EAAK7E,GACjB,MAAM02B,EAAQ3+B,KAAK2+B,MACb98B,EAAS88B,EAAM98B,OACrB,IAAIysD,EAAW0D,EAAc5vD,EAE7B,GAAIP,EAAQ,CACV,MAAMirD,GAAYC,EAAAA,EAAAA,IAAc9kD,EAAQ4kD,IAAK7sD,KAAK0O,EAAG1O,KAAKyc,OAa1D,IAXAk6C,EAAGjoD,EAAI8kD,GAAYxzD,KAAMiI,EAAQ0xB,WAAY1xB,GAE7C6E,EAAI22B,UAAYqpB,EAAUrpB,UAAUx7B,EAAQ0xB,YAC5C7sB,EAAI82B,aAAe,SAEnB0qB,GAAY70B,EAAAA,EAAAA,IAAOxxB,EAAQqmD,WAC3B0D,EAAe/pD,EAAQ+pD,aAEvBllD,EAAIiY,UAAY9c,EAAQ2uD,WACxB9pD,EAAI0sB,KAAO80B,EAAU9tB,OAEhBp+B,EAAI,EAAGA,EAAIP,IAAUO,EACxB0K,EAAIshD,SAASzvB,EAAMv8B,GAAI0qD,EAAUp+C,EAAEioD,EAAGjoD,GAAIioD,EAAGhoD,EAAI2/C,EAAU50B,WAAa,GACxEi9B,EAAGhoD,GAAK2/C,EAAU50B,WAAas4B,EAE3B5vD,EAAI,IAAMP,IACZ80D,EAAGhoD,GAAK1G,EAAQgqD,kBAAoBD,GAI5C,CAKA6E,aAAAA,CAAc/pD,EAAK6pD,EAAIv0D,EAAG0qD,EAAW7kD,GACnC,MAAMksD,EAAan0D,KAAKo1D,YAAYhzD,GAC9BkyD,EAAkBt0D,KAAKq1D,iBAAiBjzD,IACxC,UAACqoD,EAAA,SAAWC,GAAYziD,EACxBmpD,GAAW33B,EAAAA,EAAAA,IAAOxxB,EAAQmpD,UAC1B0F,EAAStD,GAAYxzD,KAAM,OAAQiI,GACnC8uD,EAAYjK,EAAUp+C,EAAEooD,GACxBE,EAAUvM,EAAY2G,EAAS13B,YAAc03B,EAAS13B,WAAa+wB,GAAa,EAAI,EACpFwM,EAASN,EAAGhoD,EAAIqoD,EAEtB,GAAI/uD,EAAQ0iD,cAAe,CACzB,MAAMgD,EAAc,CAClBnuC,OAAQpe,KAAKC,IAAIqpD,EAAUD,GAAa,EACxC9lC,WAAY2vC,EAAgB3vC,WAC5BrE,SAAUg0C,EAAgBh0C,SAC1ByD,YAAa,GAITR,EAAUupC,EAAUG,WAAW8J,EAAWrM,GAAYA,EAAW,EACjElnC,EAAUyzC,EAASxM,EAAY,EAGrC39C,EAAImY,YAAchd,EAAQivD,mBAC1BpqD,EAAIiY,UAAY9c,EAAQivD,oBACxBnW,EAAAA,EAAAA,IAAUj0C,EAAK6gD,EAAapqC,EAASC,GAGrC1W,EAAImY,YAAckvC,EAAWjvC,YAC7BpY,EAAIiY,UAAYovC,EAAWnvC,iBAC3B+7B,EAAAA,EAAAA,IAAUj0C,EAAK6gD,EAAapqC,EAASC,OAChC,CAEL1W,EAAIsY,WAAYle,EAAAA,EAAAA,GAASitD,EAAWpwC,aAAe3iB,KAAKqC,OAAO2D,OAAOW,OAAOosD,EAAWpwC,cAAiBowC,EAAWpwC,aAAe,EACnIjX,EAAImY,YAAckvC,EAAWjvC,YAC7BpY,EAAIw4B,YAAY6uB,EAAWpxB,YAAc,IACzCj2B,EAAIy4B,eAAiB4uB,EAAWlxB,kBAAoB,EAGpD,MAAMk0B,EAASrK,EAAUG,WAAW8J,EAAWrM,GACzC0M,EAAStK,EAAUG,WAAWH,EAAUe,MAAMkJ,EAAW,GAAIrM,EAAW,GACxE5Q,GAAe4H,EAAAA,EAAAA,IAAcyS,EAAWra,cAE1C1yC,OAAOW,OAAO+xC,GAAcjN,MAAK1xB,GAAW,IAANA,KACxCrO,EAAI04B,YACJ14B,EAAIiY,UAAY9c,EAAQivD,oBACxBtU,EAAAA,EAAAA,IAAmB91C,EAAK,CACtB4B,EAAGyoD,EACHxoD,EAAGsoD,EACHxoC,EAAGi8B,EACH/7B,EAAG87B,EACHjrC,OAAQs6B,IAEVhtC,EAAIoB,OACJpB,EAAI64B,SAGJ74B,EAAIiY,UAAYovC,EAAWnvC,gBAC3BlY,EAAI04B,aACJod,EAAAA,EAAAA,IAAmB91C,EAAK,CACtB4B,EAAG0oD,EACHzoD,EAAGsoD,EAAS,EACZxoC,EAAGi8B,EAAW,EACd/7B,EAAG87B,EAAY,EACfjrC,OAAQs6B,IAEVhtC,EAAIoB,SAGJpB,EAAIiY,UAAY9c,EAAQivD,mBACxBpqD,EAAIi4B,SAASoyB,EAAQF,EAAQvM,EAAUD,GACvC39C,EAAIuqD,WAAWF,EAAQF,EAAQvM,EAAUD,GAEzC39C,EAAIiY,UAAYovC,EAAWnvC,gBAC3BlY,EAAIi4B,SAASqyB,EAAQH,EAAS,EAAGvM,EAAW,EAAGD,EAAY,IAK/D39C,EAAIiY,UAAY/kB,KAAKs1D,gBAAgBlzD,EACvC,CAEAk1D,QAAAA,CAASX,EAAI7pD,EAAK7E,GAChB,MAAM,KAACipD,GAAQlxD,MACT,YAACmyD,EAAA,UAAaoF,EAAA,cAAWrF,EAAA,UAAezH,EAAA,SAAWC,EAAA,WAAUz8B,GAAchmB,EAC3EmpD,GAAW33B,EAAAA,EAAAA,IAAOxxB,EAAQmpD,UAChC,IAAIoG,EAAiBpG,EAAS13B,WAC1B+9B,EAAe,EAEnB,MAAM3K,GAAYC,EAAAA,EAAAA,IAAc9kD,EAAQ4kD,IAAK7sD,KAAK0O,EAAG1O,KAAKyc,OAEpDi7C,EAAiB,SAAShyC,GAC9B5Y,EAAIshD,SAAS1oC,EAAMonC,EAAUp+C,EAAEioD,EAAGjoD,EAAI+oD,GAAed,EAAGhoD,EAAI6oD,EAAiB,GAC7Eb,EAAGhoD,GAAK6oD,EAAiBrF,CAC3B,EAEMwF,EAA0B7K,EAAUrpB,UAAU8zB,GACpD,IAAI7F,EAAUkG,EAAWhG,EAAOxvD,EAAGmoB,EAAG7gB,EAAMu2B,EAiB5C,IAfAnzB,EAAI22B,UAAY8zB,EAChBzqD,EAAI82B,aAAe,SACnB92B,EAAI0sB,KAAO43B,EAAS5wB,OAEpBm2B,EAAGjoD,EAAI8kD,GAAYxzD,KAAM23D,EAAyB1vD,GAGlD6E,EAAIiY,UAAY9c,EAAQosD,WACxBzjC,EAAAA,EAAAA,GAAK5wB,KAAK8xD,WAAY4F,GAEtBD,EAAevF,GAA6C,UAA5ByF,EACd,WAAdJ,EAA0B7M,EAAW,EAAIz8B,EAAey8B,EAAW,EAAIz8B,EACvE,EAGC7rB,EAAI,EAAGsH,EAAOwnD,EAAKrvD,OAAQO,EAAIsH,IAAQtH,EAAG,CAc7C,IAbAsvD,EAAWR,EAAK9uD,GAChBw1D,EAAY53D,KAAKs1D,gBAAgBlzD,GAEjC0K,EAAIiY,UAAY6yC,GAChBhnC,EAAAA,EAAAA,GAAK8gC,EAASC,OAAQ+F,GAEtB9F,EAAQF,EAASE,MAEbM,GAAiBN,EAAM/vD,SACzB7B,KAAK62D,cAAc/pD,EAAK6pD,EAAIv0D,EAAG0qD,EAAW7kD,GAC1CuvD,EAAiBp2D,KAAKqC,IAAI2tD,EAAS13B,WAAY+wB,IAG5ClgC,EAAI,EAAG0V,EAAO2xB,EAAM/vD,OAAQ0oB,EAAI0V,IAAQ1V,EAC3CmtC,EAAe9F,EAAMrnC,IAErBitC,EAAiBpG,EAAS13B,YAG5B9I,EAAAA,EAAAA,GAAK8gC,EAASG,MAAO6F,EACvB,CAGAD,EAAe,EACfD,EAAiBpG,EAAS13B,YAG1B9I,EAAAA,EAAAA,GAAK5wB,KAAK+xD,UAAW2F,GACrBf,EAAGhoD,GAAKwjD,CACV,CAEA0F,UAAAA,CAAWlB,EAAI7pD,EAAK7E,GAClB,MAAMkpD,EAASnxD,KAAKmxD,OACdtvD,EAASsvD,EAAOtvD,OACtB,IAAIwvD,EAAYjvD,EAEhB,GAAIP,EAAQ,CACV,MAAMirD,GAAYC,EAAAA,EAAAA,IAAc9kD,EAAQ4kD,IAAK7sD,KAAK0O,EAAG1O,KAAKyc,OAa1D,IAXAk6C,EAAGjoD,EAAI8kD,GAAYxzD,KAAMiI,EAAQ6vD,YAAa7vD,GAC9C0uD,EAAGhoD,GAAK1G,EAAQmqD,gBAEhBtlD,EAAI22B,UAAYqpB,EAAUrpB,UAAUx7B,EAAQ6vD,aAC5ChrD,EAAI82B,aAAe,SAEnBytB,GAAa53B,EAAAA,EAAAA,IAAOxxB,EAAQopD,YAE5BvkD,EAAIiY,UAAY9c,EAAQ8vD,YACxBjrD,EAAI0sB,KAAO63B,EAAW7wB,OAEjBp+B,EAAI,EAAGA,EAAIP,IAAUO,EACxB0K,EAAIshD,SAAS+C,EAAO/uD,GAAI0qD,EAAUp+C,EAAEioD,EAAGjoD,GAAIioD,EAAGhoD,EAAI0iD,EAAW33B,WAAa,GAC1Ei9B,EAAGhoD,GAAK0iD,EAAW33B,WAAazxB,EAAQoqD,cAG9C,CAEAxtB,cAAAA,CAAe8xB,EAAI7pD,EAAKkrD,EAAa/vD,GACnC,MAAM,OAAC0qD,EAAM,OAAEF,GAAUzyD,MACnB,EAAC0O,EAAA,EAAGC,GAAKgoD,GACT,MAACl6C,EAAA,OAAOD,GAAUw7C,GAClB,QAACnW,EAAA,SAASC,EAAA,WAAUC,EAAA,YAAYC,IAAeN,EAAAA,EAAAA,IAAcz5C,EAAQmrD,cAE3EtmD,EAAIiY,UAAY9c,EAAQ+c,gBACxBlY,EAAImY,YAAchd,EAAQid,YAC1BpY,EAAIsY,UAAYnd,EAAQ8b,YAExBjX,EAAI04B,YACJ14B,EAAI24B,OAAO/2B,EAAImzC,EAASlzC,GACT,QAAX8jD,GACFzyD,KAAKm2D,UAAUQ,EAAI7pD,EAAKkrD,EAAa/vD,GAEvC6E,EAAI44B,OAAOh3B,EAAI+N,EAAQqlC,EAAUnzC,GACjC7B,EAAImrD,iBAAiBvpD,EAAI+N,EAAO9N,EAAGD,EAAI+N,EAAO9N,EAAImzC,GACnC,WAAX2Q,GAAkC,UAAXE,GACzB3yD,KAAKm2D,UAAUQ,EAAI7pD,EAAKkrD,EAAa/vD,GAEvC6E,EAAI44B,OAAOh3B,EAAI+N,EAAO9N,EAAI6N,EAASwlC,GACnCl1C,EAAImrD,iBAAiBvpD,EAAI+N,EAAO9N,EAAI6N,EAAQ9N,EAAI+N,EAAQulC,EAAarzC,EAAI6N,GAC1D,WAAXi2C,GACFzyD,KAAKm2D,UAAUQ,EAAI7pD,EAAKkrD,EAAa/vD,GAEvC6E,EAAI44B,OAAOh3B,EAAIqzC,EAAYpzC,EAAI6N,GAC/B1P,EAAImrD,iBAAiBvpD,EAAGC,EAAI6N,EAAQ9N,EAAGC,EAAI6N,EAASulC,GACrC,WAAX0Q,GAAkC,SAAXE,GACzB3yD,KAAKm2D,UAAUQ,EAAI7pD,EAAKkrD,EAAa/vD,GAEvC6E,EAAI44B,OAAOh3B,EAAGC,EAAIkzC,GAClB/0C,EAAImrD,iBAAiBvpD,EAAGC,EAAGD,EAAImzC,EAASlzC,GACxC7B,EAAIovC,YAEJpvC,EAAIoB,OAEAjG,EAAQ8b,YAAc,GACxBjX,EAAI64B,QAER,CAMAuyB,sBAAAA,CAAuBjwD,GACrB,MAAMzH,EAAQR,KAAKQ,MACbC,EAAQT,KAAKoI,YACb+vD,EAAQ13D,GAASA,EAAMiO,EACvB0pD,EAAQ33D,GAASA,EAAMkO,EAC7B,GAAIwpD,GAASC,EAAO,CAClB,MAAMhuC,EAAW6lC,GAAYhoD,EAAQmiB,UAAU3oB,KAAKzB,KAAMA,KAAKsC,QAAStC,KAAK60D,gBAC7E,IAAKzqC,EACH,OAEF,MAAMrhB,EAAO/I,KAAK80D,MAAQ9D,GAAehxD,KAAMiI,GACzC+tD,EAAkB5uD,OAAOe,OAAO,CAAC,EAAGiiB,EAAUpqB,KAAK80D,OACnD3B,EAAYH,GAAmBxyD,EAAOyH,EAAS+tD,GAC/Ct2C,EAAQwzC,GAAmBjrD,EAAS+tD,EAAiB7C,EAAW3yD,GAClE23D,EAAMnyD,MAAQ0Z,EAAMhR,GAAK0pD,EAAMpyD,MAAQ0Z,EAAM/Q,IAC/C3O,KAAK2yD,OAASQ,EAAUR,OACxB3yD,KAAKyyD,OAASU,EAAUV,OACxBzyD,KAAKyc,MAAQ1T,EAAK0T,MAClBzc,KAAKwc,OAASzT,EAAKyT,OACnBxc,KAAKk1D,OAAS9qC,EAAS1b,EACvB1O,KAAKm1D,OAAS/qC,EAASzb,EACvB3O,KAAKuW,qBAAqBpQ,OAAOnG,KAAM0f,IAG7C,CAMA24C,WAAAA,GACE,QAASr4D,KAAK40D,OAChB,CAEAvyD,IAAAA,CAAKyK,GACH,MAAM7E,EAAUjI,KAAKiI,QAAQizB,WAAWl7B,KAAKuR,cAC7C,IAAIqjD,EAAU50D,KAAK40D,QAEnB,IAAKA,EACH,OAGF50D,KAAKk4D,uBAAuBjwD,GAE5B,MAAM+vD,EAAc,CAClBv7C,MAAOzc,KAAKyc,MACZD,OAAQxc,KAAKwc,QAETm6C,EAAK,CACTjoD,EAAG1O,KAAK0O,EACRC,EAAG3O,KAAK2O,GAIVimD,EAAUxzD,KAAKoY,IAAIo7C,GAAW,KAAO,EAAIA,EAEzC,MAAMllC,GAAUO,EAAAA,EAAAA,GAAUhoB,EAAQynB,SAG5B4oC,EAAoBt4D,KAAK2+B,MAAM98B,QAAU7B,KAAK8xD,WAAWjwD,QAAU7B,KAAKkxD,KAAKrvD,QAAU7B,KAAK+xD,UAAUlwD,QAAU7B,KAAKmxD,OAAOtvD,OAE9HoG,EAAQsvB,SAAW+gC,IACrBxrD,EAAIg4B,OACJh4B,EAAIyrD,YAAc3D,EAGlB50D,KAAK6kC,eAAe8xB,EAAI7pD,EAAKkrD,EAAa/vD,IAE1CqlD,EAAAA,EAAAA,IAAsBxgD,EAAK7E,EAAQslD,eAEnCoJ,EAAGhoD,GAAK+gB,EAAQrb,IAGhBrU,KAAKomC,UAAUuwB,EAAI7pD,EAAK7E,GAGxBjI,KAAKs3D,SAASX,EAAI7pD,EAAK7E,GAGvBjI,KAAK63D,WAAWlB,EAAI7pD,EAAK7E,IAEzBomD,EAAAA,EAAAA,IAAqBvhD,EAAK7E,EAAQslD,eAElCzgD,EAAIk4B,UAER,CAMAsT,iBAAAA,GACE,OAAOt4C,KAAKsC,SAAW,EACzB,CAOAi2C,iBAAAA,CAAkBC,EAAgB4X,GAChC,MAAM3X,EAAaz4C,KAAKsC,QAClB4D,EAASsyC,EAAe5zB,KAAI4zC,IAA2B,IAA1B,aAACvuD,EAAY,MAAEN,GAAM6uD,EACtD,MAAMluD,EAAOtK,KAAKQ,MAAMuP,eAAe9F,GAEvC,IAAKK,EACH,MAAM,IAAIse,MAAM,kCAAoC3e,GAGtD,MAAO,CACLA,eACAgL,QAAS3K,EAAKuF,KAAKlG,GACnBA,QACD,IAEG2lB,IAAWqpB,EAAAA,EAAAA,IAAeF,EAAYvyC,GACtCuyD,EAAkBz4D,KAAK04D,iBAAiBxyD,EAAQkqD,IAElD9gC,GAAWmpC,KACbz4D,KAAKsC,QAAU4D,EACflG,KAAK60D,eAAiBzE,EACtBpwD,KAAK24D,qBAAsB,EAC3B34D,KAAKmG,QAAO,GAEhB,CASAyoD,WAAAA,CAAYtpC,EAAGuzB,GAA4B,IAApBK,IAAAt3C,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,KAAAA,UAAA,GACrB,GAAIi3C,GAAU74C,KAAK24D,oBACjB,OAAO,EAET34D,KAAK24D,qBAAsB,EAE3B,MAAM1wD,EAAUjI,KAAKiI,QACfwwC,EAAaz4C,KAAKsC,SAAW,GAC7B4D,EAASlG,KAAKq5C,mBAAmB/zB,EAAGmzB,EAAYI,EAAQK,GAKxDuf,EAAkBz4D,KAAK04D,iBAAiBxyD,EAAQof,GAGhDgK,EAAUupB,KAAWF,EAAAA,EAAAA,IAAezyC,EAAQuyC,IAAeggB,EAgBjE,OAbInpC,IACFtvB,KAAKsC,QAAU4D,GAEX+B,EAAQsvB,SAAWtvB,EAAQiuD,YAC7Bl2D,KAAK60D,eAAiB,CACpBnmD,EAAG4W,EAAE5W,EACLC,EAAG2W,EAAE3W,GAGP3O,KAAKmG,QAAO,EAAM0yC,KAIfvpB,CACT,CAWA+pB,kBAAAA,CAAmB/zB,EAAGmzB,EAAYI,EAAQK,GACxC,MAAMjxC,EAAUjI,KAAKiI,QAErB,GAAe,aAAXqd,EAAE3kB,KACJ,MAAO,GAGT,IAAKu4C,EAGH,OAAOT,EAAWrsC,QAAOhK,GACvBpC,KAAKQ,MAAMqP,KAAKC,SAAS1N,EAAE6H,oBACiD3J,IAA5EN,KAAKQ,MAAMuP,eAAe3N,EAAE6H,cAAciB,WAAWsH,UAAUpQ,EAAEuH,SAKrE,MAAMzD,EAASlG,KAAKQ,MAAM82C,0BAA0BhyB,EAAGrd,EAAQ+B,KAAM/B,EAAS4wC,GAM9E,OAJI5wC,EAAQmB,SACVlD,EAAOkD,UAGFlD,CACT,CASAwyD,gBAAAA,CAAiBxyD,EAAQof,GACvB,MAAM,OAAC4vC,EAAA,OAAQC,EAAA,QAAQltD,GAAWjI,KAC5BoqB,EAAW6lC,GAAYhoD,EAAQmiB,UAAU3oB,KAAKzB,KAAMkG,EAAQof,GAClE,OAAoB,IAAb8E,IAAuB8qC,IAAW9qC,EAAS1b,GAAKymD,IAAW/qC,EAASzb,EAC7E,GACD6M,EAAAA,EAAAA,GA5vBYm5C,GAAgB,cAKN1E,IAyvBvB,IAAA2I,GAAe,CACb/sD,GAAI,UACJsjD,SAAUwF,GACV1E,eAEA4I,SAAAA,CAAUr4D,EAAOkjD,EAAOz7C,GAClBA,IACFzH,EAAMywD,QAAU,IAAI0D,GAAQ,CAACn0D,QAAOyH,YAExC,EAEA2zB,YAAAA,CAAap7B,EAAOkjD,EAAOz7C,GACrBzH,EAAMywD,SACRzwD,EAAMywD,QAAQnjD,WAAW7F,EAE7B,EAEAiI,KAAAA,CAAM1P,EAAOkjD,EAAOz7C,GACdzH,EAAMywD,SACRzwD,EAAMywD,QAAQnjD,WAAW7F,EAE7B,EAEA6wD,SAAAA,CAAUt4D,GACR,MAAMywD,EAAUzwD,EAAMywD,QAEtB,GAAIA,GAAWA,EAAQoH,cAAe,CACpC,MAAMhgD,EAAO,CACX44C,WAGF,IAA8E,IAA1EzwD,EAAMk9B,cAAc,oBAAqB,IAAIrlB,EAAM4zB,YAAY,IACjE,OAGFglB,EAAQ5uD,KAAK7B,EAAMsM,KAEnBtM,EAAMk9B,cAAc,mBAAoBrlB,GAE5C,EAEA+2C,UAAAA,CAAW5uD,EAAO6X,GAChB,GAAI7X,EAAMywD,QAAS,CAEjB,MAAMxmC,EAAmBpS,EAAKwgC,OAC1Br4C,EAAMywD,QAAQrC,YAAYv2C,EAAKpV,MAAOwnB,EAAkBpS,EAAK6gC,eAE/D7gC,EAAKiX,SAAU,GAGrB,EAEAhoB,SAAU,CACRiwB,SAAS,EACT2+B,SAAU,KACV9rC,SAAU,UACVpF,gBAAiB,kBACjB4xC,WAAY,OACZtI,UAAW,CACTnqC,OAAQ,QAEV6tC,aAAc,EACdC,kBAAmB,EACnBt4B,WAAY,OACZ06B,UAAW,OACXlC,YAAa,EACbf,SAAU,CAAC,EAEXmG,UAAW,OACXQ,YAAa,OACb1F,cAAe,EACfD,gBAAiB,EACjBf,WAAY,CACVltC,OAAQ,QAEV2zC,YAAa,OACbpoC,QAAS,EACTojC,aAAc,EACdD,UAAW,EACXO,aAAc,EACd3I,UAAWA,CAAC39C,EAAK3D,IAASA,EAAKioD,SAASroD,KACxC2hD,SAAUA,CAAC59C,EAAK3D,IAASA,EAAKioD,SAASroD,KACvCmuD,mBAAoB,OACpBhF,eAAe,EACfjkC,WAAY,EACZ/I,YAAa,gBACbnB,YAAa,EACbxc,UAAW,CACTxG,SAAU,IACVuE,OAAQ,gBAEVgD,WAAY,CACV2W,QAAS,CACPte,KAAM,SACNkH,WAAY,CAAC,IAAK,IAAK,QAAS,SAAU,SAAU,WAEtD+sD,QAAS,CACPtvD,OAAQ,SACRvE,SAAU,MAGdH,UAAW+yD,IAGbhsB,cAAe,CACbypB,SAAU,OACVC,WAAY,OACZ/C,UAAW,QAGb9lB,YAAa,CACXpkB,YAAcjH,GAAkB,WAATA,GAA8B,aAATA,GAAgC,aAATA,EACnEkH,YAAY,EACZzjB,UAAW,CACTwjB,aAAa,EACbC,YAAY,GAEd9c,UAAW,CACTwxD,WAAW,GAEbzwD,WAAY,CACVywD,UAAW,cAKflpB,uBAAwB,CAAC,+HClzC3B,SAASmpB,GAAe9mD,EAAQuD,EAAK9L,EAAOsvD,GAC1C,MAAMthC,EAAQzlB,EAAO8K,QAAQvH,GAC7B,IAAe,IAAXkiB,EACF,MAbgBuhC,EAAChnD,EAAQuD,EAAK9L,EAAOsvD,KACpB,kBAARxjD,GACT9L,EAAQuI,EAAO/O,KAAKsS,GAAO,EAC3BwjD,EAAYpR,QAAQ,CAACl+C,QAAOoK,MAAO0B,KAC1BsH,MAAMtH,KACf9L,EAAQ,MAEHA,GAMEuvD,CAAYhnD,EAAQuD,EAAK9L,EAAOsvD,GAGzC,OAAOthC,IADMzlB,EAAOinD,YAAY1jD,GACR9L,EAAQguB,CAClC,CAIA,SAASyhC,GAAkBtwD,GACzB,MAAMoJ,EAASlS,KAAKmS,YAEpB,OAAIrJ,GAAS,GAAKA,EAAQoJ,EAAOrQ,OACxBqQ,EAAOpJ,GAETA,CACT,CAEe,MAAMuwD,WAAsBt/B,GAazCh6B,WAAAA,CAAY+E,GACV6W,MAAM7W,GAGN9E,KAAKs5D,iBAAch5D,EACnBN,KAAKu5D,YAAc,EACnBv5D,KAAKw5D,aAAe,EACtB,CAEAvwC,IAAAA,CAAKukB,GACH,MAAMisB,EAAQz5D,KAAKw5D,aACnB,GAAIC,EAAM53D,OAAQ,CAChB,MAAMqQ,EAASlS,KAAKmS,YACpB,IAAK,MAAM,MAACxI,EAAA,MAAOoK,KAAU0lD,EACvBvnD,EAAOvI,KAAWoK,GACpB7B,EAAOiG,OAAOxO,EAAO,GAGzB3J,KAAKw5D,aAAe,GAEtB79C,MAAMsN,KAAKukB,EACb,CAEA/7B,KAAAA,CAAMgE,EAAK9L,GACT,IAAIuS,EAAAA,EAAAA,GAAczG,GAChB,OAAO,KAET,MAAMvD,EAASlS,KAAKmS,YAGpB,MAtDe8mB,EAACtvB,EAAOlG,IAAkB,OAAVkG,EAAiB,MAAO+0B,EAAAA,EAAAA,GAAYt9B,KAAKk3B,MAAM3uB,GAAQ,EAAGlG,GAsDlFw1B,CAFPtvB,EAAQ+vD,SAAS/vD,IAAUuI,EAAOvI,KAAW8L,EAAM9L,EAC/CqvD,GAAe9mD,EAAQuD,GAAK1G,EAAAA,EAAAA,GAAepF,EAAO8L,GAAMzV,KAAKw5D,cACxCtnD,EAAOrQ,OAAS,EAC3C,CAEAw6B,mBAAAA,GACE,MAAM,WAAC7oB,EAAA,WAAYC,GAAczT,KAAK0T,gBACtC,IAAI,IAACrS,EAAG,IAAEoC,GAAOzD,KAAK8S,WAAU,GAEJ,UAAxB9S,KAAKiI,QAAQo5C,SACV7tC,IACHnS,EAAM,GAEHoS,IACHhQ,EAAMzD,KAAKmS,YAAYtQ,OAAS,IAIpC7B,KAAKqB,IAAMA,EACXrB,KAAKyD,IAAMA,CACb,CAEAg5B,UAAAA,GACE,MAAMp7B,EAAMrB,KAAKqB,IACXoC,EAAMzD,KAAKyD,IACX0b,EAASnf,KAAKiI,QAAQkX,OACtBzF,EAAQ,GACd,IAAIxH,EAASlS,KAAKmS,YAGlBD,EAAkB,IAAT7Q,GAAcoC,IAAQyO,EAAOrQ,OAAS,EAAKqQ,EAASA,EAAOgjC,MAAM7zC,EAAKoC,EAAM,GAErFzD,KAAKu5D,YAAcn4D,KAAKqC,IAAIyO,EAAOrQ,QAAUsd,EAAS,EAAI,GAAI,GAC9Dnf,KAAKs5D,YAAct5D,KAAKqB,KAAO8d,EAAS,GAAM,GAE9C,IAAK,IAAIrW,EAAQzH,EAAKyH,GAASrF,EAAKqF,IAClC4Q,EAAMvW,KAAK,CAAC2F,UAEd,OAAO4Q,CACT,CAEA1F,gBAAAA,CAAiBlL,GACf,OAAOswD,GAAkB33D,KAAKzB,KAAM8I,EACtC,CAKA7B,SAAAA,GACE0U,MAAM1U,YAEDjH,KAAK8b,iBAER9b,KAAK4pB,gBAAkB5pB,KAAK4pB,eAEhC,CAGAnQ,gBAAAA,CAAiB3Q,GAKf,MAJqB,kBAAVA,IACTA,EAAQ9I,KAAKyR,MAAM3I,IAGJ,OAAVA,EAAiB+J,IAAM7S,KAAKke,oBAAoBpV,EAAQ9I,KAAKs5D,aAAet5D,KAAKu5D,YAC1F,CAIA5/C,eAAAA,CAAgBhQ,GACd,MAAM+P,EAAQ1Z,KAAK0Z,MACnB,OAAI/P,EAAQ,GAAKA,EAAQ+P,EAAM7X,OAAS,EAC/B,KAEF7B,KAAKyZ,iBAAiBC,EAAM/P,GAAOb,MAC5C,CAEAsV,gBAAAA,CAAiB2iB,GACf,OAAO3/B,KAAKk3B,MAAMt4B,KAAKs5D,YAAct5D,KAAKmhC,mBAAmBJ,GAAS/gC,KAAKu5D,YAC7E,CAEA19C,YAAAA,GACE,OAAO7b,KAAKuU,MACd,ECVF,SAASolD,GAAkB7wD,EAAO8wD,EAAUC,GAA6B,IAA3B,WAACn/C,EAAU,YAAEqjB,GAAY87B,EACrE,MAAMC,GAAMz5C,EAAAA,EAAAA,GAAU0d,GAChBziB,GAASZ,EAAatZ,KAAKwgB,IAAIk4C,GAAO14D,KAAKsgB,IAAIo4C,KAAS,KACxDj4D,EAAS,IAAO+3D,GAAc,GAAK9wD,GAAOjH,OAChD,OAAOT,KAAKC,IAAIu4D,EAAat+C,EAAOzZ,EACtC,EDMA2Z,EAAAA,EAAAA,GA5HqB69C,GAAsB,KAE7B,aAAW79C,EAAAA,EAAAA,GAFJ69C,GAAsB,WAOvB,CAChB3/C,MAAO,CACLmiB,SAAUu9B,MC+GD,MAAMW,WAAwBhgC,GAE3Ch6B,WAAAA,CAAY+E,GACV6W,MAAM7W,GAGN9E,KAAKsB,WAAQhB,EAEbN,KAAKqJ,SAAM/I,EAEXN,KAAKs5D,iBAAch5D,EAEnBN,KAAKg6D,eAAY15D,EACjBN,KAAKu5D,YAAc,CACrB,CAEA9nD,KAAAA,CAAMgE,EAAK9L,GACT,OAAIuS,EAAAA,EAAAA,GAAczG,KAGE,kBAARA,GAAoBA,aAAetC,UAAYumD,UAAUjkD,GAF5D,MAMDA,CACV,CAEAwkD,sBAAAA,GACE,MAAM,YAAC36C,GAAetf,KAAKiI,SACrB,WAACuL,EAAA,WAAYC,GAAczT,KAAK0T,gBACtC,IAAI,IAACrS,EAAG,IAAEoC,GAAOzD,KAEjB,MAAMk6D,EAAS/+C,GAAM9Z,EAAMmS,EAAanS,EAAM8Z,EACxCg/C,EAASh/C,GAAM1X,EAAMgQ,EAAahQ,EAAM0X,EAE9C,GAAImE,EAAa,CACf,MAAM86C,GAAUhwD,EAAAA,EAAAA,GAAK/I,GACfg5D,GAAUjwD,EAAAA,EAAAA,GAAK3G,GAEjB22D,EAAU,GAAKC,EAAU,EAC3BF,EAAO,GACEC,EAAU,GAAKC,EAAU,GAClCH,EAAO,GAIX,GAAI74D,IAAQoC,EAAK,CACf,IAAI0b,EAAiB,IAAR1b,EAAY,EAAIrC,KAAKoY,IAAU,IAAN/V,GAEtC02D,EAAO12D,EAAM0b,GAERG,GACH46C,EAAO74D,EAAM8d,GAGjBnf,KAAKqB,IAAMA,EACXrB,KAAKyD,IAAMA,CACb,CAEA62D,YAAAA,GACE,MAAM3jC,EAAW32B,KAAKiI,QAAQyR,MAE9B,IACI6gD,GADA,cAACnjC,EAAA,SAAeojC,GAAY7jC,EAkBhC,OAfI6jC,GACFD,EAAWn5D,KAAKy2B,KAAK73B,KAAKyD,IAAM+2D,GAAYp5D,KAAKqE,MAAMzF,KAAKqB,IAAMm5D,GAAY,EAC1ED,EAAW,MACbnsD,QAAQC,KAAK,UAADzC,OAAW5L,KAAK6L,GAAE,qBAAAD,OAAoB4uD,EAAS,mCAAA5uD,OAAiC2uD,EAAA,8BAC5FA,EAAW,OAGbA,EAAWv6D,KAAKy6D,mBAChBrjC,EAAgBA,GAAiB,IAG/BA,IACFmjC,EAAWn5D,KAAKC,IAAI+1B,EAAemjC,IAG9BA,CACT,CAKAE,gBAAAA,GACE,OAAOtnD,OAAOC,iBAChB,CAEAqpB,UAAAA,GACE,MAAMtzB,EAAOnJ,KAAKiI,QACZ0uB,EAAWxtB,EAAKuQ,MAMtB,IAAI6gD,EAAWv6D,KAAKs6D,eACpBC,EAAWn5D,KAAKqC,IAAI,EAAG82D,GAEvB,MAcM7gD,EApPV,SAAuBghD,EAAmBC,GACxC,MAAMjhD,EAAQ,IAMR,OAAC2nC,EAAM,KAAE1e,EAAA,IAAMthC,EAAA,IAAKoC,EAAG,UAAEm3D,EAAA,MAAWlpD,EAAA,SAAO6oD,EAAQ,UAAEM,EAAA,cAAWC,GAAiBJ,EACjFK,EAAOp4B,GAAQ,EACfq4B,EAAYT,EAAW,GACtBl5D,IAAK45D,EAAMx3D,IAAKy3D,GAAQP,EACzBnnD,IAAc0I,EAAAA,EAAAA,GAAc7a,GAC5BoS,IAAcyI,EAAAA,EAAAA,GAAczY,GAC5B03D,IAAgBj/C,EAAAA,EAAAA,GAAcxK,GAC9BkoD,GAAcsB,EAAOD,IAASJ,EAAY,GAChD,IACIx2D,EAAQ+2D,EAASC,EAASC,EAD1Bz6C,GAAU06C,EAAAA,EAAAA,KAASL,EAAOD,GAAQD,EAAYD,GAAQA,EAK1D,GAAIl6C,EAdgB,QAcUrN,IAAeC,EAC3C,MAAO,CAAC,CAAC3K,MAAOmyD,GAAO,CAACnyD,MAAOoyD,IAGjCI,EAAYl6D,KAAKy2B,KAAKqjC,EAAOr6C,GAAWzf,KAAKqE,MAAMw1D,EAAOp6C,GACtDy6C,EAAYN,IAEdn6C,GAAU06C,EAAAA,EAAAA,IAAQD,EAAYz6C,EAAUm6C,EAAYD,GAAQA,IAGzD7+C,EAAAA,EAAAA,GAAc0+C,KAEjBv2D,EAASjD,KAAKmqB,IAAI,GAAIqvC,GACtB/5C,EAAUzf,KAAKy2B,KAAKhX,EAAUxc,GAAUA,GAG3B,UAAXg9C,GACF+Z,EAAUh6D,KAAKqE,MAAMw1D,EAAOp6C,GAAWA,EACvCw6C,EAAUj6D,KAAKy2B,KAAKqjC,EAAOr6C,GAAWA,IAEtCu6C,EAAUH,EACVI,EAAUH,GAGR1nD,GAAcC,GAAckvB,IAAQ64B,EAAAA,EAAAA,KAAa/3D,EAAMpC,GAAOshC,EAAM9hB,EAAU,MAKhFy6C,EAAYl6D,KAAKk3B,MAAMl3B,KAAKC,KAAKoC,EAAMpC,GAAOwf,EAAS05C,IACvD15C,GAAWpd,EAAMpC,GAAOi6D,EACxBF,EAAU/5D,EACVg6D,EAAU53D,GACD03D,GAITC,EAAU5nD,EAAanS,EAAM+5D,EAC7BC,EAAU5nD,EAAahQ,EAAM43D,EAC7BC,EAAY5pD,EAAQ,EACpBmP,GAAWw6C,EAAUD,GAAWE,IAGhCA,GAAaD,EAAUD,GAAWv6C,EAIhCy6C,GADEG,EAAAA,EAAAA,IAAaH,EAAWl6D,KAAKk3B,MAAMgjC,GAAYz6C,EAAU,KAC/Czf,KAAKk3B,MAAMgjC,GAEXl6D,KAAKy2B,KAAKyjC,IAM1B,MAAMI,EAAgBt6D,KAAKqC,KACzBk4D,EAAAA,EAAAA,IAAe96C,IACf86C,EAAAA,EAAAA,IAAeP,IAEjB/2D,EAASjD,KAAKmqB,IAAI,IAAIrP,EAAAA,EAAAA,GAAc0+C,GAAac,EAAgBd,GACjEQ,EAAUh6D,KAAKk3B,MAAM8iC,EAAU/2D,GAAUA,EACzCg3D,EAAUj6D,KAAKk3B,MAAM+iC,EAAUh3D,GAAUA,EAEzC,IAAIkmB,EAAI,EAiBR,IAhBI/W,IACEsnD,GAAiBM,IAAY/5D,GAC/BqY,EAAMvW,KAAK,CAAC2F,MAAOzH,IAEf+5D,EAAU/5D,GACZkpB,KAGEkxC,EAAAA,EAAAA,IAAar6D,KAAKk3B,OAAO8iC,EAAU7wC,EAAI1J,GAAWxc,GAAUA,EAAQhD,EAAKs4D,GAAkBt4D,EAAKu4D,EAAYc,KAC9GnwC,KAEO6wC,EAAU/5D,GACnBkpB,KAIGA,EAAI+wC,IAAa/wC,EAAG,CACzB,MAAMqxC,EAAYx6D,KAAKk3B,OAAO8iC,EAAU7wC,EAAI1J,GAAWxc,GAAUA,EACjE,GAAIoP,GAAcmoD,EAAYn4D,EAC5B,MAEFiW,EAAMvW,KAAK,CAAC2F,MAAO8yD,GACrB,CAaA,OAXInoD,GAAcqnD,GAAiBO,IAAY53D,EAEzCiW,EAAM7X,SAAU45D,EAAAA,EAAAA,IAAa/hD,EAAMA,EAAM7X,OAAS,GAAGiH,MAAOrF,EAAKk2D,GAAkBl2D,EAAKm2D,EAAYc,IACtGhhD,EAAMA,EAAM7X,OAAS,GAAGiH,MAAQrF,EAEhCiW,EAAMvW,KAAK,CAAC2F,MAAOrF,IAEXgQ,GAAc4nD,IAAY53D,GACpCiW,EAAMvW,KAAK,CAAC2F,MAAOuyD,IAGd3hD,CACT,CA4HkBmiD,CAdkB,CAC9BtB,WACAlZ,OAAQl4C,EAAKk4C,OACbhgD,IAAK8H,EAAK9H,IACVoC,IAAK0F,EAAK1F,IACVm3D,UAAWjkC,EAASikC,UACpBj4B,KAAMhM,EAAS6jC,SACf9oD,MAAOilB,EAASjlB,MAChBmpD,UAAW76D,KAAK6mC,aAChBnsB,WAAY1a,KAAK8b,eACjBiiB,YAAapH,EAASoH,aAAe,EACrC+8B,eAA0C,IAA3BnkC,EAASmkC,eAER96D,KAAKs6B,QAAUt6B,MAmBjC,MAdoB,UAAhBmJ,EAAKk4C,SACPya,EAAAA,EAAAA,IAAmBpiD,EAAO1Z,KAAM,SAG9BmJ,EAAKC,SACPsQ,EAAMtQ,UAENpJ,KAAKsB,MAAQtB,KAAKyD,IAClBzD,KAAKqJ,IAAMrJ,KAAKqB,MAEhBrB,KAAKsB,MAAQtB,KAAKqB,IAClBrB,KAAKqJ,IAAMrJ,KAAKyD,KAGXiW,CACT,CAKAzS,SAAAA,GACE,MAAMyS,EAAQ1Z,KAAK0Z,MACnB,IAAIpY,EAAQtB,KAAKqB,IACbgI,EAAMrJ,KAAKyD,IAIf,GAFAkY,MAAM1U,YAEFjH,KAAKiI,QAAQkX,QAAUzF,EAAM7X,OAAQ,CACvC,MAAMsd,GAAU9V,EAAM/H,GAASF,KAAKqC,IAAIiW,EAAM7X,OAAS,EAAG,GAAK,EAC/DP,GAAS6d,EACT9V,GAAO8V,EAETnf,KAAKs5D,YAAch4D,EACnBtB,KAAKg6D,UAAY3wD,EACjBrJ,KAAKu5D,YAAclwD,EAAM/H,CAC3B,CAEA0S,gBAAAA,CAAiBlL,GACf,OAAO8a,EAAAA,EAAAA,GAAa9a,EAAO9I,KAAKQ,MAAMyH,QAAQ4b,OAAQ7jB,KAAKiI,QAAQyR,MAAMyP,OAC3E,EClTa,MAAM4yC,WAAoBhC,GAcvC19B,mBAAAA,GACE,MAAM,IAACh7B,EAAG,IAAEoC,GAAOzD,KAAK8S,WAAU,GAElC9S,KAAKqB,KAAM8I,EAAAA,EAAAA,GAAS9I,GAAOA,EAAM,EACjCrB,KAAKyD,KAAM0G,EAAAA,EAAAA,GAAS1G,GAAOA,EAAM,EAGjCzD,KAAKi6D,wBACP,CAMAQ,gBAAAA,GACE,MAAM//C,EAAa1a,KAAK8b,eAClBja,EAAS6Y,EAAa1a,KAAKyc,MAAQzc,KAAKwc,OACxCuhB,GAAc1d,EAAAA,EAAAA,GAAUrgB,KAAKiI,QAAQyR,MAAMqkB,aAC3CziB,GAASZ,EAAatZ,KAAKwgB,IAAImc,GAAe38B,KAAKsgB,IAAIqc,KAAiB,KACxEmC,EAAWlgC,KAAKugC,wBAAwB,GAC9C,OAAOn/B,KAAKy2B,KAAKh2B,EAAST,KAAKC,IAAI,GAAI6+B,EAASxG,WAAape,GAC/D,CAGA7B,gBAAAA,CAAiB3Q,GACf,OAAiB,OAAVA,EAAiB+J,IAAM7S,KAAKke,oBAAoBpV,EAAQ9I,KAAKs5D,aAAet5D,KAAKu5D,YAC1F,CAEAn7C,gBAAAA,CAAiB2iB,GACf,OAAO/gC,KAAKs5D,YAAct5D,KAAKmhC,mBAAmBJ,GAAS/gC,KAAKu5D,WAClE,GACF/9C,EAAAA,EAAAA,GA7CqBugD,GAAoB,KAE3B,WAASvgD,EAAAA,EAAAA,GAFFugD,GAAoB,WAOrB,CAChBriD,MAAO,CACLmiB,SAAUmgC,EAAAA,GAAMC,WAAWC,WCPjC,MAAMC,GAAahhD,GAAK/Z,KAAKqE,OAAM22D,EAAAA,EAAAA,IAAMjhD,IACnCkhD,GAAiBA,CAAClhD,EAAGmhD,IAAMl7D,KAAKmqB,IAAI,GAAI4wC,GAAWhhD,GAAKmhD,GAE9D,SAASC,GAAQC,GAEf,OAAkB,IADHA,EAAWp7D,KAAKmqB,IAAI,GAAI4wC,GAAWK,GAEpD,CAEA,SAASC,GAAMp7D,EAAKoC,EAAKi5D,GACvB,MAAMC,EAAYv7D,KAAKmqB,IAAI,GAAImxC,GACzBp7D,EAAQF,KAAKqE,MAAMpE,EAAMs7D,GAE/B,OADYv7D,KAAKy2B,KAAKp0B,EAAMk5D,GACfr7D,CACf,CAqBA,SAASs7D,GAAclC,EAAiBmC,GAAc,IAAZ,IAACx7D,EAAG,IAAEoC,GAAIo5D,EAClDx7D,GAAMg6B,EAAAA,EAAAA,GAAgBq/B,EAAkBr5D,IAAKA,GAC7C,MAAMqY,EAAQ,GACRojD,EAASX,GAAW96D,GAC1B,IAAI07D,EAvBN,SAAkB17D,EAAKoC,GAErB,IAAIi5D,EAAWP,GADD14D,EAAMpC,GAEpB,KAAOo7D,GAAMp7D,EAAKoC,EAAKi5D,GAAY,IACjCA,IAEF,KAAOD,GAAMp7D,EAAKoC,EAAKi5D,GAAY,IACjCA,IAEF,OAAOt7D,KAAKC,IAAIq7D,EAAUP,GAAW96D,GACvC,CAaY27D,CAAS37D,EAAKoC,GACpBm3D,EAAYmC,EAAM,EAAI37D,KAAKmqB,IAAI,GAAInqB,KAAKoY,IAAIujD,IAAQ,EACxD,MAAMvC,EAAWp5D,KAAKmqB,IAAI,GAAIwxC,GACxBpiD,EAAOmiD,EAASC,EAAM37D,KAAKmqB,IAAI,GAAIuxC,GAAU,EAC7Cx7D,EAAQF,KAAKk3B,OAAOj3B,EAAMsZ,GAAQigD,GAAaA,EAC/Cz7C,EAAS/d,KAAKqE,OAAOpE,EAAMsZ,GAAQ6/C,EAAW,IAAMA,EAAW,GACrE,IAAIyC,EAAc77D,KAAKqE,OAAOnE,EAAQ6d,GAAU/d,KAAKmqB,IAAI,GAAIwxC,IACzDj0D,GAAQuyB,EAAAA,EAAAA,GAAgBq/B,EAAkBr5D,IAAKD,KAAKk3B,OAAO3d,EAAOwE,EAAS89C,EAAc77D,KAAKmqB,IAAI,GAAIwxC,IAAQnC,GAAaA,GAC/H,KAAO9xD,EAAQrF,GACbiW,EAAMvW,KAAK,CAAC2F,QAAOwuB,MAAOilC,GAAQzzD,GAAQm0D,gBACtCA,GAAe,GACjBA,EAAcA,EAAc,GAAK,GAAK,GAEtCA,IAEEA,GAAe,KACjBF,IACAE,EAAc,EACdrC,EAAYmC,GAAO,EAAI,EAAInC,GAE7B9xD,EAAQ1H,KAAKk3B,OAAO3d,EAAOwE,EAAS89C,EAAc77D,KAAKmqB,IAAI,GAAIwxC,IAAQnC,GAAaA,EAEtF,MAAMsC,GAAW7hC,EAAAA,EAAAA,GAAgBq/B,EAAkBj3D,IAAKqF,GAGxD,OAFA4Q,EAAMvW,KAAK,CAAC2F,MAAOo0D,EAAU5lC,MAAOilC,GAAQW,GAAWD,gBAEhDvjD,CACT,CAEe,MAAMyjD,WAAyBpjC,GAiB5Ch6B,WAAAA,CAAY+E,GACV6W,MAAM7W,GAGN9E,KAAKsB,WAAQhB,EAEbN,KAAKqJ,SAAM/I,EAEXN,KAAKs5D,iBAAch5D,EACnBN,KAAKu5D,YAAc,CACrB,CAEA9nD,KAAAA,CAAMgE,EAAK9L,GACT,MAAMb,EAAQixD,GAAgB/wC,UAAUvX,MAAMi/C,MAAM1wD,KAAM,CAACyV,EAAK9L,IAChE,GAAc,IAAVb,EAIJ,OAAOqB,EAAAA,EAAAA,GAASrB,IAAUA,EAAQ,EAAIA,EAAQ,KAH5C9I,KAAKo9D,OAAQ,CAIjB,CAEA/gC,mBAAAA,GACE,MAAM,IAACh7B,EAAG,IAAEoC,GAAOzD,KAAK8S,WAAU,GAElC9S,KAAKqB,KAAM8I,EAAAA,EAAAA,GAAS9I,GAAOD,KAAKqC,IAAI,EAAGpC,GAAO,KAC9CrB,KAAKyD,KAAM0G,EAAAA,EAAAA,GAAS1G,GAAOrC,KAAKqC,IAAI,EAAGA,GAAO,KAE1CzD,KAAKiI,QAAQqX,cACftf,KAAKo9D,OAAQ,GAKXp9D,KAAKo9D,OAASp9D,KAAKqB,MAAQrB,KAAK86B,iBAAkB3wB,EAAAA,EAAAA,GAASnK,KAAK46B,YAClE56B,KAAKqB,IAAMA,IAAQg7D,GAAer8D,KAAKqB,IAAK,GAAKg7D,GAAer8D,KAAKqB,KAAM,GAAKg7D,GAAer8D,KAAKqB,IAAK,IAG3GrB,KAAKi6D,wBACP,CAEAA,sBAAAA,GACE,MAAM,WAACzmD,EAAA,WAAYC,GAAczT,KAAK0T,gBACtC,IAAIrS,EAAMrB,KAAKqB,IACXoC,EAAMzD,KAAKyD,IAEf,MAAMy2D,EAAS/+C,GAAM9Z,EAAMmS,EAAanS,EAAM8Z,EACxCg/C,EAASh/C,GAAM1X,EAAMgQ,EAAahQ,EAAM0X,EAE1C9Z,IAAQoC,IACNpC,GAAO,GACT64D,EAAO,GACPC,EAAO,MAEPD,EAAOmC,GAAeh7D,GAAM,IAC5B84D,EAAOkC,GAAe54D,EAAK,MAG3BpC,GAAO,GACT64D,EAAOmC,GAAe54D,GAAM,IAE1BA,GAAO,GAET02D,EAAOkC,GAAeh7D,EAAK,IAG7BrB,KAAKqB,IAAMA,EACXrB,KAAKyD,IAAMA,CACb,CAEAg5B,UAAAA,GACE,MAAMtzB,EAAOnJ,KAAKiI,QAMZyR,EAAQkjD,GAJY,CACxBv7D,IAAKrB,KAAK46B,SACVn3B,IAAKzD,KAAK26B,UAEmC36B,MAkB/C,MAdoB,UAAhBmJ,EAAKk4C,SACPya,EAAAA,EAAAA,IAAmBpiD,EAAO1Z,KAAM,SAG9BmJ,EAAKC,SACPsQ,EAAMtQ,UAENpJ,KAAKsB,MAAQtB,KAAKyD,IAClBzD,KAAKqJ,IAAMrJ,KAAKqB,MAEhBrB,KAAKsB,MAAQtB,KAAKqB,IAClBrB,KAAKqJ,IAAMrJ,KAAKyD,KAGXiW,CACT,CAMA1F,gBAAAA,CAAiBlL,GACf,YAAiBxI,IAAVwI,EACH,KACA8a,EAAAA,EAAAA,GAAa9a,EAAO9I,KAAKQ,MAAMyH,QAAQ4b,OAAQ7jB,KAAKiI,QAAQyR,MAAMyP,OACxE,CAKAliB,SAAAA,GACE,MAAM3F,EAAQtB,KAAKqB,IAEnBsa,MAAM1U,YAENjH,KAAKs5D,aAAc8C,EAAAA,EAAAA,IAAM96D,GACzBtB,KAAKu5D,aAAc6C,EAAAA,EAAAA,IAAMp8D,KAAKyD,MAAO24D,EAAAA,EAAAA,IAAM96D,EAC7C,CAEAmY,gBAAAA,CAAiB3Q,GAIf,YAHcxI,IAAVwI,GAAiC,IAAVA,IACzBA,EAAQ9I,KAAKqB,KAED,OAAVyH,GAAkBiU,MAAMjU,GACnB+J,IAEF7S,KAAKke,mBAAmBpV,IAAU9I,KAAKqB,IAC1C,IACC+6D,EAAAA,EAAAA,IAAMtzD,GAAS9I,KAAKs5D,aAAet5D,KAAKu5D,YAC/C,CAEAn7C,gBAAAA,CAAiB2iB,GACf,MAAMC,EAAUhhC,KAAKmhC,mBAAmBJ,GACxC,OAAO3/B,KAAKmqB,IAAI,GAAIvrB,KAAKs5D,YAAct4B,EAAUhhC,KAAKu5D,YACxD,ECxNF,SAAS8D,GAAsBl0D,GAC7B,MAAMwtB,EAAWxtB,EAAKuQ,MAEtB,GAAIid,EAAS5O,SAAW5e,EAAK4e,QAAS,CACpC,MAAM2H,GAAUO,EAAAA,EAAAA,GAAU0G,EAAS8N,iBACnC,OAAO11B,EAAAA,EAAAA,GAAe4nB,EAAS6C,MAAQ7C,EAAS6C,KAAKzwB,KAAMzB,EAAAA,EAASkyB,KAAKzwB,MAAQ2mB,EAAQlT,OAE3F,OAAO,CACT,CAUA,SAAS8gD,GAAgBt7C,EAAO0K,EAAK3jB,EAAM1H,EAAKoC,GAC9C,OAAIue,IAAU3gB,GAAO2gB,IAAUve,EACtB,CACLnC,MAAOorB,EAAO3jB,EAAO,EACrBM,IAAKqjB,EAAO3jB,EAAO,GAEZiZ,EAAQ3gB,GAAO2gB,EAAQve,EACzB,CACLnC,MAAOorB,EAAM3jB,EACbM,IAAKqjB,GAIF,CACLprB,MAAOorB,EACPrjB,IAAKqjB,EAAM3jB,EAEf,CAKA,SAASw0D,GAAmBt0D,GA8B1B,MAAM8R,EAAO,CACX3G,EAAGnL,EAAMuL,KAAOvL,EAAMumD,SAASh7C,KAC/B5F,EAAG3F,EAAMqL,MAAQrL,EAAMumD,SAASl7C,MAChCJ,EAAGjL,EAAMoL,IAAMpL,EAAMumD,SAASn7C,IAC9BF,EAAGlL,EAAMsL,OAAStL,EAAMumD,SAASj7C,QAE7BipD,EAASp2D,OAAOe,OAAO,CAAC,EAAG4S,GAC3BqjB,EAAa,GACb1O,EAAU,GACV+tC,EAAax0D,EAAMy0D,aAAa77D,OAChC87D,EAAiB10D,EAAMhB,QAAQggB,YAC/B21C,EAAkBD,EAAeE,kBAAoBt7C,EAAAA,EAAKk7C,EAAa,EAE7E,IAAK,IAAIr7D,EAAI,EAAGA,EAAIq7D,EAAYr7D,IAAK,CACnC,MAAM+G,EAAOw0D,EAAeziC,WAAWjyB,EAAM60D,qBAAqB17D,IAClEstB,EAAQttB,GAAK+G,EAAKumB,QAClB,MAAMrH,EAAgBpf,EAAM80D,iBAAiB37D,EAAG6G,EAAM+0D,YAActuC,EAAQttB,GAAIw7D,GAC1EK,GAASxkC,EAAAA,EAAAA,IAAOtwB,EAAKqwB,MACrBi2B,GA9EgB3iD,EA8EY7D,EAAM6D,IA9Eb0sB,EA8EkBykC,EA9EZlqD,EA8EoB9K,EAAMy0D,aAAat7D,GA7E1E2R,GAAQnM,EAAAA,EAAAA,GAAQmM,GAASA,EAAQ,CAACA,GAC3B,CACL0a,GAAGyvC,EAAAA,EAAAA,IAAapxD,EAAK0sB,EAAKgH,OAAQzsB,GAClC4a,EAAG5a,EAAMlS,OAAS23B,EAAKE,aA2EvB0E,EAAWh8B,GAAKqtD,EAEhB,MAAMvwB,GAAemnB,EAAAA,EAAAA,IAAgBp9C,EAAMwe,cAAcrlB,GAAKw7D,GACxD57C,EAAQ5gB,KAAKk3B,OAAMsG,EAAAA,EAAAA,GAAUM,IAGnCi/B,GAAaX,EAAQziD,EAAMmkB,EAFXo+B,GAAgBt7C,EAAOqG,EAAc3Z,EAAG+gD,EAAShhC,EAAG,EAAG,KACvD6uC,GAAgBt7C,EAAOqG,EAAc1Z,EAAG8gD,EAAS9gC,EAAG,GAAI,KAE1E,CAtFF,IAA0B7hB,EAAK0sB,EAAMzlB,EAwFnC9K,EAAMm1D,eACJrjD,EAAK3G,EAAIopD,EAAOppD,EAChBopD,EAAO5uD,EAAImM,EAAKnM,EAChBmM,EAAK7G,EAAIspD,EAAOtpD,EAChBspD,EAAOrpD,EAAI4G,EAAK5G,GAIlBlL,EAAMo1D,iBA6DR,SAA8Bp1D,EAAOm1B,EAAY1O,GAC/C,MAAMxtB,EAAQ,GACRu7D,EAAax0D,EAAMy0D,aAAa77D,OAChCsH,EAAOF,EAAMhB,SACb,kBAAC41D,EAAiB,QAAE91C,GAAW5e,EAAK8e,YACpCq2C,EAAW,CACfC,MAAOlB,GAAsBl0D,GAAQ,EACrCy0D,gBAAiBC,EAAoBt7C,EAAAA,EAAKk7C,EAAa,GAEzD,IAAI3oD,EAEJ,IAAK,IAAI1S,EAAI,EAAGA,EAAIq7D,EAAYr7D,IAAK,CACnCk8D,EAAS5uC,QAAUA,EAAQttB,GAC3Bk8D,EAASv1D,KAAOq1B,EAAWh8B,GAE3B,MAAMD,EAAOq8D,GAAqBv1D,EAAO7G,EAAGk8D,GAC5Cp8D,EAAMiB,KAAKhB,GACK,SAAZ4lB,IACF5lB,EAAKozC,QAAUkpB,GAAgBt8D,EAAM2S,GACjC3S,EAAKozC,UACPzgC,EAAO3S,GAGb,CACA,OAAOD,CACT,CAtF2Bw8D,CAAqBz1D,EAAOm1B,EAAY1O,EACnE,CAEA,SAASyuC,GAAaX,EAAQziD,EAAMiH,EAAO28C,EAASC,GAClD,MAAMh9C,EAAMxgB,KAAKoY,IAAIpY,KAAKwgB,IAAII,IACxBN,EAAMtgB,KAAKoY,IAAIpY,KAAKsgB,IAAIM,IAC9B,IAAItT,EAAI,EACJC,EAAI,EACJgwD,EAAQr9D,MAAQyZ,EAAK3G,GACvB1F,GAAKqM,EAAK3G,EAAIuqD,EAAQr9D,OAASsgB,EAC/B47C,EAAOppD,EAAIhT,KAAKC,IAAIm8D,EAAOppD,EAAG2G,EAAK3G,EAAI1F,IAC9BiwD,EAAQt1D,IAAM0R,EAAKnM,IAC5BF,GAAKiwD,EAAQt1D,IAAM0R,EAAKnM,GAAKgT,EAC7B47C,EAAO5uD,EAAIxN,KAAKqC,IAAI+5D,EAAO5uD,EAAGmM,EAAKnM,EAAIF,IAErCkwD,EAAQt9D,MAAQyZ,EAAK7G,GACvBvF,GAAKoM,EAAK7G,EAAI0qD,EAAQt9D,OAASogB,EAC/B87C,EAAOtpD,EAAI9S,KAAKC,IAAIm8D,EAAOtpD,EAAG6G,EAAK7G,EAAIvF,IAC9BiwD,EAAQv1D,IAAM0R,EAAK5G,IAC5BxF,GAAKiwD,EAAQv1D,IAAM0R,EAAK5G,GAAKuN,EAC7B87C,EAAOrpD,EAAI/S,KAAKqC,IAAI+5D,EAAOrpD,EAAG4G,EAAK5G,EAAIxF,GAE3C,CAEA,SAAS6vD,GAAqBv1D,EAAOU,EAAO20D,GAC1C,MAAMO,EAAgB51D,EAAM+0D,aACtB,MAACO,EAAA,gBAAOX,EAAA,QAAiBluC,EAAO,KAAE3mB,GAAQu1D,EAC1CQ,EAAqB71D,EAAM80D,iBAAiBp0D,EAAOk1D,EAAgBN,EAAQ7uC,EAASkuC,GACpF57C,EAAQ5gB,KAAKk3B,OAAMsG,EAAAA,EAAAA,IAAUynB,EAAAA,EAAAA,IAAgByY,EAAmB98C,MAAQK,EAAAA,KACxE1T,EA8ER,SAAmBA,EAAGggB,EAAG3M,GACT,KAAVA,GAA0B,MAAVA,EAClBrT,GAAMggB,EAAI,GACD3M,EAAQ,KAAOA,EAAQ,MAChCrT,GAAKggB,GAEP,OAAOhgB,CACT,CArFYowD,CAAUD,EAAmBnwD,EAAG5F,EAAK4lB,EAAG3M,GAC5CyhB,EA0DR,SAA8BzhB,GAC5B,GAAc,IAAVA,GAAyB,MAAVA,EACjB,MAAO,SACF,GAAIA,EAAQ,IACjB,MAAO,OAGT,MAAO,OACT,CAlEoBg9C,CAAqBh9C,GACjCxN,EAmER,SAA0B9F,EAAG+f,EAAGmL,GAChB,UAAVA,EACFlrB,GAAK+f,EACc,WAAVmL,IACTlrB,GAAM+f,EAAI,GAEZ,OAAO/f,CACT,CA1EeuwD,CAAiBH,EAAmBpwD,EAAG3F,EAAK0lB,EAAGgV,GAC5D,MAAO,CAEL8R,SAAS,EAGT7mC,EAAGowD,EAAmBpwD,EACtBC,IAGA80B,YAGAjvB,OACAH,IAAK1F,EACL2F,MAAOE,EAAOzL,EAAK0lB,EACnBla,OAAQ5F,EAAI5F,EAAK4lB,EAErB,CAEA,SAAS8vC,GAAgBt8D,EAAM2S,GAC7B,IAAKA,EACH,OAAO,EAET,MAAM,KAACN,EAAA,IAAMH,EAAA,MAAKC,EAAK,OAAEC,GAAUpS,EAGnC,SAFqByoB,EAAAA,EAAAA,GAAe,CAAClc,EAAG8F,EAAM7F,EAAG0F,GAAMS,KAAS8V,EAAAA,EAAAA,GAAe,CAAClc,EAAG8F,EAAM7F,EAAG4F,GAASO,KACnG8V,EAAAA,EAAAA,GAAe,CAAClc,EAAG4F,EAAO3F,EAAG0F,GAAMS,KAAS8V,EAAAA,EAAAA,GAAe,CAAClc,EAAG4F,EAAO3F,EAAG4F,GAASO,GAEtF,CAyDA,SAASoqD,GAAkBpyD,EAAK3D,EAAMhH,GACpC,MAAM,KAACqS,EAAA,IAAMH,EAAA,MAAKC,EAAK,OAAEC,GAAUpS,GAC7B,cAACuiC,GAAiBv7B,EAExB,KAAK+S,EAAAA,EAAAA,GAAcwoB,GAAgB,CACjC,MAAMoV,GAAe4H,EAAAA,EAAAA,IAAcv4C,EAAK2wC,cAClCpqB,GAAUO,EAAAA,EAAAA,GAAU9mB,EAAKs7B,iBAC/B33B,EAAIiY,UAAY2f,EAEhB,MAAMy6B,EAAe3qD,EAAOkb,EAAQlb,KAC9B4qD,EAAc/qD,EAAMqb,EAAQrb,IAC5BgrD,EAAgB/qD,EAAQE,EAAOkb,EAAQjT,MACvC6iD,EAAiB/qD,EAASF,EAAMqb,EAAQlT,OAE1CpV,OAAOW,OAAO+xC,GAAcjN,MAAK1xB,GAAW,IAANA,KACxCrO,EAAI04B,aACJod,EAAAA,EAAAA,IAAmB91C,EAAK,CACtB4B,EAAGywD,EACHxwD,EAAGywD,EACH3wC,EAAG4wC,EACH1wC,EAAG2wC,EACH9/C,OAAQs6B,IAEVhtC,EAAIoB,QAEJpB,EAAIi4B,SAASo6B,EAAcC,EAAaC,EAAeC,GAG7D,CA+BA,SAASC,GAAet2D,EAAOuW,EAAQwI,EAAU+rC,GAC/C,MAAM,IAACjnD,GAAO7D,EACd,GAAI+e,EAEFlb,EAAI4W,IAAIza,EAAMqe,QAASre,EAAMse,QAAS/H,EAAQ,EAAGkB,EAAAA,OAC5C,CAEL,IAAI2H,EAAgBpf,EAAM80D,iBAAiB,EAAGv+C,GAC9C1S,EAAI24B,OAAOpd,EAAc3Z,EAAG2Z,EAAc1Z,GAE1C,IAAK,IAAIvM,EAAI,EAAGA,EAAI2xD,EAAY3xD,IAC9BimB,EAAgBpf,EAAM80D,iBAAiB37D,EAAGod,GAC1C1S,EAAI44B,OAAOrd,EAAc3Z,EAAG2Z,EAAc1Z,GAGhD,ED/EA6M,EAAAA,EAAAA,GAxJqB2hD,GAAyB,KAEhC,gBAAc3hD,EAAAA,EAAAA,GAFP2hD,GAAyB,WAO1B,CAChBzjD,MAAO,CACLmiB,SAAUmgC,EAAAA,GAAMC,WAAWuD,YAC3BloC,MAAO,CACLC,SAAS,MC6PF,MAAMkoC,WAA0B1F,GA0E7Ch6D,WAAAA,CAAY+E,GACV6W,MAAM7W,GAGN9E,KAAKsnB,aAAUhnB,EAEfN,KAAKunB,aAAUjnB,EAEfN,KAAKg+D,iBAAc19D,EAEnBN,KAAK09D,aAAe,GACpB19D,KAAKq+D,iBAAmB,EAC1B,CAEAniC,aAAAA,GAEE,MAAMxM,EAAU1vB,KAAKwvD,UAAWv/B,EAAAA,EAAAA,GAAUotC,GAAsBr9D,KAAKiI,SAAW,GAC1EwmB,EAAIzuB,KAAKyc,MAAQzc,KAAK0iB,SAAWgN,EAAQjT,MACzCkS,EAAI3uB,KAAKwc,OAASxc,KAAK2iB,UAAY+M,EAAQlT,OACjDxc,KAAKsnB,QAAUlmB,KAAKqE,MAAMzF,KAAKwU,KAAOia,EAAI,EAAIiB,EAAQlb,MACtDxU,KAAKunB,QAAUnmB,KAAKqE,MAAMzF,KAAKqU,IAAMsa,EAAI,EAAIe,EAAQrb,KACrDrU,KAAKg+D,YAAc58D,KAAKqE,MAAMrE,KAAKC,IAAIotB,EAAGE,GAAK,EACjD,CAEA0N,mBAAAA,GACE,MAAM,IAACh7B,EAAG,IAAEoC,GAAOzD,KAAK8S,WAAU,GAElC9S,KAAKqB,KAAM8I,EAAAA,EAAAA,GAAS9I,KAAS0b,MAAM1b,GAAOA,EAAM,EAChDrB,KAAKyD,KAAM0G,EAAAA,EAAAA,GAAS1G,KAASsZ,MAAMtZ,GAAOA,EAAM,EAGhDzD,KAAKi6D,wBACP,CAMAQ,gBAAAA,GACE,OAAOr5D,KAAKy2B,KAAK73B,KAAKg+D,YAAcX,GAAsBr9D,KAAKiI,SACjE,CAEA21B,kBAAAA,CAAmBlkB,GACjBqgD,GAAgB/wC,UAAU4U,mBAAmBn8B,KAAKzB,KAAM0Z,GAGxD1Z,KAAK09D,aAAe19D,KAAKmS,YACtByS,KAAI,CAAC9b,EAAOa,KACX,MAAMoK,GAAQ8nB,EAAAA,EAAAA,GAAa77B,KAAKiI,QAAQggB,YAAY4T,SAAU,CAAC/yB,EAAOa,GAAQ3J,MAC9E,OAAO+T,GAAmB,IAAVA,EAAcA,EAAQ,EAAE,IAEzC3H,QAAO,CAAC+O,EAAG/Y,IAAMpC,KAAKQ,MAAMud,kBAAkB3b,IACnD,CAEA+6B,GAAAA,GACE,MAAMh0B,EAAOnJ,KAAKiI,QAEdkB,EAAK4e,SAAW5e,EAAK8e,YAAYF,QACnCw1C,GAAmBv9D,MAEnBA,KAAKo+D,eAAe,EAAG,EAAG,EAAG,EAEjC,CAEAA,cAAAA,CAAesB,EAAcC,EAAeC,EAAaC,GACvD7/D,KAAKsnB,SAAWlmB,KAAKqE,OAAOi6D,EAAeC,GAAiB,GAC5D3/D,KAAKunB,SAAWnmB,KAAKqE,OAAOm6D,EAAcC,GAAkB,GAC5D7/D,KAAKg+D,aAAe58D,KAAKC,IAAIrB,KAAKg+D,YAAc,EAAG58D,KAAKqC,IAAIi8D,EAAcC,EAAeC,EAAaC,GACxG,CAEAp4C,aAAAA,CAAc9d,GACZ,MAAMm2D,EAAkBp/C,EAAAA,GAAO1gB,KAAK09D,aAAa77D,QAAU,GACrD0f,EAAavhB,KAAKiI,QAAQsZ,YAAc,EAE9C,OAAO8kC,EAAAA,EAAAA,IAAgB18C,EAAQm2D,GAAkBz/C,EAAAA,EAAAA,GAAUkB,GAC7D,CAEAsG,6BAAAA,CAA8B/e,GAC5B,IAAIoT,EAAAA,EAAAA,GAAcpT,GAChB,OAAO+J,IAIT,MAAMktD,EAAgB//D,KAAKg+D,aAAeh+D,KAAKyD,IAAMzD,KAAKqB,KAC1D,OAAIrB,KAAKiI,QAAQmB,SACPpJ,KAAKyD,IAAMqF,GAASi3D,GAEtBj3D,EAAQ9I,KAAKqB,KAAO0+D,CAC9B,CAEAC,6BAAAA,CAA8Br0C,GAC5B,IAAIzP,EAAAA,EAAAA,GAAcyP,GAChB,OAAO9Y,IAGT,MAAMotD,EAAiBt0C,GAAY3rB,KAAKg+D,aAAeh+D,KAAKyD,IAAMzD,KAAKqB,MACvE,OAAOrB,KAAKiI,QAAQmB,QAAUpJ,KAAKyD,IAAMw8D,EAAiBjgE,KAAKqB,IAAM4+D,CACvE,CAEAnC,oBAAAA,CAAqBn0D,GACnB,MAAMse,EAAcjoB,KAAK09D,cAAgB,GAEzC,GAAI/zD,GAAS,GAAKA,EAAQse,EAAYpmB,OAAQ,CAC5C,MAAMq+D,EAAaj4C,EAAYte,GAC/B,OA1LN,SAAiC2L,EAAQ3L,EAAOoK,GAC9C,OAAOwB,EAAAA,EAAAA,GAAcD,EAAQ,CAC3BvB,QACApK,QACAhJ,KAAM,cAEV,CAoLaw/D,CAAwBngE,KAAKuR,aAAc5H,EAAOu2D,GAE7D,CAEAnC,gBAAAA,CAAiBp0D,EAAOy2D,GAAyC,IAArBxC,EAAAh8D,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,GAAAA,UAAA,GAAkB,EAC5D,MAAMogB,EAAQhiB,KAAKynB,cAAc9d,GAAS0Y,EAAAA,EAAUu7C,EACpD,MAAO,CACLlvD,EAAGtN,KAAKsgB,IAAIM,GAASo+C,EAAqBpgE,KAAKsnB,QAC/C3Y,EAAGvN,KAAKwgB,IAAII,GAASo+C,EAAqBpgE,KAAKunB,QAC/CvF,QAEJ,CAEAsG,wBAAAA,CAAyB3e,EAAOb,GAC9B,OAAO9I,KAAK+9D,iBAAiBp0D,EAAO3J,KAAK6nB,8BAA8B/e,GACzE,CAEAu3D,eAAAA,CAAgB12D,GACd,OAAO3J,KAAKsoB,yBAAyB3e,GAAS,EAAG3J,KAAKohC,eACxD,CAEAk/B,qBAAAA,CAAsB32D,GACpB,MAAM,KAAC6K,EAAA,IAAMH,EAAA,MAAKC,EAAK,OAAEC,GAAUvU,KAAKq+D,iBAAiB10D,GACzD,MAAO,CACL6K,OACAH,MACAC,QACAC,SAEJ,CAKAswB,cAAAA,GACE,MAAM,gBAAC7f,EAAiB5F,MAAM,SAAC4I,IAAahoB,KAAKiI,QACjD,GAAI+c,EAAiB,CACnB,MAAMlY,EAAM9M,KAAK8M,IACjBA,EAAIg4B,OACJh4B,EAAI04B,YACJ+5B,GAAev/D,KAAMA,KAAK6nB,8BAA8B7nB,KAAKg6D,WAAYhyC,EAAUhoB,KAAK09D,aAAa77D,QACrGiL,EAAIovC,YACJpvC,EAAIiY,UAAYC,EAChBlY,EAAIoB,OACJpB,EAAIk4B,UAER,CAKAE,QAAAA,GACE,MAAMp4B,EAAM9M,KAAK8M,IACX3D,EAAOnJ,KAAKiI,SACZ,WAAC6f,EAAU,KAAE1I,EAAA,OAAMuH,GAAUxd,EAC7B4qD,EAAa/zD,KAAK09D,aAAa77D,OAErC,IAAIO,EAAG+c,EAAQiL,EAmBf,GAjBIjhB,EAAK8e,YAAYF,SA1TzB,SAAyB9e,EAAO8qD,GAC9B,MAAM,IAACjnD,EAAK7E,SAAS,YAACggB,IAAgBhf,EAEtC,IAAK,IAAI7G,EAAI2xD,EAAa,EAAG3xD,GAAK,EAAGA,IAAK,CACxC,MAAMD,EAAO8G,EAAMo1D,iBAAiBj8D,GACpC,IAAKD,EAAKozC,QAER,SAEF,MAAM3S,EAAc3a,EAAYiT,WAAWjyB,EAAM60D,qBAAqB17D,IACtE88D,GAAkBpyD,EAAK81B,EAAazgC,GACpC,MAAM87D,GAASxkC,EAAAA,EAAAA,IAAOmJ,EAAYpJ,OAC5B,EAAC9qB,EAAC,EAAEC,EAAA,UAAG80B,GAAathC,GAE1B+jC,EAAAA,EAAAA,GACEp5B,EACA7D,EAAMy0D,aAAat7D,GACnBsM,EACAC,EAAKsvD,EAAOvkC,WAAa,EACzBukC,EACA,CACE35D,MAAOs+B,EAAYt+B,MACnBm/B,UAAWA,EACXG,aAAc,UAGpB,CACF,CAgSM28B,CAAgBvgE,KAAM+zD,GAGpB30C,EAAK2I,SACP/nB,KAAK0Z,MAAM1Y,SAAQ,CAACwB,EAAMmH,KACxB,GAAc,IAAVA,GAA0B,IAAVA,GAAe3J,KAAKqB,IAAM,EAAI,CAChD8d,EAASnf,KAAK6nB,8BAA8BrlB,EAAKsG,OACjD,MAAMuM,EAAUrV,KAAKuR,WAAW5H,GAC1Bi5B,EAAcxjB,EAAK8b,WAAW7lB,GAC9BwtB,EAAoBlc,EAAOuU,WAAW7lB,IAtRtD,SAAwBpM,EAAOu3D,EAAchhD,EAAQu0C,EAAYpyB,GAC/D,MAAM70B,EAAM7D,EAAM6D,IACZkb,EAAWw4C,EAAax4C,UAExB,MAAC1jB,EAAA,UAAO8gB,GAAao7C,GAErBx4C,IAAa+rC,IAAgBzvD,IAAU8gB,GAAa5F,EAAS,IAInE1S,EAAIg4B,OACJh4B,EAAImY,YAAc3gB,EAClBwI,EAAIsY,UAAYA,EAChBtY,EAAIw4B,YAAY3D,EAAWqB,MAC3Bl2B,EAAIy4B,eAAiB5D,EAAWuB,WAEhCp2B,EAAI04B,YACJ+5B,GAAet2D,EAAOuW,EAAQwI,EAAU+rC,GACxCjnD,EAAIovC,YACJpvC,EAAI64B,SACJ74B,EAAIk4B,UACN,CAmQUy7B,CAAezgE,KAAM4iC,EAAazjB,EAAQ40C,EAAYlxB,OAKxD/a,EAAWC,QAAS,CAGtB,IAFAjb,EAAIg4B,OAEC1iC,EAAI2xD,EAAa,EAAG3xD,GAAK,EAAGA,IAAK,CACpC,MAAMwgC,EAAc9a,EAAWoT,WAAWl7B,KAAK89D,qBAAqB17D,KAC9D,MAACkC,EAAA,UAAO8gB,GAAawd,EAEtBxd,GAAc9gB,IAInBwI,EAAIsY,UAAYA,EAChBtY,EAAImY,YAAc3gB,EAElBwI,EAAIw4B,YAAY1C,EAAYG,YAC5Bj2B,EAAIy4B,eAAiB3C,EAAYK,iBAEjC9jB,EAASnf,KAAK6nB,8BAA8B1e,EAAKuQ,MAAMtQ,QAAUpJ,KAAKqB,IAAMrB,KAAKyD,KACjF2mB,EAAWpqB,KAAK+9D,iBAAiB37D,EAAG+c,GACpCrS,EAAI04B,YACJ14B,EAAI24B,OAAOzlC,KAAKsnB,QAAStnB,KAAKunB,SAC9Bza,EAAI44B,OAAOtb,EAAS1b,EAAG0b,EAASzb,GAChC7B,EAAI64B,SACN,CAEA74B,EAAIk4B,UAER,CAKAa,UAAAA,GAAc,CAKdE,UAAAA,GACE,MAAMj5B,EAAM9M,KAAK8M,IACX3D,EAAOnJ,KAAKiI,QACZ0uB,EAAWxtB,EAAKuQ,MAEtB,IAAKid,EAAS5O,QACZ,OAGF,MAAMxG,EAAavhB,KAAKynB,cAAc,GACtC,IAAItI,EAAQ1C,EAEZ3P,EAAIg4B,OACJh4B,EAAIowC,UAAUl9C,KAAKsnB,QAAStnB,KAAKunB,SACjCza,EAAI4zD,OAAOn/C,GACXzU,EAAI22B,UAAY,SAChB32B,EAAI82B,aAAe,SAEnB5jC,KAAK0Z,MAAM1Y,SAAQ,CAACwB,EAAMmH,KACxB,GAAe,IAAVA,GAAe3J,KAAKqB,KAAO,IAAO8H,EAAKC,QAC1C,OAGF,MAAMw5B,EAAcjM,EAASuE,WAAWl7B,KAAKuR,WAAW5H,IAClDu2B,GAAWzG,EAAAA,EAAAA,IAAOmJ,EAAYpJ,MAGpC,GAFAra,EAASnf,KAAK6nB,8BAA8B7nB,KAAK0Z,MAAM/P,GAAOb,OAE1D85B,EAAY2B,kBAAmB,CACjCz3B,EAAI0sB,KAAO0G,EAASM,OACpB/jB,EAAQ3P,EAAIi/C,YAAYvpD,EAAKuR,OAAO0I,MACpC3P,EAAIiY,UAAY6d,EAAY8B,cAE5B,MAAMhV,GAAUO,EAAAA,EAAAA,GAAU2S,EAAY6B,iBACtC33B,EAAIi4B,UACDtoB,EAAQ,EAAIiT,EAAQlb,MACpB2K,EAAS+gB,EAASn3B,KAAO,EAAI2mB,EAAQrb,IACtCoI,EAAQiT,EAAQjT,MAChByjB,EAASn3B,KAAO2mB,EAAQlT,SAI5B0pB,EAAAA,EAAAA,GAAWp5B,EAAKtK,EAAKuR,MAAO,GAAIoL,EAAQ+gB,EAAU,CAChD57B,MAAOs+B,EAAYt+B,MACnB2/B,YAAarB,EAAYsB,gBACzBC,YAAavB,EAAYwB,iBACzB,IAGJt3B,EAAIk4B,SACN,CAKAoB,SAAAA,GAAa,GACf5qB,EAAAA,EAAAA,GA1VqBikD,GAA0B,KAEjC,iBAAejkD,EAAAA,EAAAA,GAFRikD,GAA0B,WAO3B,CAChB13C,SAAS,EAGT44C,SAAS,EACTv2C,SAAU,YAEVtC,WAAY,CACVC,SAAS,EACT3C,UAAW,EACX2d,WAAY,GACZE,iBAAkB,GAGpB7jB,KAAM,CACJ4I,UAAU,GAGZzG,WAAY,EAGZ7H,MAAO,CAEL6qB,mBAAmB,EAEnB1I,SAAUmgC,EAAAA,GAAMC,WAAWC,SAG7Bj0C,YAAa,CACXyc,mBAAepkC,EAGfmkC,gBAAiB,EAGjB1c,SAAS,EAGTyR,KAAM,CACJzwB,KAAM,IAIR8yB,SAAS9nB,GACAA,EAIT2b,QAAS,EAGTmuC,mBAAmB,MAErBriD,EAAAA,EAAAA,GA5DiBikD,GAA0B,gBA8DtB,CACrB,mBAAoB,cACpB,oBAAqB,QACrB,cAAe,WACfjkD,EAAAA,EAAAA,GAlEiBikD,GAA0B,cAoExB,CACnB33C,WAAY,CACVixC,UAAW,UCxYjB,MAAM6H,GAAY,CAChBC,YAAa,CAACC,QAAQ,EAAM/3D,KAAM,EAAG0zD,MAAO,KAC5CsE,OAAQ,CAACD,QAAQ,EAAM/3D,KAAM,IAAM0zD,MAAO,IAC1CuE,OAAQ,CAACF,QAAQ,EAAM/3D,KAAM,IAAO0zD,MAAO,IAC3CwE,KAAM,CAACH,QAAQ,EAAM/3D,KAAM,KAAS0zD,MAAO,IAC3CyE,IAAK,CAACJ,QAAQ,EAAM/3D,KAAM,MAAU0zD,MAAO,IAC3C0E,KAAM,CAACL,QAAQ,EAAO/3D,KAAM,OAAW0zD,MAAO,GAC9C2E,MAAO,CAACN,QAAQ,EAAM/3D,KAAM,OAAS0zD,MAAO,IAC5C4E,QAAS,CAACP,QAAQ,EAAO/3D,KAAM,OAAS0zD,MAAO,GAC/C6E,KAAM,CAACR,QAAQ,EAAM/3D,KAAM,SAMvBw4D,GAA6Cn6D,OAAOC,KAAKu5D,IAM/D,SAASY,GAAOroD,EAAGhF,GACjB,OAAOgF,EAAIhF,CACb,CAOA,SAAS1C,GAAMxI,EAAOw4D,GACpB,IAAIvlD,EAAAA,EAAAA,GAAculD,GAChB,OAAO,KAGT,MAAMC,EAAUz4D,EAAM04D,UAChB,OAACC,EAAA,MAAQtpC,EAAA,WAAOupC,GAAc54D,EAAM64D,WAC1C,IAAIh5D,EAAQ24D,EAaZ,MAXsB,oBAAXG,IACT94D,EAAQ84D,EAAO94D,KAIZqB,EAAAA,EAAAA,GAASrB,KACZA,EAA0B,kBAAX84D,EACXF,EAAQjwD,MAAM3I,EAA4B84D,GAC1CF,EAAQjwD,MAAM3I,IAGN,OAAVA,EACK,MAGLwvB,IACFxvB,EAAkB,SAAVwvB,KAAqBhS,EAAAA,EAAAA,GAASu7C,KAA8B,IAAfA,EAEjDH,EAAQr4C,QAAQvgB,EAAOwvB,GADvBopC,EAAQr4C,QAAQvgB,EAAO,UAAW+4D,KAIhC/4D,EACV,CAUA,SAASi5D,GAA0BC,EAAS3gE,EAAKoC,EAAKw+D,GACpD,MAAMv4D,EAAO63D,GAAM1/D,OAEnB,IAAK,IAAIO,EAAIm/D,GAAMvkD,QAAQglD,GAAU5/D,EAAIsH,EAAO,IAAKtH,EAAG,CACtD,MAAM8/D,EAAWtB,GAAUW,GAAMn/D,IAC3BiC,EAAS69D,EAASzF,MAAQyF,EAASzF,MAAQtpD,OAAOgvD,iBAExD,GAAID,EAASpB,QAAU1/D,KAAKy2B,MAAMp0B,EAAMpC,IAAQgD,EAAS69D,EAASn5D,QAAUk5D,EAC1E,OAAOV,GAAMn/D,EAEjB,CAEA,OAAOm/D,GAAM73D,EAAO,EACtB,CAuCA,SAAS04D,GAAQ1oD,EAAO2oD,EAAMC,GAC5B,GAAKA,GAEE,GAAIA,EAAWzgE,OAAQ,CAC5B,MAAM,GAACooB,EAAE,GAAEC,IAAMq4C,EAAAA,EAAAA,IAAQD,EAAYD,GAErC3oD,EADkB4oD,EAAWr4C,IAAOo4C,EAAOC,EAAWr4C,GAAMq4C,EAAWp4C,KACpD,QAJnBxQ,EAAM2oD,IAAQ,CAMlB,CA8BA,SAASG,GAAoBv5D,EAAOlB,EAAQ06D,GAC1C,MAAM/oD,EAAQ,GAERkL,EAAM,CAAC,EACPlb,EAAO3B,EAAOlG,OACpB,IAAIO,EAAG0G,EAEP,IAAK1G,EAAI,EAAGA,EAAIsH,IAAQtH,EACtB0G,EAAQf,EAAO3F,GACfwiB,EAAI9b,GAAS1G,EAEbsX,EAAMvW,KAAK,CACT2F,QACAwuB,OAAO,IAMX,OAAiB,IAAT5tB,GAAe+4D,EAxCzB,SAAuBx5D,EAAOyQ,EAAOkL,EAAK69C,GACxC,MAAMf,EAAUz4D,EAAM04D,SAChBhqC,GAAS+pC,EAAQr4C,QAAQ3P,EAAM,GAAG5Q,MAAO25D,GACzC9lD,EAAOjD,EAAMA,EAAM7X,OAAS,GAAGiH,MACrC,IAAIwuB,EAAO3tB,EAEX,IAAK2tB,EAAQK,EAAOL,GAAS3a,EAAM2a,GAASoqC,EAAQt+D,IAAIk0B,EAAO,EAAGmrC,GAChE94D,EAAQib,EAAI0S,GACR3tB,GAAS,IACX+P,EAAM/P,GAAO2tB,OAAQ,GAGzB,OAAO5d,CACT,CA2B8CgpD,CAAcz5D,EAAOyQ,EAAOkL,EAAK69C,GAAzC/oD,CACtC,CAEe,MAAMipD,WAAkB5oC,GAgDrCh6B,WAAAA,CAAY6I,GACV+S,MAAM/S,GAGN5I,KAAK8Y,OAAS,CACZjJ,KAAM,GACNqC,OAAQ,GACRzJ,IAAK,IAIPzI,KAAK4iE,MAAQ,MAEb5iE,KAAK6iE,gBAAaviE,EAClBN,KAAK8iE,SAAW,CAAC,EACjB9iE,KAAK+iE,aAAc,EACnB/iE,KAAK8hE,gBAAaxhE,CACpB,CAEA2oB,IAAAA,CAAKwrB,GAAsB,IAAXtrC,EAAOvH,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,GAAAA,UAAA,MACrB,MAAMygE,EAAO5tB,EAAU4tB,OAAS5tB,EAAU4tB,KAAO,CAAC,GAE5CX,EAAU1hE,KAAK2hE,SAAW,IAAIp4C,EAAekrB,EAAUlrB,SAAS7oB,MAEtEghE,EAAQz4C,KAAK9f,IAMbslC,EAAAA,EAAAA,IAAQ4zB,EAAKW,eAAgBtB,EAAQx4C,WAErClpB,KAAK8hE,WAAa,CAChBF,OAAQS,EAAKT,OACbtpC,MAAO+pC,EAAK/pC,MACZupC,WAAYQ,EAAKR,YAGnBlmD,MAAMsN,KAAKwrB,GAEXz0C,KAAK+iE,YAAc55D,EAAK85D,UAC1B,CAOAxxD,KAAAA,CAAMgE,EAAK9L,GACT,YAAYrJ,IAARmV,EACK,KAEFhE,GAAMzR,KAAMyV,EACrB,CAEAob,YAAAA,GACElV,MAAMkV,eACN7wB,KAAK8Y,OAAS,CACZjJ,KAAM,GACNqC,OAAQ,GACRzJ,IAAK,GAET,CAEA4zB,mBAAAA,GACE,MAAMp0B,EAAUjI,KAAKiI,QACfy5D,EAAU1hE,KAAK2hE,SACf5G,EAAO9yD,EAAQo6D,KAAKtH,MAAQ,MAElC,IAAI,IAAC15D,EAAA,IAAKoC,EAAA,WAAK+P,EAAA,WAAYC,GAAczT,KAAK0T,gBAK9C,SAASwvD,EAAa7hB,GACf7tC,GAAeuJ,MAAMskC,EAAOhgD,OAC/BA,EAAMD,KAAKC,IAAIA,EAAKggD,EAAOhgD,MAExBoS,GAAesJ,MAAMskC,EAAO59C,OAC/BA,EAAMrC,KAAKqC,IAAIA,EAAK49C,EAAO59C,KAE/B,CAGK+P,GAAeC,IAElByvD,EAAaljE,KAAKmjE,mBAIK,UAAnBl7D,EAAQo5C,QAA+C,WAAzBp5C,EAAQyR,MAAMsjB,QAC9CkmC,EAAaljE,KAAK8S,WAAU,KAIhCzR,GAAM8I,EAAAA,EAAAA,GAAS9I,KAAS0b,MAAM1b,GAAOA,GAAOqgE,EAAQr4C,QAAQvnB,KAAKC,MAAOg5D,GACxEt3D,GAAM0G,EAAAA,EAAAA,GAAS1G,KAASsZ,MAAMtZ,GAAOA,GAAOi+D,EAAQp4C,MAAMxnB,KAAKC,MAAOg5D,GAAQ,EAG9E/6D,KAAKqB,IAAMD,KAAKC,IAAIA,EAAKoC,EAAM,GAC/BzD,KAAKyD,IAAMrC,KAAKqC,IAAIpC,EAAM,EAAGoC,EAC/B,CAKA0/D,eAAAA,GACE,MAAMnrD,EAAMhY,KAAKojE,qBACjB,IAAI/hE,EAAM8R,OAAOC,kBACb3P,EAAM0P,OAAOE,kBAMjB,OAJI2E,EAAInW,SACNR,EAAM2W,EAAI,GACVvU,EAAMuU,EAAIA,EAAInW,OAAS,IAElB,CAACR,MAAKoC,MACf,CAKAg5B,UAAAA,GACE,MAAMx0B,EAAUjI,KAAKiI,QACfo7D,EAAWp7D,EAAQo6D,KACnB1rC,EAAW1uB,EAAQyR,MACnB4oD,EAAiC,WAApB3rC,EAASqG,OAAsBh9B,KAAKojE,qBAAuBpjE,KAAKsjE,YAE5D,UAAnBr7D,EAAQo5C,QAAsBihB,EAAWzgE,SAC3C7B,KAAKqB,IAAMrB,KAAK46B,UAAY0nC,EAAW,GACvCtiE,KAAKyD,IAAMzD,KAAK26B,UAAY2nC,EAAWA,EAAWzgE,OAAS,IAG7D,MAAMR,EAAMrB,KAAKqB,IACXoC,EAAMzD,KAAKyD,IAEXiW,GAAQ6pD,EAAAA,EAAAA,IAAejB,EAAYjhE,EAAKoC,GAgB9C,OAXAzD,KAAK4iE,MAAQS,EAAStI,OAASpkC,EAASD,SACpCqrC,GAA0BsB,EAASrB,QAAShiE,KAAKqB,IAAKrB,KAAKyD,IAAKzD,KAAKwjE,kBAAkBniE,IArR/F,SAAoC4H,EAAO60B,EAAUkkC,EAAS3gE,EAAKoC,GACjE,IAAK,IAAIrB,EAAIm/D,GAAM1/D,OAAS,EAAGO,GAAKm/D,GAAMvkD,QAAQglD,GAAU5/D,IAAK,CAC/D,MAAM24D,EAAOwG,GAAMn/D,GACnB,GAAIw+D,GAAU7F,GAAM+F,QAAU73D,EAAM04D,SAASv4C,KAAK3lB,EAAKpC,EAAK05D,IAASj9B,EAAW,EAC9E,OAAOi9B,CAEX,CAEA,OAAOwG,GAAMS,EAAUT,GAAMvkD,QAAQglD,GAAW,EAClD,CA6QQyB,CAA2BzjE,KAAM0Z,EAAM7X,OAAQwhE,EAASrB,QAAShiE,KAAKqB,IAAKrB,KAAKyD,MACpFzD,KAAK6iE,WAAclsC,EAASW,MAAMC,SAA0B,SAAfv3B,KAAK4iE,MAxQtD,SAA4B7H,GAC1B,IAAK,IAAI34D,EAAIm/D,GAAMvkD,QAAQ+9C,GAAQ,EAAGrxD,EAAO63D,GAAM1/D,OAAQO,EAAIsH,IAAQtH,EACrE,GAAIw+D,GAAUW,GAAMn/D,IAAI0+D,OACtB,OAAOS,GAAMn/D,EAGnB,CAmQQshE,CAAmB1jE,KAAK4iE,YADyCtiE,EAErEN,KAAK2jE,YAAYrB,GAEbr6D,EAAQmB,SACVsQ,EAAMtQ,UAGDo5D,GAAoBxiE,KAAM0Z,EAAO1Z,KAAK6iE,WAC/C,CAEA5lC,aAAAA,GAGMj9B,KAAKiI,QAAQ27D,qBACf5jE,KAAK2jE,YAAY3jE,KAAK0Z,MAAMkL,KAAIpiB,IAASA,EAAKsG,QAElD,CAUA66D,WAAAA,GAA6B,IAGvBhsC,EAAOhb,EAHD2lD,EAAa1gE,UAAAC,OAAA,QAAAvB,IAAAsB,UAAC,GAADA,UAAC,GAAD,GACnBN,EAAQ,EACR+H,EAAM,EAGNrJ,KAAKiI,QAAQkX,QAAUmjD,EAAWzgE,SACpC81B,EAAQ33B,KAAK6jE,mBAAmBvB,EAAW,IAEzChhE,EADwB,IAAtBghE,EAAWzgE,OACL,EAAI81B,GAEH33B,KAAK6jE,mBAAmBvB,EAAW,IAAM3qC,GAAS,EAE7Dhb,EAAO3c,KAAK6jE,mBAAmBvB,EAAWA,EAAWzgE,OAAS,IAE5DwH,EADwB,IAAtBi5D,EAAWzgE,OACP8a,GAECA,EAAO3c,KAAK6jE,mBAAmBvB,EAAWA,EAAWzgE,OAAS,KAAO,GAGhF,MAAM6gC,EAAQ4/B,EAAWzgE,OAAS,EAAI,GAAM,IAC5CP,GAAQo9B,EAAAA,EAAAA,GAAYp9B,EAAO,EAAGohC,GAC9Br5B,GAAMq1B,EAAAA,EAAAA,GAAYr1B,EAAK,EAAGq5B,GAE1B1iC,KAAK8iE,SAAW,CAACxhE,QAAO+H,MAAKhF,OAAQ,GAAK/C,EAAQ,EAAI+H,GACxD,CASAi6D,SAAAA,GACE,MAAM5B,EAAU1hE,KAAK2hE,SACftgE,EAAMrB,KAAKqB,IACXoC,EAAMzD,KAAKyD,IACXwE,EAAUjI,KAAKiI,QACfo7D,EAAWp7D,EAAQo6D,KAEnByB,EAAQT,EAAStI,MAAQgH,GAA0BsB,EAASrB,QAAS3gE,EAAKoC,EAAKzD,KAAKwjE,kBAAkBniE,IACtGm5D,GAAWzrD,EAAAA,EAAAA,GAAe9G,EAAQyR,MAAM8gD,SAAU,GAClDuJ,EAAoB,SAAVD,GAAmBT,EAASxB,WACtCmC,GAAa19C,EAAAA,EAAAA,GAASy9C,KAAwB,IAAZA,EAClCrqD,EAAQ,CAAC,EACf,IACI2oD,EAAM3wD,EADNimB,EAAQt2B,EAYZ,GARI2iE,IACFrsC,GAAS+pC,EAAQr4C,QAAQsO,EAAO,UAAWosC,IAI7CpsC,GAAS+pC,EAAQr4C,QAAQsO,EAAOqsC,EAAa,MAAQF,GAGjDpC,EAAQt4C,KAAK3lB,EAAKpC,EAAKyiE,GAAS,IAAStJ,EAC3C,MAAM,IAAI5xC,MAAMvnB,EAAM,QAAUoC,EAAM,uCAAyC+2D,EAAW,IAAMsJ,GAGlG,MAAMxB,EAAsC,SAAzBr6D,EAAQyR,MAAMsjB,QAAqBh9B,KAAKikE,oBAC3D,IAAK5B,EAAO1qC,EAAOjmB,EAAQ,EAAG2wD,EAAO5+D,EAAK4+D,GAAQX,EAAQt+D,IAAIi/D,EAAM7H,EAAUsJ,GAAQpyD,IACpF0wD,GAAQ1oD,EAAO2oD,EAAMC,GAQvB,OALID,IAAS5+D,GAA0B,UAAnBwE,EAAQo5C,QAAgC,IAAV3vC,GAChD0wD,GAAQ1oD,EAAO2oD,EAAMC,GAIhBl7D,OAAOC,KAAKqS,GAAOR,KAAKsoD,IAAQ58C,KAAIlW,IAAMA,GACnD,CAMAsF,gBAAAA,CAAiBlL,GACf,MAAM44D,EAAU1hE,KAAK2hE,SACf0B,EAAWrjE,KAAKiI,QAAQo6D,KAE9B,OAAIgB,EAASa,cACJxC,EAAQv4C,OAAOrgB,EAAOu6D,EAASa,eAEjCxC,EAAQv4C,OAAOrgB,EAAOu6D,EAASL,eAAemB,SACvD,CAOAh7C,MAAAA,CAAOrgB,EAAOqgB,GACZ,MACMD,EADUlpB,KAAKiI,QACGo6D,KAAKW,eACvBjI,EAAO/6D,KAAK4iE,MACZwB,EAAMj7C,GAAUD,EAAQ6xC,GAC9B,OAAO/6D,KAAK2hE,SAASx4C,OAAOrgB,EAAOs7D,EACrC,CAWAC,mBAAAA,CAAoBhC,EAAM14D,EAAO+P,EAAOyP,GACtC,MAAMlhB,EAAUjI,KAAKiI,QACfq8D,EAAYr8D,EAAQyR,MAAMmiB,SAEhC,GAAIyoC,EACF,OAAOzoC,EAAAA,EAAAA,GAAKyoC,EAAW,CAACjC,EAAM14D,EAAO+P,GAAQ1Z,MAG/C,MAAMkpB,EAAUjhB,EAAQo6D,KAAKW,eACvBjI,EAAO/6D,KAAK4iE,MACZH,EAAYziE,KAAK6iE,WACjB0B,EAAcxJ,GAAQ7xC,EAAQ6xC,GAC9ByJ,EAAc/B,GAAav5C,EAAQu5C,GACnCjgE,EAAOkX,EAAM/P,GACb2tB,EAAQmrC,GAAa+B,GAAehiE,GAAQA,EAAK80B,MAEvD,OAAOt3B,KAAK2hE,SAASx4C,OAAOk5C,EAAMl5C,IAAWmO,EAAQktC,EAAcD,GACrE,CAKA3mC,kBAAAA,CAAmBlkB,GACjB,IAAItX,EAAGsH,EAAMlH,EAEb,IAAKJ,EAAI,EAAGsH,EAAOgQ,EAAM7X,OAAQO,EAAIsH,IAAQtH,EAC3CI,EAAOkX,EAAMtX,GACbI,EAAKuR,MAAQ/T,KAAKqkE,oBAAoB7hE,EAAKsG,MAAO1G,EAAGsX,EAEzD,CAMAmqD,kBAAAA,CAAmB/6D,GACjB,OAAiB,OAAVA,EAAiB+J,KAAO/J,EAAQ9I,KAAKqB,MAAQrB,KAAKyD,IAAMzD,KAAKqB,IACtE,CAMAoY,gBAAAA,CAAiB3Q,GACf,MAAM27D,EAAUzkE,KAAK8iE,SACfp2C,EAAM1sB,KAAK6jE,mBAAmB/6D,GACpC,OAAO9I,KAAKke,oBAAoBumD,EAAQnjE,MAAQorB,GAAO+3C,EAAQpgE,OACjE,CAMA+Z,gBAAAA,CAAiB2iB,GACf,MAAM0jC,EAAUzkE,KAAK8iE,SACfp2C,EAAM1sB,KAAKmhC,mBAAmBJ,GAAS0jC,EAAQpgE,OAASogE,EAAQp7D,IACtE,OAAOrJ,KAAKqB,IAAMqrB,GAAO1sB,KAAKyD,IAAMzD,KAAKqB,IAC3C,CAOAqjE,aAAAA,CAAc3wD,GACZ,MAAM4wD,EAAY3kE,KAAKiI,QAAQyR,MACzBkrD,EAAiB5kE,KAAK8M,IAAIi/C,YAAYh4C,GAAO0I,MAC7CuF,GAAQ3B,EAAAA,EAAAA,GAAUrgB,KAAK8b,eAAiB6oD,EAAU3mC,YAAc2mC,EAAU5mC,aAC1E8mC,EAAczjE,KAAKsgB,IAAIM,GACvB8iD,EAAc1jE,KAAKwgB,IAAII,GACvB+iD,EAAe/kE,KAAKugC,wBAAwB,GAAGx3B,KAErD,MAAO,CACL0lB,EAAIm2C,EAAiBC,EAAgBE,EAAeD,EACpDn2C,EAAIi2C,EAAiBE,EAAgBC,EAAeF,EAExD,CAOArB,iBAAAA,CAAkBwB,GAChB,MAAM3B,EAAWrjE,KAAKiI,QAAQo6D,KACxBW,EAAiBK,EAASL,eAG1B75C,EAAS65C,EAAeK,EAAStI,OAASiI,EAAenC,YACzDoE,EAAejlE,KAAKqkE,oBAAoBW,EAAa,EAAGxC,GAAoBxiE,KAAM,CAACglE,GAAchlE,KAAK6iE,YAAa15C,GACnHpgB,EAAO/I,KAAK0kE,cAAcO,GAG1BhD,EAAW7gE,KAAKqE,MAAMzF,KAAK8b,eAAiB9b,KAAKyc,MAAQ1T,EAAK0lB,EAAIzuB,KAAKwc,OAASzT,EAAK4lB,GAAK,EAChG,OAAOszC,EAAW,EAAIA,EAAW,CACnC,CAKAgC,iBAAAA,GACE,IACI7hE,EAAGsH,EADH44D,EAAatiE,KAAK8Y,OAAOjJ,MAAQ,GAGrC,GAAIyyD,EAAWzgE,OACb,OAAOygE,EAGT,MAAMhnC,EAAQt7B,KAAKgL,0BAEnB,GAAIhL,KAAK+iE,aAAeznC,EAAMz5B,OAC5B,OAAQ7B,KAAK8Y,OAAOjJ,KAAOyrB,EAAM,GAAGpwB,WAAW0I,mBAAmB5T,MAGpE,IAAKoC,EAAI,EAAGsH,EAAO4xB,EAAMz5B,OAAQO,EAAIsH,IAAQtH,EAC3CkgE,EAAaA,EAAW12D,OAAO0vB,EAAMl5B,GAAG8I,WAAW0I,mBAAmB5T,OAGxE,OAAQA,KAAK8Y,OAAOjJ,KAAO7P,KAAKklE,UAAU5C,EAC5C,CAKAc,kBAAAA,GACE,MAAMd,EAAatiE,KAAK8Y,OAAO5G,QAAU,GACzC,IAAI9P,EAAGsH,EAEP,GAAI44D,EAAWzgE,OACb,OAAOygE,EAGT,MAAMpwD,EAASlS,KAAKmS,YACpB,IAAK/P,EAAI,EAAGsH,EAAOwI,EAAOrQ,OAAQO,EAAIsH,IAAQtH,EAC5CkgE,EAAWn/D,KAAKsO,GAAMzR,KAAMkS,EAAO9P,KAGrC,OAAQpC,KAAK8Y,OAAO5G,OAASlS,KAAK+iE,YAAcT,EAAatiE,KAAKklE,UAAU5C,EAC9E,CAMA4C,SAAAA,CAAUn9D,GAER,OAAOkR,EAAAA,EAAAA,GAAalR,EAAOmR,KAAKsoD,IAClC,ECtpBF,SAAS1hB,GAAYqlB,EAAOroD,EAAK1T,GAC/B,IAEIg8D,EAAYC,EAAYC,EAAYC,EAFpCt7C,EAAK,EACLC,EAAKi7C,EAAMtjE,OAAS,EAEpBuH,GACE0T,GAAOqoD,EAAMl7C,GAAIyC,KAAO5P,GAAOqoD,EAAMj7C,GAAIwC,OACzCzC,KAAIC,OAAMJ,EAAAA,EAAAA,GAAaq7C,EAAO,MAAOroD,MAEvC4P,IAAK04C,EAAY/C,KAAMiD,GAAcH,EAAMl7C,MAC3CyC,IAAK24C,EAAYhD,KAAMkD,GAAcJ,EAAMj7C,MAEzCpN,GAAOqoD,EAAMl7C,GAAIo4C,MAAQvlD,GAAOqoD,EAAMj7C,GAAIm4C,QAC1Cp4C,KAAIC,OAAMJ,EAAAA,EAAAA,GAAaq7C,EAAO,OAAQroD,MAExCulD,KAAM+C,EAAY14C,IAAK44C,GAAcH,EAAMl7C,MAC3Co4C,KAAMgD,EAAY34C,IAAK64C,GAAcJ,EAAMj7C,KAG/C,MAAMs7C,EAAOH,EAAaD,EAC1B,OAAOI,EAAOF,GAAcC,EAAaD,IAAexoD,EAAMsoD,GAAcI,EAAOF,CACrF,EDmoBA9pD,EAAAA,EAAAA,GA5dqBmnD,GAAkB,KAEzB,SAAOnnD,EAAAA,EAAAA,GAFAmnD,GAAkB,WAOnB,CAQhBthB,OAAQ,OAER93B,SAAU,CAAC,EACX84C,KAAM,CACJT,QAAQ,EACR7G,MAAM,EACNziC,OAAO,EACPupC,YAAY,EACZG,QAAS,cACTgB,eAAgB,CAAC,GAEnBtpD,MAAO,CASLsjB,OAAQ,OAERnB,UAAU,EAEVvE,MAAO,CACLC,SAAS,MC7MjB,MAAMkuC,WAAwB9C,GAY5B5iE,WAAAA,CAAY6I,GACV+S,MAAM/S,GAGN5I,KAAK0lE,OAAS,GAEd1lE,KAAK2lE,aAAUrlE,EAEfN,KAAK4lE,iBAActlE,CACrB,CAKAqjE,WAAAA,GACE,MAAMrB,EAAatiE,KAAK6lE,yBAClBV,EAAQnlE,KAAK0lE,OAAS1lE,KAAK8lE,iBAAiBxD,GAClDtiE,KAAK2lE,QAAU7lB,GAAYqlB,EAAOnlE,KAAKqB,KACvCrB,KAAK4lE,YAAc9lB,GAAYqlB,EAAOnlE,KAAKyD,KAAOzD,KAAK2lE,QACvDhqD,MAAMgoD,YAAYrB,EACpB,CAaAwD,gBAAAA,CAAiBxD,GACf,MAAM,IAACjhE,EAAG,IAAEoC,GAAOzD,KACbkC,EAAQ,GACRijE,EAAQ,GACd,IAAI/iE,EAAGsH,EAAMmI,EAAMwH,EAAMoF,EAEzB,IAAKrc,EAAI,EAAGsH,EAAO44D,EAAWzgE,OAAQO,EAAIsH,IAAQtH,EAChDiX,EAAOipD,EAAWlgE,GACdiX,GAAQhY,GAAOgY,GAAQ5V,GACzBvB,EAAMiB,KAAKkW,GAIf,GAAInX,EAAML,OAAS,EAEjB,MAAO,CACL,CAACwgE,KAAMhhE,EAAKqrB,IAAK,GACjB,CAAC21C,KAAM5+D,EAAKipB,IAAK,IAIrB,IAAKtqB,EAAI,EAAGsH,EAAOxH,EAAML,OAAQO,EAAIsH,IAAQtH,EAC3Cqc,EAAOvc,EAAME,EAAI,GACjByP,EAAO3P,EAAME,EAAI,GACjBiX,EAAOnX,EAAME,GAGThB,KAAKk3B,OAAO7Z,EAAO5M,GAAQ,KAAOwH,GACpC8rD,EAAMhiE,KAAK,CAACk/D,KAAMhpD,EAAMqT,IAAKtqB,GAAKsH,EAAO,KAG7C,OAAOy7D,CACT,CAQA7B,SAAAA,GACE,MAAMjiE,EAAMrB,KAAKqB,IACXoC,EAAMzD,KAAKyD,IACjB,IAAI6+D,EAAa3mD,MAAMsoD,oBAOvB,OANK3B,EAAWl1C,SAAS/rB,IAASihE,EAAWzgE,QAC3CygE,EAAWnqD,OAAO,EAAG,EAAG9W,GAErBihE,EAAWl1C,SAAS3pB,IAA8B,IAAtB6+D,EAAWzgE,QAC1CygE,EAAWn/D,KAAKM,GAEX6+D,EAAWppD,MAAK,CAACC,EAAGhF,IAAMgF,EAAIhF,GACvC,CAOA0xD,sBAAAA,GACE,IAAIvD,EAAatiE,KAAK8Y,OAAOrQ,KAAO,GAEpC,GAAI65D,EAAWzgE,OACb,OAAOygE,EAGT,MAAMzyD,EAAO7P,KAAKikE,oBACZlwD,EAAQ/T,KAAKojE,qBAUnB,OANEd,EAHEzyD,EAAKhO,QAAUkS,EAAMlS,OAGV7B,KAAKklE,UAAUr1D,EAAKjE,OAAOmI,IAE3BlE,EAAKhO,OAASgO,EAAOkE,EAEpCuuD,EAAatiE,KAAK8Y,OAAOrQ,IAAM65D,EAExBA,CACT,CAMAuB,kBAAAA,CAAmB/6D,GACjB,OAAQg3C,GAAY9/C,KAAK0lE,OAAQ58D,GAAS9I,KAAK2lE,SAAW3lE,KAAK4lE,WACjE,CAMAxnD,gBAAAA,CAAiB2iB,GACf,MAAM0jC,EAAUzkE,KAAK8iE,SACf9hC,EAAUhhC,KAAKmhC,mBAAmBJ,GAAS0jC,EAAQpgE,OAASogE,EAAQp7D,IAC1E,OAAOy2C,GAAY9/C,KAAK0lE,OAAQ1kC,EAAUhhC,KAAK4lE,YAAc5lE,KAAK2lE,SAAS,EAC7E,GACFnqD,EAAAA,EAAAA,GA7IMiqD,GAAwB,KAEhB,eAAajqD,EAAAA,EAAAA,GAFrBiqD,GAAwB,WAOV9C,GAAUr7D,gBCrBjBy+D,GAAgB,CAC3Bj9B,EACAj0B,GACA2P,6JChBF,SAAS8T,EAAMnd,GACb,OAAOA,EAAI,GAAM,CACnB,y+BACA,MAAM6qD,EAAMA,CAAC7qD,EAAG/G,EAAGua,IAAMvtB,KAAKqC,IAAIrC,KAAKC,IAAI8Z,EAAGwT,GAAIva,GAClD,SAAS6xD,EAAI9qD,GACX,OAAO6qD,EAAI1tC,EAAU,KAAJnd,GAAW,EAAG,IACjC,CAIA,SAAS+qD,EAAI/qD,GACX,OAAO6qD,EAAI1tC,EAAU,IAAJnd,GAAU,EAAG,IAChC,CACA,SAASgrD,EAAIhrD,GACX,OAAO6qD,EAAI1tC,EAAMnd,EAAI,MAAQ,IAAK,EAAG,EACvC,CACA,SAASirD,EAAIjrD,GACX,OAAO6qD,EAAI1tC,EAAU,IAAJnd,GAAU,EAAG,IAChC,CAEA,MAAMkrD,EAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAGC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIxtD,EAAG,GAAIhF,EAAG,GAAI49B,EAAG,GAAI3D,EAAG,GAAI9oB,EAAG,GAAIshD,EAAG,IACrJC,EAAM,IAAI,oBACVC,EAAK3yD,GAAK0yD,EAAQ,GAAJ1yD,GACd4yD,EAAK5yD,GAAK0yD,GAAS,IAAJ1yD,IAAa,GAAK0yD,EAAQ,GAAJ1yD,GACrC6yD,EAAK7yD,IAAW,IAAJA,IAAa,KAAY,GAAJA,GAyBvC,SAASxP,EAAUwW,GACjB,IAAIyrD,EAzBUzrD,IAAK6rD,EAAG7rD,EAAEvM,IAAMo4D,EAAG7rD,EAAE8rD,IAAMD,EAAG7rD,EAAEhH,IAAM6yD,EAAG7rD,EAAEhC,GAyBjD+tD,CAAQ/rD,GAAK2rD,EAAKC,EAC1B,OAAO5rD,EACH,IAAMyrD,EAAEzrD,EAAEvM,GAAKg4D,EAAEzrD,EAAE8rD,GAAKL,EAAEzrD,EAAEhH,GAJpB2mC,EAAC3hC,EAAGytD,IAAMztD,EAAI,IAAMytD,EAAEztD,GAAK,GAIF2hC,CAAM3/B,EAAEhC,EAAGytD,QAC5CtmE,CACN,CAEA,MAAM6mE,EAAS,+GACf,SAASC,EAASz4C,EAAG04C,EAAGjzD,GACtB,MAAM+E,EAAIkuD,EAAIjmE,KAAKC,IAAI+S,EAAG,EAAIA,GACxBwyD,EAAI,SAACU,GAAC,IAAE/jB,EAAC3hD,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,GAAAA,UAAA,IAAI0lE,EAAI34C,EAAI,IAAM,GAAE,OAAKva,EAAI+E,EAAI/X,KAAKqC,IAAIrC,KAAKC,IAAIkiD,EAAI,EAAG,EAAIA,EAAG,IAAK,EAAE,EACvF,MAAO,CAACqjB,EAAE,GAAIA,EAAE,GAAIA,EAAE,GACxB,CACA,SAASW,EAAS54C,EAAG04C,EAAGlsD,GACtB,MAAMyrD,EAAI,SAACU,GAAC,IAAE/jB,EAAC3hD,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,GAAAA,UAAA,IAAI0lE,EAAI34C,EAAI,IAAM,EAAC,OAAKxT,EAAIA,EAAIksD,EAAIjmE,KAAKqC,IAAIrC,KAAKC,IAAIkiD,EAAG,EAAIA,EAAG,GAAI,EAAE,EACrF,MAAO,CAACqjB,EAAE,GAAIA,EAAE,GAAIA,EAAE,GACxB,CACA,SAASY,EAAS74C,EAAGF,EAAGta,GACtB,MAAMszD,EAAML,EAASz4C,EAAG,EAAG,IAC3B,IAAIvsB,EAMJ,IALIqsB,EAAIta,EAAI,IACV/R,EAAI,GAAKqsB,EAAIta,GACbsa,GAAKrsB,EACL+R,GAAK/R,GAEFA,EAAI,EAAGA,EAAI,EAAGA,IACjBqlE,EAAIrlE,IAAM,EAAIqsB,EAAIta,EAClBszD,EAAIrlE,IAAMqsB,EAEZ,OAAOg5C,CACT,CAUA,SAASC,EAAQvsD,GACf,MACMvM,EAAIuM,EAAEvM,EADE,IAERq4D,EAAI9rD,EAAE8rD,EAFE,IAGR9yD,EAAIgH,EAAEhH,EAHE,IAIR1Q,EAAMrC,KAAKqC,IAAImL,EAAGq4D,EAAG9yD,GACrB9S,EAAMD,KAAKC,IAAIuN,EAAGq4D,EAAG9yD,GACrBC,GAAK3Q,EAAMpC,GAAO,EACxB,IAAIstB,EAAG04C,EAAGj5B,EAOV,OANI3qC,IAAQpC,IACV+sC,EAAI3qC,EAAMpC,EACVgmE,EAAIjzD,EAAI,GAAMg6B,GAAK,EAAI3qC,EAAMpC,GAAO+sC,GAAK3qC,EAAMpC,GAC/CstB,EArBJ,SAAkB/f,EAAGq4D,EAAG9yD,EAAGi6B,EAAG3qC,GAC5B,OAAImL,IAAMnL,GACCwjE,EAAI9yD,GAAKi6B,GAAM64B,EAAI9yD,EAAI,EAAI,GAElC8yD,IAAMxjE,GACA0Q,EAAIvF,GAAKw/B,EAAI,GAEfx/B,EAAIq4D,GAAK74B,EAAI,CACvB,CAaQu5B,CAAS/4D,EAAGq4D,EAAG9yD,EAAGi6B,EAAG3qC,GACzBkrB,EAAQ,GAAJA,EAAS,IAER,CAAK,EAAJA,EAAO04C,GAAK,EAAGjzD,EACzB,CACA,SAASwzD,EAAMhB,EAAGztD,EAAGhF,EAAG49B,GACtB,OACEthC,MAAM7I,QAAQuR,GACVytD,EAAEztD,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAChBytD,EAAEztD,EAAGhF,EAAG49B,IACZntB,IAAIshD,EACR,CACA,SAAS2B,EAAQl5C,EAAG04C,EAAGjzD,GACrB,OAAOwzD,EAAMR,EAAUz4C,EAAG04C,EAAGjzD,EAC/B,CAOA,SAAS0zD,EAAIn5C,GACX,OAAQA,EAAI,IAAM,KAAO,GAC3B,CACA,SAASo5C,EAASnX,GAChB,MAAM0L,EAAI6K,EAAOa,KAAKpX,GACtB,IACIz1C,EADAhC,EAAI,IAER,IAAKmjD,EACH,OAEEA,EAAE,KAAOnhD,IACXhC,EAAImjD,EAAE,GAAK2J,GAAK3J,EAAE,IAAM4J,GAAK5J,EAAE,KAEjC,MAAM3tC,EAAIm5C,GAAKxL,EAAE,IACXl3B,GAAMk3B,EAAE,GAAK,IACbj3B,GAAMi3B,EAAE,GAAK,IAQnB,OANEnhD,EADW,QAATmhD,EAAE,GAtBR,SAAiB3tC,EAAGF,EAAGta,GACrB,OAAOyzD,EAAMJ,EAAU74C,EAAGF,EAAGta,EAC/B,CAqBQ8zD,CAAQt5C,EAAGyW,EAAIC,GACD,QAATi3B,EAAE,GArBf,SAAiB3tC,EAAG04C,EAAGlsD,GACrB,OAAOysD,EAAML,EAAU54C,EAAG04C,EAAGlsD,EAC/B,CAoBQ+sD,CAAQv5C,EAAGyW,EAAIC,GAEfwiC,EAAQl5C,EAAGyW,EAAIC,GAEd,CACLz2B,EAAGuM,EAAE,GACL8rD,EAAG9rD,EAAE,GACLhH,EAAGgH,EAAE,GACLhC,EAAGA,EAEP,CAsBA,MAAMyL,EAAM,CACVlW,EAAG,OACHy5D,EAAG,QACHC,EAAG,KACHC,EAAG,MACHC,EAAG,KACHC,EAAG,SACHC,EAAG,QACHlC,EAAG,KACHmC,EAAG,KACHC,EAAG,KACHnC,EAAG,KACHC,EAAG,QACHC,EAAG,QACHkC,EAAG,KACHC,EAAG,WACHlC,EAAG,KACHmC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,QACHtC,EAAG,KACHuC,EAAG,KACHC,EAAG,OACHC,EAAG,KACHC,EAAG,QACHC,EAAG,MAECC,EAAU,CACdC,OAAQ,SACRC,YAAa,SACbC,KAAM,OACNC,UAAW,SACXC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,MAAO,IACPC,aAAc,SACdC,GAAI,KACJC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,SAAU,SACVC,QAAS,SACTC,IAAK,SACLC,YAAa,SACbC,QAAS,SACTC,QAAS,SACTC,KAAM,OACNC,IAAK,KACLC,MAAO,OACPC,QAAS,SACTC,KAAM,SACNC,KAAM,OACNC,KAAM,SACNC,OAAQ,SACRC,QAAS,SACTC,SAAU,SACVC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,IAAK,OACLC,OAAQ,SACRC,OAAQ,SACRC,SAAU,OACVC,OAAQ,SACRC,OAAQ,SACRC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,OAAQ,SACRC,QAAS,SACTC,UAAW,SACXC,IAAK,SACLC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,IAAK,SACLC,QAAS,SACTC,OAAQ,SACRC,QAAS,SACTC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,UAAW,SACXC,QAAS,SACTC,WAAY,SACZC,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,UAAW,SACXC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,IAAK,SACLC,KAAM,OACNC,QAAS,SACTC,IAAK,SACLC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,IAAK,KACLC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,UAAW,OACXC,IAAK,SACLC,SAAU,SACVC,WAAY,SACZC,QAAS,SACTC,SAAU,SACVC,QAAS,SACTC,WAAY,SACZC,KAAM,KACNC,OAAQ,SACRC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,UAAW,SACXC,QAAS,SACTC,KAAM,SACNC,IAAK,SACLC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,YAAa,SACbC,GAAI,SACJC,SAAU,SACVC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,QAAS,SACTC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,SAAU,OACVC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,OAAQ,SACRC,GAAI,SACJC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,UAAW,SACXC,GAAI,SACJC,MAAO,UAmBT,IAAIv8D,EACJ,SAASw8D,EAAUhiB,GACZx6C,IACHA,EApBJ,WACE,MAAMy8D,EAAW,CAAC,EACZxrE,EAAOD,OAAOC,KAAKkiE,GACnBuJ,EAAQ1rE,OAAOC,KAAKud,GAC1B,IAAIxiB,EAAGmoB,EAAGg5B,EAAGwvB,EAAIC,EACjB,IAAK5wE,EAAI,EAAGA,EAAIiF,EAAKxF,OAAQO,IAAK,CAEhC,IADA2wE,EAAKC,EAAK3rE,EAAKjF,GACVmoB,EAAI,EAAGA,EAAIuoD,EAAMjxE,OAAQ0oB,IAC5Bg5B,EAAIuvB,EAAMvoD,GACVyoD,EAAKA,EAAGjwB,QAAQQ,EAAG3+B,EAAI2+B,IAEzBA,EAAI0vB,SAAS1J,EAAQwJ,GAAK,IAC1BF,EAASG,GAAM,CAACzvB,GAAK,GAAK,IAAMA,GAAK,EAAI,IAAU,IAAJA,EACjD,CACA,OAAOsvB,CACT,CAKYK,GACR98D,EAAMpS,YAAc,CAAC,EAAG,EAAG,EAAG,IAEhC,MAAMmV,EAAI/C,EAAMw6C,EAAIljB,eACpB,OAAOv0B,GAAK,CACVvK,EAAGuK,EAAE,GACL8tD,EAAG9tD,EAAE,GACLhF,EAAGgF,EAAE,GACLA,EAAgB,IAAbA,EAAEtX,OAAesX,EAAE,GAAK,IAE/B,CAEA,MAAMg6D,EAAS,uGAiCf,MAAM/uE,EAAK+W,GAAKA,GAAK,SAAgB,MAAJA,EAAqC,MAAzB/Z,KAAKmqB,IAAIpQ,EAAG,EAAM,KAAe,KACxEhX,EAAOgX,GAAKA,GAAK,OAAUA,EAAI,MAAQ/Z,KAAKmqB,KAAKpQ,EAAI,MAAS,MAAO,KAa3E,SAASi4D,EAAOj4D,EAAG/Y,EAAGkZ,GACpB,GAAIH,EAAG,CACL,IAAIk4D,EAAM3L,EAAQvsD,GAClBk4D,EAAIjxE,GAAKhB,KAAKqC,IAAI,EAAGrC,KAAKC,IAAIgyE,EAAIjxE,GAAKixE,EAAIjxE,GAAKkZ,EAAa,IAANlZ,EAAU,IAAM,IACvEixE,EAAMxL,EAAQwL,GACdl4D,EAAEvM,EAAIykE,EAAI,GACVl4D,EAAE8rD,EAAIoM,EAAI,GACVl4D,EAAEhH,EAAIk/D,EAAI,EACZ,CACF,CACA,SAASC,EAAMn4D,EAAGksB,GAChB,OAAOlsB,EAAI/T,OAAOe,OAAOk/B,GAAS,CAAC,EAAGlsB,GAAKA,CAC7C,CACA,SAASo4D,EAAW9R,GAClB,IAAItmD,EAAI,CAACvM,EAAG,EAAGq4D,EAAG,EAAG9yD,EAAG,EAAGgF,EAAG,KAY9B,OAXI1I,MAAM7I,QAAQ65D,GACZA,EAAM5/D,QAAU,IAClBsZ,EAAI,CAACvM,EAAG6yD,EAAM,GAAIwF,EAAGxF,EAAM,GAAIttD,EAAGstD,EAAM,GAAItoD,EAAG,KAC3CsoD,EAAM5/D,OAAS,IACjBsZ,EAAEhC,EAAI+sD,EAAIzE,EAAM,OAIpBtmD,EAAIm4D,EAAM7R,EAAO,CAAC7yD,EAAG,EAAGq4D,EAAG,EAAG9yD,EAAG,EAAGgF,EAAG,KACrCA,EAAI+sD,EAAI/qD,EAAEhC,GAEPgC,CACT,CACA,SAASq4D,EAAc5iB,GACrB,MAAsB,MAAlBA,EAAI/nD,OAAO,GA3EjB,SAAkB+nD,GAChB,MAAM0L,EAAI6W,EAAOnL,KAAKpX,GACtB,IACIhiD,EAAGq4D,EAAG9yD,EADNgF,EAAI,IAER,GAAKmjD,EAAL,CAGA,GAAIA,EAAE,KAAO1tD,EAAG,CACd,MAAMuM,GAAKmhD,EAAE,GACbnjD,EAAImjD,EAAE,GAAK2J,EAAI9qD,GAAK6qD,EAAQ,IAAJ7qD,EAAS,EAAG,IACtC,CAOA,OANAvM,GAAK0tD,EAAE,GACP2K,GAAK3K,EAAE,GACPnoD,GAAKmoD,EAAE,GACP1tD,EAAI,KAAO0tD,EAAE,GAAK2J,EAAIr3D,GAAKo3D,EAAIp3D,EAAG,EAAG,MACrCq4D,EAAI,KAAO3K,EAAE,GAAK2J,EAAIgB,GAAKjB,EAAIiB,EAAG,EAAG,MACrC9yD,EAAI,KAAOmoD,EAAE,GAAK2J,EAAI9xD,GAAK6xD,EAAI7xD,EAAG,EAAG,MAC9B,CACLvF,EAAGA,EACHq4D,EAAGA,EACH9yD,EAAGA,EACHgF,EAAGA,EAfL,CAiBF,CAqDWs6D,CAAS7iB,GAEXmX,EAASnX,EAClB,CACA,MAAM8iB,EACJ3zE,WAAAA,CAAY0hE,GACV,GAAIA,aAAiBiS,EACnB,OAAOjS,EAET,MAAM9gE,SAAc8gE,EACpB,IAAItmD,EACS,WAATxa,EACFwa,EAAIo4D,EAAW9R,GACG,WAAT9gE,IACTwa,EAjcN,SAAkBy1C,GAChB,IACIn6B,EADAuB,EAAM44B,EAAI/uD,OAmBd,MAjBe,MAAX+uD,EAAI,KACM,IAAR54B,GAAqB,IAARA,EACfvB,EAAM,CACJ7nB,EAAG,IAAsB,GAAhBy3D,EAAMzV,EAAI,IACnBqW,EAAG,IAAsB,GAAhBZ,EAAMzV,EAAI,IACnBz8C,EAAG,IAAsB,GAAhBkyD,EAAMzV,EAAI,IACnBz3C,EAAW,IAAR6e,EAA4B,GAAhBquC,EAAMzV,EAAI,IAAW,KAErB,IAAR54B,GAAqB,IAARA,IACtBvB,EAAM,CACJ7nB,EAAGy3D,EAAMzV,EAAI,KAAO,EAAIyV,EAAMzV,EAAI,IAClCqW,EAAGZ,EAAMzV,EAAI,KAAO,EAAIyV,EAAMzV,EAAI,IAClCz8C,EAAGkyD,EAAMzV,EAAI,KAAO,EAAIyV,EAAMzV,EAAI,IAClCz3C,EAAW,IAAR6e,EAAaquC,EAAMzV,EAAI,KAAO,EAAIyV,EAAMzV,EAAI,IAAO,OAIrDn6B,CACT,CA4aUk9C,CAASlS,IAAUmR,EAAUnR,IAAU+R,EAAc/R,IAE3DzhE,KAAK4zE,KAAOz4D,EACZnb,KAAK6zE,SAAW14D,CAClB,CACA,SAAI1W,GACF,OAAOzE,KAAK6zE,MACd,CACA,OAAIpM,GACF,IAAItsD,EAAIm4D,EAAMtzE,KAAK4zE,MAInB,OAHIz4D,IACFA,EAAEhC,EAAIgtD,EAAIhrD,EAAEhC,IAEPgC,CACT,CACA,OAAIssD,CAAI/rD,GACN1b,KAAK4zE,KAAOL,EAAW73D,EACzB,CACAo4D,SAAAA,GACE,OAAO9zE,KAAK6zE,QArFG14D,EAqFgBnb,KAAK4zE,QAnFpCz4D,EAAEhC,EAAI,IAAG,QAAAvN,OACGuP,EAAEvM,EAAC,MAAAhD,OAAKuP,EAAE8rD,EAAC,MAAAr7D,OAAKuP,EAAEhH,EAAC,MAAAvI,OAAKu6D,EAAIhrD,EAAEhC,GAAE,YAAAvN,OACjCuP,EAAEvM,EAAC,MAAAhD,OAAKuP,EAAE8rD,EAAC,MAAAr7D,OAAKuP,EAAEhH,EAAC,WAiFc7T,EArFhD,IAAmB6a,CAsFjB,CACAxW,SAAAA,GACE,OAAO3E,KAAK6zE,OAASlvE,EAAU3E,KAAK4zE,WAAQtzE,CAC9C,CACAyzE,SAAAA,GACE,OAAO/zE,KAAK6zE,OApVhB,SAAmB14D,GACjB,IAAKA,EACH,OAEF,MAAMhC,EAAIuuD,EAAQvsD,GACZwT,EAAIxV,EAAE,GACNkuD,EAAIjB,EAAIjtD,EAAE,IACV/E,EAAIgyD,EAAIjtD,EAAE,IAChB,OAAOgC,EAAEhC,EAAI,IAAG,QAAAvN,OACJ+iB,EAAC,MAAA/iB,OAAKy7D,EAAC,OAAAz7D,OAAMwI,EAAC,OAAAxI,OAAMu6D,EAAIhrD,EAAEhC,GAAE,YAAAvN,OAC7B+iB,EAAC,MAAA/iB,OAAKy7D,EAAC,OAAAz7D,OAAMwI,EAAC,KAC3B,CAyUyB2/D,CAAU/zE,KAAK4zE,WAAQtzE,CAC9C,CACAoE,GAAAA,CAAIJ,EAAO6f,GACT,GAAI7f,EAAO,CACT,MAAME,EAAKxE,KAAKynE,IACVuM,EAAK1vE,EAAMmjE,IACjB,IAAIwM,EACJ,MAAMjjC,EAAI7sB,IAAW8vD,EAAK,GAAM9vD,EAC1BsK,EAAI,EAAIuiB,EAAI,EACZ73B,EAAI3U,EAAG2U,EAAI66D,EAAG76D,EACd+6D,IAAOzlD,EAAItV,KAAO,EAAIsV,GAAKA,EAAItV,IAAM,EAAIsV,EAAItV,IAAM,GAAK,EAC9D86D,EAAK,EAAIC,EACT1vE,EAAGoK,EAAI,IAAOslE,EAAK1vE,EAAGoK,EAAIqlE,EAAKD,EAAGplE,EAAI,GACtCpK,EAAGyiE,EAAI,IAAOiN,EAAK1vE,EAAGyiE,EAAIgN,EAAKD,EAAG/M,EAAI,GACtCziE,EAAG2P,EAAI,IAAO+/D,EAAK1vE,EAAG2P,EAAI8/D,EAAKD,EAAG7/D,EAAI,GACtC3P,EAAG2U,EAAI63B,EAAIxsC,EAAG2U,GAAK,EAAI63B,GAAKgjC,EAAG76D,EAC/BnZ,KAAKynE,IAAMjjE,CACb,CACA,OAAOxE,IACT,CACA8/C,WAAAA,CAAYx7C,EAAO4P,GAIjB,OAHI5P,IACFtE,KAAK4zE,KAvGX,SAAqBO,EAAMC,EAAMlgE,GAC/B,MAAMtF,EAAIzK,EAAKgiE,EAAIgO,EAAKvlE,IAClBq4D,EAAI9iE,EAAKgiE,EAAIgO,EAAKlN,IAClB9yD,EAAIhQ,EAAKgiE,EAAIgO,EAAKhgE,IACxB,MAAO,CACLvF,EAAGs3D,EAAI9hE,EAAGwK,EAAIsF,GAAK/P,EAAKgiE,EAAIiO,EAAKxlE,IAAMA,KACvCq4D,EAAGf,EAAI9hE,EAAG6iE,EAAI/yD,GAAK/P,EAAKgiE,EAAIiO,EAAKnN,IAAMA,KACvC9yD,EAAG+xD,EAAI9hE,EAAG+P,EAAID,GAAK/P,EAAKgiE,EAAIiO,EAAKjgE,IAAMA,KACvCgF,EAAGg7D,EAAKh7D,EAAIjF,GAAKkgE,EAAKj7D,EAAIg7D,EAAKh7D,GAEnC,CA6FkB2mC,CAAY9/C,KAAK4zE,KAAMtvE,EAAMsvE,KAAM1/D,IAE1ClU,IACT,CACAszE,KAAAA,GACE,OAAO,IAAII,EAAM1zE,KAAKynE,IACxB,CACA3sB,KAAAA,CAAM3hC,GAEJ,OADAnZ,KAAK4zE,KAAKz6D,EAAI+sD,EAAI/sD,GACXnZ,IACT,CACAq0E,OAAAA,CAAQ/4D,GAGN,OAFYtb,KAAK4zE,KACbz6D,GAAK,EAAImC,EACNtb,IACT,CACAs0E,SAAAA,GACE,MAAM7M,EAAMznE,KAAK4zE,KACX92D,EAAMwb,EAAc,GAARmvC,EAAI74D,EAAkB,IAAR64D,EAAIR,EAAmB,IAARQ,EAAItzD,GAEnD,OADAszD,EAAI74D,EAAI64D,EAAIR,EAAIQ,EAAItzD,EAAI2I,EACjB9c,IACT,CACAu0E,OAAAA,CAAQj5D,GAGN,OAFYtb,KAAK4zE,KACbz6D,GAAK,EAAImC,EACNtb,IACT,CACAw0E,MAAAA,GACE,MAAMr5D,EAAInb,KAAK4zE,KAIf,OAHAz4D,EAAEvM,EAAI,IAAMuM,EAAEvM,EACduM,EAAE8rD,EAAI,IAAM9rD,EAAE8rD,EACd9rD,EAAEhH,EAAI,IAAMgH,EAAEhH,EACPnU,IACT,CACAy0E,OAAAA,CAAQn5D,GAEN,OADA83D,EAAOpzE,KAAK4zE,KAAM,EAAGt4D,GACdtb,IACT,CACA00E,MAAAA,CAAOp5D,GAEL,OADA83D,EAAOpzE,KAAK4zE,KAAM,GAAIt4D,GACftb,IACT,CACA20E,QAAAA,CAASr5D,GAEP,OADA83D,EAAOpzE,KAAK4zE,KAAM,EAAGt4D,GACdtb,IACT,CACA40E,UAAAA,CAAWt5D,GAET,OADA83D,EAAOpzE,KAAK4zE,KAAM,GAAIt4D,GACftb,IACT,CACA0gE,MAAAA,CAAOmU,GAEL,OAtaJ,SAAgB15D,EAAG05D,GACjB,IAAIlmD,EAAI+4C,EAAQvsD,GAChBwT,EAAE,GAAKm5C,EAAIn5C,EAAE,GAAKkmD,GAClBlmD,EAAIk5C,EAAQl5C,GACZxT,EAAEvM,EAAI+f,EAAE,GACRxT,EAAE8rD,EAAIt4C,EAAE,GACRxT,EAAEhH,EAAIwa,EAAE,EACV,CA8ZI+xC,CAAO1gE,KAAK4zE,KAAMiB,GACX70E,IACT,EC3jBK,SAAS6zD,IACJ,CAML,MAAMlhB,EAAO,MAClB,IAAI9mC,EAAK,EACT,MAAO,IAAMA,GACd,EAHmB,GAUb,SAASqQ,EAAcpT,GAC5B,OAAiB,OAAVA,GAAmC,qBAAVA,CAClC,CAOO,SAASlB,EAAqBkB,GACnC,GAAI2H,MAAM7I,SAAW6I,MAAM7I,QAAQkB,GACjC,OAAO,EAET,MAAMnI,EAAOyG,OAAO4hB,UAAU8rD,SAASrzE,KAAKqH,GAC5C,MAAyB,YAArBnI,EAAKu0C,MAAM,EAAG,IAAuC,WAAnBv0C,EAAKu0C,OAAO,EAIpD,CAOO,SAAShuC,EAAS4B,GACvB,OAAiB,OAAVA,GAA4D,oBAA1C1B,OAAO4hB,UAAU8rD,SAASrzE,KAAKqH,EAC1D,CAMA,SAASqB,EAAerB,GACtB,OAAyB,kBAAVA,GAAsBA,aAAiBqK,SAAWumD,UAAU5wD,EAC7E,CAUO,SAASuyB,EAAgBvyB,EAAgBisE,GAC9C,OAAO5qE,EAAerB,GAASA,EAAQisE,CACzC,CAOO,SAAShmE,EAAkBjG,EAAsBisE,GACtD,MAAwB,qBAAVjsE,EAAwBisE,EAAejsE,CACvD,OAEaoY,EAAeA,CAACpY,EAAwBksE,IAClC,kBAAVlsE,GAAsBA,EAAMmsE,SAAS,KAC1C5tB,WAAWv+C,GAAS,KACjBA,EAAQksE,EAEFnyD,EAAcA,CAAC/Z,EAAwBksE,IACjC,kBAAVlsE,GAAsBA,EAAMmsE,SAAS,KAC1C5tB,WAAWv+C,GAAS,IAAMksE,GACvBlsE,EASA,SAAS+yB,EACd56B,EACAoX,EACA68D,GAEA,GAAIj0E,GAAyB,oBAAZA,EAAGQ,KAClB,OAAOR,EAAGyvD,MAAMwkB,EAAS78D,EAE7B,CAuBO,SAASuY,EACdukD,EACAl0E,EACAi0E,EACA9rE,GAEA,IAAIhH,EAAW41B,EAAa3wB,EAC5B,GAAIO,EAAQutE,GAEV,GADAn9C,EAAMm9C,EAAStzE,OACXuH,EACF,IAAKhH,EAAI41B,EAAM,EAAG51B,GAAK,EAAGA,IACxBnB,EAAGQ,KAAKyzE,EAASC,EAAS/yE,GAAIA,QAGhC,IAAKA,EAAI,EAAGA,EAAI41B,EAAK51B,IACnBnB,EAAGQ,KAAKyzE,EAASC,EAAS/yE,GAAIA,QAG7B,GAAI8E,EAASiuE,GAGlB,IAFA9tE,EAAOD,OAAOC,KAAK8tE,GACnBn9C,EAAM3wB,EAAKxF,OACNO,EAAI,EAAGA,EAAI41B,EAAK51B,IACnBnB,EAAGQ,KAAKyzE,EAASC,EAAS9tE,EAAKjF,IAAKiF,EAAKjF,GAG/C,CAQO,SAASu2C,EAAey8B,EAAuBC,GACpD,IAAIjzE,EAAWsH,EAAcojB,EAAqB9R,EAElD,IAAKo6D,IAAOC,GAAMD,EAAGvzE,SAAWwzE,EAAGxzE,OACjC,OAAO,EAGT,IAAKO,EAAI,EAAGsH,EAAO0rE,EAAGvzE,OAAQO,EAAIsH,IAAQtH,EAIxC,GAHA0qB,EAAKsoD,EAAGhzE,GACR4Y,EAAKq6D,EAAGjzE,GAEJ0qB,EAAG7iB,eAAiB+Q,EAAG/Q,cAAgB6iB,EAAGnjB,QAAUqR,EAAGrR,MACzD,OAAO,EAIX,OAAO,CACT,CAMO,SAAS2pE,EAASt2C,GACvB,GAAIp1B,EAAQo1B,GACV,OAAOA,EAAOpY,IAAI0uD,GAGpB,GAAIpsE,EAAS81B,GAAS,CACpB,MAAMj4B,EAASqC,OAAO6/B,OAAO,MACvB5/B,EAAOD,OAAOC,KAAK21B,GACnBs4C,EAAOjuE,EAAKxF,OAClB,IAAI0hD,EAAI,EAER,KAAOA,EAAI+xB,IAAQ/xB,EACjBx+C,EAAOsC,EAAKk8C,IAAM+vB,EAAMt2C,EAAO31B,EAAKk8C,KAGtC,OAAOx+C,EAGT,OAAOi4B,CACT,CAEA,SAASu4C,EAAW7tE,GAClB,OAAmE,IAA5D,CAAC,YAAa,YAAa,eAAesV,QAAQtV,EAC3D,CAOO,SAAS8tE,EAAQ9tE,EAAa3C,EAAmBi4B,EAAmB/0B,GACzE,IAAKstE,EAAW7tE,GACd,OAGF,MAAM+tE,EAAO1wE,EAAO2C,GACdguE,EAAO14C,EAAOt1B,GAEhBR,EAASuuE,IAASvuE,EAASwuE,GAE7BhuC,EAAM+tC,EAAMC,EAAMztE,GAElBlD,EAAO2C,GAAO4rE,EAAMoC,EAExB,CA0BO,SAAShuC,EAAS3iC,EAAWi4B,EAAqB/0B,GACvD,MAAM8+C,EAAUn/C,EAAQo1B,GAAUA,EAAS,CAACA,GACtCtzB,EAAOq9C,EAAQllD,OAErB,IAAKqF,EAASnC,GACZ,OAAOA,EAIT,MAAM4wE,GADN1tE,EAAUA,GAAW,CAAC,GACC0tE,QAAUH,EACjC,IAAII,EAEJ,IAAK,IAAIxzE,EAAI,EAAGA,EAAIsH,IAAQtH,EAAG,CAE7B,GADAwzE,EAAU7uB,EAAQ3kD,IACb8E,EAAS0uE,GACZ,SAGF,MAAMvuE,EAAOD,OAAOC,KAAKuuE,GACzB,IAAK,IAAIryB,EAAI,EAAG+xB,EAAOjuE,EAAKxF,OAAQ0hD,EAAI+xB,IAAQ/xB,EAC9CoyB,EAAOtuE,EAAKk8C,GAAIx+C,EAAQ6wE,EAAS3tE,EAErC,CAEA,OAAOlD,CACT,CAgBO,SAAS0pC,EAAW1pC,EAAWi4B,GAEpC,OAAO0K,EAAS3iC,EAAQi4B,EAAQ,CAAC24C,OAAQE,IAC3C,CAMO,SAASA,GAAUnuE,EAAa3C,EAAmBi4B,GACxD,IAAKu4C,EAAW7tE,GACd,OAGF,MAAM+tE,EAAO1wE,EAAO2C,GACdguE,EAAO14C,EAAOt1B,GAEhBR,EAASuuE,IAASvuE,EAASwuE,GAC7BjnC,EAAQgnC,EAAMC,GACJtuE,OAAO4hB,UAAU8sD,eAAer0E,KAAKsD,EAAQ2C,KACvD3C,EAAO2C,GAAO4rE,EAAMoC,GAExB,CAaA,MAAMK,GAAe,CAEnB,GAAI56D,GAAKA,EAETzM,EAAGmrC,GAAKA,EAAEnrC,EACVC,EAAGkrC,GAAKA,EAAElrC,GAqCL,SAAS4D,GAAiBmJ,EAAgBhU,GAC/C,MAAMyoC,EAAW4lC,GAAaruE,KAASquE,GAAaruE,GAhBtD,SAAyBA,GACvB,MAAML,EAjBD,SAAmBK,GACxB,MAAMygC,EAAQzgC,EAAIqgC,MAAM,KAClB1gC,EAAiB,GACvB,IAAIgsE,EAAM,GACV,IAAK,MAAM2C,KAAQ7tC,EACjBkrC,GAAO2C,EACH3C,EAAI4B,SAAS,MACf5B,EAAMA,EAAIn+B,MAAM,GAAI,GAAK,KAEzB7tC,EAAKlE,KAAKkwE,GACVA,EAAM,IAGV,OAAOhsE,CACT,CAGe4uE,CAAUvuE,GACvB,OAAOgU,IACL,IAAK,MAAM6nC,KAAKl8C,EAAM,CACpB,GAAU,KAANk8C,EAGF,MAEF7nC,EAAMA,GAAOA,EAAI6nC,EACnB,CACA,OAAO7nC,CAAA,CAEX,CAG6Dw6D,CAAgBxuE,IAC3E,OAAOyoC,EAASz0B,EAClB,CAKO,SAAS8vB,GAAYolB,GAC1B,OAAOA,EAAI/nD,OAAO,GAAGstE,cAAgBvlB,EAAI1b,MAAM,EACjD,OAGaj/B,GAAWnN,GAAoC,qBAAVA,EAErC0nC,GAAc1nC,GAAsE,oBAAVA,EAG1EytC,GAAYA,CAAIp9B,EAAWhF,KACtC,GAAIgF,EAAEpQ,OAASoL,EAAEpL,KACf,OAAO,EAGT,IAAK,MAAM5G,KAAQgX,EACjB,IAAKhF,EAAE9Q,IAAIlB,GACT,OAAO,EAIX,OAAO,CAAI,EAON,SAASo3C,GAAcj0B,GAC5B,MAAkB,YAAXA,EAAE3kB,MAAiC,UAAX2kB,EAAE3kB,MAA+B,gBAAX2kB,EAAE3kB,IACzD,CCvZO,MAAM4hB,GAAKnhB,KAAKmhB,GACV7B,GAAM,EAAI6B,GACV6zD,GAAQ11D,GAAM6B,GACd8zD,GAAWljE,OAAOC,kBAClBkjE,GAAc/zD,GAAK,IACnBF,GAAUE,GAAK,EACfg0D,GAAah0D,GAAK,EAClBi0D,GAAqB,EAALj0D,GAAS,EAEzB65C,GAAQh7D,KAAKg7D,MACbhyD,GAAOhJ,KAAKgJ,KAElB,SAASqxD,GAAa/sD,EAAWC,EAAWuqB,GACjD,OAAO93B,KAAKoY,IAAI9K,EAAIC,GAAKuqB,CAC3B,CAKO,SAASqiC,GAAQ5oD,GACtB,MAAM8jE,EAAer1E,KAAKk3B,MAAM3lB,GAChCA,EAAQ8oD,GAAa9oD,EAAO8jE,EAAc9jE,EAAQ,KAAQ8jE,EAAe9jE,EACzE,MAAM+jE,EAAYt1E,KAAKmqB,IAAI,GAAInqB,KAAKqE,MAAM22D,GAAMzpD,KAC1CgkE,EAAWhkE,EAAQ+jE,EAEzB,OADqBC,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAI,IAC3DD,CACxB,CAMO,SAASv+C,GAAWrvB,GACzB,MAAM0uB,EAAmB,GACnBlM,EAAOlqB,KAAKkqB,KAAKxiB,GACvB,IAAI1G,EAEJ,IAAKA,EAAI,EAAGA,EAAIkpB,EAAMlpB,IAChB0G,EAAQ1G,IAAM,IAChBo1B,EAAOr0B,KAAKf,GACZo1B,EAAOr0B,KAAK2F,EAAQ1G,IAQxB,OALIkpB,KAAiB,EAAPA,IACZkM,EAAOr0B,KAAKmoB,GAGdkM,EAAOte,MAAK,CAACC,EAAGhF,IAAMgF,EAAIhF,IAAG1R,MACtB+0B,CACT,CAEO,SAASlR,GAASghD,GACvB,OAAQvqD,MAAMsqC,WAAWigB,KAAiB5N,SAAS4N,EACrD,CAEO,SAAS9L,GAAY9sD,EAAWwqB,GACrC,MAAM09C,EAAUx1E,KAAKk3B,MAAM5pB,GAC3B,OAAOkoE,EAAY19C,GAAYxqB,GAAQkoE,EAAU19C,GAAYxqB,CAC/D,CAKO,SAASotD,GACdrvC,EACA1nB,EACA8iC,GAEA,IAAIzlC,EAAWsH,EAAcZ,EAE7B,IAAK1G,EAAI,EAAGsH,EAAO+iB,EAAM5qB,OAAQO,EAAIsH,EAAMtH,IACzC0G,EAAQ2jB,EAAMrqB,GAAGylC,GACZ9qB,MAAMjU,KACT/D,EAAO1D,IAAMD,KAAKC,IAAI0D,EAAO1D,IAAKyH,GAClC/D,EAAOtB,IAAMrC,KAAKqC,IAAIsB,EAAOtB,IAAKqF,GAGxC,CAEO,SAASuX,GAAUw2D,GACxB,OAAOA,GAAWt0D,GAAK,IACzB,CAEO,SAASqc,GAAUk4C,GACxB,OAAOA,GAAW,IAAMv0D,GAC1B,CASO,SAASo5C,GAAejtD,GAC7B,IAAKvE,EAAeuE,GAClB,OAEF,IAAI4W,EAAI,EACJ0rB,EAAI,EACR,KAAO5vC,KAAKk3B,MAAM5pB,EAAI4W,GAAKA,IAAM5W,GAC/B4W,GAAK,GACL0rB,IAEF,OAAOA,CACT,CAGO,SAASllB,GACdirD,EACAC,GAEA,MAAMC,EAAsBD,EAAWtoE,EAAIqoE,EAAYroE,EACjDwoE,EAAsBF,EAAWroE,EAAIooE,EAAYpoE,EACjDwoE,EAA2B/1E,KAAKkqB,KAAK2rD,EAAsBA,EAAsBC,EAAsBA,GAE7G,IAAIl1D,EAAQ5gB,KAAKg2E,MAAMF,EAAqBD,GAM5C,OAJIj1D,GAAU,GAAMO,KAClBP,GAAStB,IAGJ,CACLsB,QACA2J,SAAUwrD,EAEd,CAEO,SAAS7mB,GAAsBplC,EAAYC,GAChD,OAAO/pB,KAAKkqB,KAAKlqB,KAAKmqB,IAAIJ,EAAIzc,EAAIwc,EAAIxc,EAAG,GAAKtN,KAAKmqB,IAAIJ,EAAIxc,EAAIuc,EAAIvc,EAAG,GACxE,CAMO,SAAS0oE,GAAWl+D,EAAWhF,GACpC,OAAQgF,EAAIhF,EAAIiiE,IAAS11D,GAAM6B,EACjC,CAMO,SAAS8jC,GAAgBltC,GAC9B,OAAQA,EAAIuH,GAAMA,IAAOA,EAC3B,CAKO,SAASuB,GAAcD,EAAe1gB,EAAe+H,EAAaiuE,GACvE,MAAMn+D,EAAIktC,GAAgBrkC,GACpBqlD,EAAIhhB,GAAgB/kD,GACpBgkB,EAAI+gC,GAAgBh9C,GACpBkuE,EAAelxB,GAAgBghB,EAAIluD,GACnCq+D,EAAanxB,GAAgB/gC,EAAInM,GACjCs+D,EAAepxB,GAAgBltC,EAAIkuD,GACnCqQ,EAAarxB,GAAgBltC,EAAImM,GACvC,OAAOnM,IAAMkuD,GAAKluD,IAAMmM,GAAMgyD,GAAyBjQ,IAAM/hD,GACvDiyD,EAAeC,GAAcC,EAAeC,CACpD,CASO,SAASh5C,GAAY51B,EAAezH,EAAaoC,GACtD,OAAOrC,KAAKqC,IAAIpC,EAAKD,KAAKC,IAAIoC,EAAKqF,GACrC,CAMO,SAASm4B,GAAYn4B,GAC1B,OAAO41B,GAAY51B,GAAQ,MAAO,MACpC,CASO,SAASi0C,GAAWj0C,EAAexH,EAAe+H,GAA6B,IAAhB6vB,EAAUt3B,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,GAAAA,UAAA,QAC9E,OAAOkH,GAAS1H,KAAKC,IAAIC,EAAO+H,GAAO6vB,GAAWpwB,GAAS1H,KAAKqC,IAAInC,EAAO+H,GAAO6vB,CACpF,CCpLO,SAASqpC,GACd4C,EACAr8D,EACA6uE,GAEAA,EAAMA,GAAA,CAAShuE,GAAUw7D,EAAMx7D,GAASb,GACxC,IAEI8uE,EAFA1tD,EAAKi7C,EAAMtjE,OAAS,EACpBooB,EAAK,EAGT,KAAOC,EAAKD,EAAK,GACf2tD,EAAO3tD,EAAKC,GAAO,EACfytD,EAAIC,GACN3tD,EAAK2tD,EAEL1tD,EAAK0tD,EAIT,MAAO,CAAC3tD,KAAIC,KACd,CAUO,MAAMJ,GAAeA,CAC1Bq7C,EACAz9D,EACAoB,EACA6T,IAEA4lD,GAAQ4C,EAAOr8D,EAAO6T,EAClBhT,IACA,MAAMkuE,EAAK1S,EAAMx7D,GAAOjC,GACxB,OAAOmwE,EAAK/uE,GAAS+uE,IAAO/uE,GAASq8D,EAAMx7D,EAAQ,GAAGjC,KAASoB,CAAA,EAE/Da,GAASw7D,EAAMx7D,GAAOjC,GAAOoB,GAStB+gB,GAAgBA,CAC3Bs7C,EACAz9D,EACAoB,IAEAy5D,GAAQ4C,EAAOr8D,GAAOa,GAASw7D,EAAMx7D,GAAOjC,IAAQoB,IAS/C,SAASy6D,GAAex7D,EAAkB1G,EAAaoC,GAC5D,IAAInC,EAAQ,EACR+H,EAAMtB,EAAOlG,OAEjB,KAAOP,EAAQ+H,GAAOtB,EAAOzG,GAASD,GACpCC,IAEF,KAAO+H,EAAM/H,GAASyG,EAAOsB,EAAM,GAAK5F,GACtC4F,IAGF,OAAO/H,EAAQ,GAAK+H,EAAMtB,EAAOlG,OAC7BkG,EAAOmtC,MAAM5zC,EAAO+H,GACpBtB,CACN,CAEA,MAAM+vE,GAAc,CAAC,OAAQ,MAAO,QAAS,SAAU,WAgBhD,SAASlnE,GAAkB6b,EAAO8E,GACnC9E,EAAMsrD,SACRtrD,EAAMsrD,SAASl3E,UAAUsC,KAAKouB,IAIhCnqB,OAAO08C,eAAer3B,EAAO,WAAY,CACvCs3B,cAAc,EACdC,YAAY,EACZl7C,MAAO,CACLjI,UAAW,CAAC0wB,MAIhBumD,GAAY92E,SAAS0G,IACnB,MAAMd,EAAS,UAAY4kC,GAAY9jC,GACjCiT,EAAO8R,EAAM/kB,GAEnBN,OAAO08C,eAAer3B,EAAO/kB,EAAK,CAChCq8C,cAAc,EACdC,YAAY,EACZl7C,KAAAA,GAAe,QAAAkgC,EAAApnC,UAAAC,OAANwW,EAAI,IAAA5H,MAAAu4B,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ5wB,EAAI4wB,GAAArnC,UAAAqnC,GACX,MAAMxiC,EAAMkU,EAAK+1C,MAAM1wD,KAAMqY,GAQ7B,OANAoU,EAAMsrD,SAASl3E,UAAUG,SAASg3E,IACF,oBAAnBA,EAAOpxE,IAChBoxE,EAAOpxE,MAAWyR,MAIf5R,CACT,GACA,IAEN,CAQO,SAAS2J,GAAoBqc,EAAO8E,GACzC,MAAM0mD,EAAOxrD,EAAMsrD,SACnB,IAAKE,EACH,OAGF,MAAMp3E,EAAYo3E,EAAKp3E,UACjB8I,EAAQ9I,EAAUmc,QAAQuU,IACjB,IAAX5nB,GACF9I,EAAUsX,OAAOxO,EAAO,GAGtB9I,EAAUgB,OAAS,IAIvBi2E,GAAY92E,SAAS0G,WACZ+kB,EAAM/kB,EAAI,WAGZ+kB,EAAMsrD,SACf,CAKO,SAAS9+D,GAAgB/W,GAC9B,MAAMa,EAAM,IAAIisC,IAAO9sC,GAEvB,OAAIa,EAAIgG,OAAS7G,EAAML,OACdK,EAGFuO,MAAMtM,KAAKpB,EACpB,CCnLa,MAAAvB,GACW,qBAAXE,OACF,SAASm6B,GACd,OAAOA,GACT,EAEKn6B,OAAOw2E,sBAOT,SAAS1jD,GACdvzB,EACAi0E,GAEA,IAAIiD,EAAY,GACZC,GAAU,EAEd,OAAO,WAAyB,QAAAjvC,EAAAvnC,UAAAC,OAAbwW,EAAW,IAAA5H,MAAA04B,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAX/wB,EAAW+wB,GAAAxnC,UAAAwnC,GAE5B+uC,EAAY9/D,EACP+/D,IACHA,GAAU,EACV52E,GAAiBC,KAAKC,QAAQ,KAC5B02E,GAAU,EACVn3E,EAAGyvD,MAAMwkB,EAASiD,EAAA,IAGxB,CACF,CAKO,SAAS5kC,GAAmCtyC,EAA8ByE,GAC/E,IAAI2yE,EACJ,OAAO,WAAyB,QAAA/uC,EAAA1nC,UAAAC,OAAbwW,EAAW,IAAA5H,MAAA64B,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAXlxB,EAAWkxB,GAAA3nC,UAAA2nC,GAO5B,OANI7jC,GACF4yE,aAAaD,GACbA,EAAUE,WAAWt3E,EAAIyE,EAAO2S,IAEhCpX,EAAGyvD,MAAM1wD,KAAMqY,GAEV3S,CACT,CACF,CAMO,MAAMm0B,GAAsBD,GAAgD,UAAVA,EAAoB,OAAmB,QAAVA,EAAkB,QAAU,SAMrH2M,GAAiBA,CAAC3M,EAAmCt4B,EAAe+H,IAA0B,UAAVuwB,EAAoBt4B,EAAkB,QAAVs4B,EAAkBvwB,GAAO/H,EAAQ+H,GAAO,EAMxJ6kD,GAASA,CAACt0B,EAAoCplB,EAAcF,EAAeu4C,IAE/EjzB,KADOizB,EAAM,OAAS,SACJv4C,EAAkB,WAAVslB,GAAsBplB,EAAOF,GAAS,EAAIE,EAOtE,SAASqR,GAAiCvb,EAAqCmV,EAAwBmG,GAC5G,MAAM2+B,EAAa9kC,EAAO5d,OAE1B,IAAIP,EAAQ,EACRoQ,EAAQ6yC,EAEZ,GAAIj6C,EAAKsH,QAAS,CAChB,MAAM,OAACtG,EAAA,QAAQiB,GAAWjC,EACpBkB,EAAOF,EAAOE,MACd,IAACnK,EAAG,IAAEoC,EAAG,WAAE+P,EAAU,WAAEC,GAAcnI,EAAOoI,gBAE9CF,IACFlS,EAAQo9B,GAAYt9B,KAAKC,IAEvByoB,GAAavd,EAASf,EAAMnK,GAAK4oB,GAEjCrE,EAAqB2+B,EAAaz6B,GAAarK,EAAQjU,EAAMF,EAAOmO,iBAAiBpY,IAAM4oB,IAC7F,EAAGs6B,EAAa,IAGhB7yC,EADE+B,EACMirB,GAAYt9B,KAAKqC,IAEvBqmB,GAAavd,EAASjB,EAAOE,KAAM/H,GAAK,GAAMymB,GAAK,EAEnDtE,EAAqB,EAAIkE,GAAarK,EAAQjU,EAAMF,EAAOmO,iBAAiBhW,IAAM,GAAMymB,GAAK,GAC/F5oB,EAAOijD,GAAcjjD,EAEbijD,EAAajjD,EAIzB,MAAO,CAACA,QAAOoQ,QACjB,CAQO,SAASoU,GAAoBxb,GAClC,MAAM,OAACmF,EAAM,OAAEE,EAAA,aAAQ6oE,GAAgBluE,EACjCmuE,EAAY,CAChBC,KAAMjpE,EAAOpO,IACbs3E,KAAMlpE,EAAOhM,IACbm1E,KAAMjpE,EAAOtO,IACbw3E,KAAMlpE,EAAOlM,KAEf,IAAK+0E,EAEH,OADAluE,EAAKkuE,aAAeC,GACb,EAET,MAAMnpD,EAAUkpD,EAAaE,OAASjpE,EAAOpO,KAC1Cm3E,EAAaG,OAASlpE,EAAOhM,KAC7B+0E,EAAaI,OAASjpE,EAAOtO,KAC7Bm3E,EAAaK,OAASlpE,EAAOlM,IAGhC,OADA2D,OAAOe,OAAOqwE,EAAcC,GACrBnpD,CACT,CC/IA,MAAMwpD,GAAU5kE,GAAoB,IAANA,GAAiB,IAANA,EACnC6kE,GAAYA,CAAC7kE,EAAWmzD,EAAWr2B,KAAgB5vC,KAAKmqB,IAAI,EAAG,IAAMrX,GAAK,IAAM9S,KAAKwgB,KAAK1N,EAAImzD,GAAK3mD,GAAMswB,GACzGgoC,GAAaA,CAAC9kE,EAAWmzD,EAAWr2B,IAAc5vC,KAAKmqB,IAAI,GAAI,GAAKrX,GAAK9S,KAAKwgB,KAAK1N,EAAImzD,GAAK3mD,GAAMswB,GAAK,EAOvG3rC,GAAU,CACdE,OAAS2O,GAAcA,EAEvB+kE,WAAa/kE,GAAcA,EAAIA,EAE/BglE,YAAchlE,IAAeA,GAAKA,EAAI,GAEtCilE,cAAgBjlE,IAAgBA,GAAK,IAAO,EACxC,GAAMA,EAAIA,GACT,MAAUA,GAAMA,EAAI,GAAK,GAE9BklE,YAAcllE,GAAcA,EAAIA,EAAIA,EAEpCmlE,aAAenlE,IAAeA,GAAK,GAAKA,EAAIA,EAAI,EAEhDolE,eAAiBplE,IAAgBA,GAAK,IAAO,EACzC,GAAMA,EAAIA,EAAIA,EACd,KAAQA,GAAK,GAAKA,EAAIA,EAAI,GAE9BqlE,YAAcrlE,GAAcA,EAAIA,EAAIA,EAAIA,EAExCslE,aAAetlE,MAAiBA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAEtDulE,eAAiBvlE,IAAgBA,GAAK,IAAO,EACzC,GAAMA,EAAIA,EAAIA,EAAIA,GACjB,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAEnCwlE,YAAcxlE,GAAcA,EAAIA,EAAIA,EAAIA,EAAIA,EAE5CylE,aAAezlE,IAAeA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,EAExD0lE,eAAiB1lE,IAAgBA,GAAK,IAAO,EACzC,GAAMA,EAAIA,EAAIA,EAAIA,EAAIA,EACtB,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,GAEtC2lE,WAAa3lE,GAAuC,EAAxB9S,KAAKsgB,IAAIxN,EAAImO,IAEzCy3D,YAAc5lE,GAAc9S,KAAKwgB,IAAI1N,EAAImO,IAEzC03D,cAAgB7lE,IAAe,IAAO9S,KAAKsgB,IAAIa,GAAKrO,GAAK,GAEzD8lE,WAAa9lE,GAAqB,IAAPA,EAAY,EAAI9S,KAAKmqB,IAAI,EAAG,IAAMrX,EAAI,IAEjE+lE,YAAc/lE,GAAqB,IAAPA,EAAY,EAA4B,EAAvB9S,KAAKmqB,IAAI,GAAI,GAAKrX,GAE/DgmE,cAAgBhmE,GAAc4kE,GAAO5kE,GAAKA,EAAIA,EAAI,GAC9C,GAAM9S,KAAKmqB,IAAI,EAAG,IAAU,EAAJrX,EAAQ,IAChC,IAAyC,EAAjC9S,KAAKmqB,IAAI,GAAI,IAAU,EAAJrX,EAAQ,KAEvCimE,WAAajmE,GAAcA,GAAM,EAAKA,IAAM9S,KAAKkqB,KAAK,EAAIpX,EAAIA,GAAK,GAEnEkmE,YAAclmE,GAAc9S,KAAKkqB,KAAK,GAAKpX,GAAK,GAAKA,GAErDmmE,cAAgBnmE,IAAgBA,GAAK,IAAO,GACvC,IAAO9S,KAAKkqB,KAAK,EAAIpX,EAAIA,GAAK,GAC/B,IAAO9S,KAAKkqB,KAAK,GAAKpX,GAAK,GAAKA,GAAK,GAEzComE,cAAgBpmE,GAAc4kE,GAAO5kE,GAAKA,EAAI6kE,GAAU7kE,EAAG,KAAO,IAElEqmE,eAAiBrmE,GAAc4kE,GAAO5kE,GAAKA,EAAI8kE,GAAW9kE,EAAG,KAAO,IAEpEsmE,gBAAAA,CAAiBtmE,GACf,MAAMmzD,EAAI,MAEV,OAAOyR,GAAO5kE,GAAKA,EACjBA,EAAI,GACA,GAAM6kE,GAAc,EAAJ7kE,EAAOmzD,EAHnB,KAIJ,GAAM,GAAM2R,GAAe,EAAJ9kE,EAAQ,EAAGmzD,EAJ9B,IAKZ,EAEAoT,UAAAA,CAAWvmE,GACT,MAAMmzD,EAAI,QACV,OAAOnzD,EAAIA,IAAMmzD,EAAI,GAAKnzD,EAAImzD,EAChC,EAEAqT,WAAAA,CAAYxmE,GACV,MAAMmzD,EAAI,QACV,OAAQnzD,GAAK,GAAKA,IAAMmzD,EAAI,GAAKnzD,EAAImzD,GAAK,CAC5C,EAEAsT,aAAAA,CAAczmE,GACZ,IAAImzD,EAAI,QACR,OAAKnzD,GAAK,IAAO,EACDA,EAAIA,IAAuB,GAAhBmzD,GAAM,QAAenzD,EAAImzD,GAA3C,GAEF,KAAQnzD,GAAK,GAAKA,IAAuB,GAAhBmzD,GAAM,QAAenzD,EAAImzD,GAAK,EAChE,EAEAuT,aAAe1mE,GAAc,EAAI7O,GAAQw1E,cAAc,EAAI3mE,GAE3D2mE,aAAAA,CAAc3mE,GACZ,MAAMooD,EAAI,OACJluB,EAAI,KACV,OAAIl6B,EAAK,EAAIk6B,EACJkuB,EAAIpoD,EAAIA,EAEbA,EAAK,EAAIk6B,EACJkuB,GAAKpoD,GAAM,IAAMk6B,GAAMl6B,EAAI,IAEhCA,EAAK,IAAMk6B,EACNkuB,GAAKpoD,GAAM,KAAOk6B,GAAMl6B,EAAI,MAE9BooD,GAAKpoD,GAAM,MAAQk6B,GAAMl6B,EAAI,OACtC,EAEA4mE,gBAAkB5mE,GAAeA,EAAI,GACH,GAA9B7O,GAAQu1E,aAAiB,EAAJ1mE,GACc,GAAnC7O,GAAQw1E,cAAkB,EAAJ3mE,EAAQ,GAAW,ICpHxC,SAAS6mE,GAAoBjyE,GAClC,GAAIA,GAA0B,kBAAVA,EAAoB,CACtC,MAAMnI,EAAOmI,EAAMgsE,WACnB,MAAgB,2BAATn0E,GAA8C,4BAATA,EAG9C,OAAO,CACT,CAWO,SAAS2D,GAAMwE,GACpB,OAAOiyE,GAAoBjyE,GAASA,EAAQ,IAAI4qE,EAAM5qE,EACxD,CAKO,SAASkyE,GAAclyE,GAC5B,OAAOiyE,GAAoBjyE,GACvBA,EACA,IAAI4qE,EAAM5qE,GAAO6rE,SAAS,IAAKD,OAAO,IAAK/vE,WACjD,CC/BA,MAAMsa,GAAU,CAAC,IAAK,IAAK,cAAe,SAAU,WAC9Cg8D,GAAS,CAAC,QAAS,cAAe,mBCAxC,MAAMC,GAAY,IAAI/6E,IAaf,SAASyjB,GAAau3D,EAAat3D,EAAgB5b,GACxD,OAZF,SAAyB4b,EAAgB5b,GACvCA,EAAUA,GAAW,CAAC,EACtB,MAAM8N,EAAW8N,EAASu3D,KAAKC,UAAUpzE,GACzC,IAAIq8D,EAAY4W,GAAUt4E,IAAImT,GAK9B,OAJKuuD,IACHA,EAAY,IAAIgX,KAAKC,aAAa13D,EAAQ5b,GAC1CizE,GAAUn4E,IAAIgT,EAAUuuD,IAEnBA,CACT,CAGSkX,CAAgB33D,EAAQ5b,GAASkhB,OAAOgyD,EACjD,CCRA,MAAMlf,GAAa,CAOjBl0D,OAAOe,GACElB,EAAQkB,GAAkCA,EAAS,GAAKA,EAWjEozD,OAAAA,CAAQN,EAAWjyD,EAAO+P,GACxB,GAAkB,IAAdkiD,EACF,MAAO,IAGT,MAAM/3C,EAAS7jB,KAAKQ,MAAMyH,QAAQ4b,OAClC,IAAI43D,EACAC,EAAQ9f,EAEZ,GAAIliD,EAAM7X,OAAS,EAAG,CAEpB,MAAM85E,EAAUv6E,KAAKqC,IAAIrC,KAAKoY,IAAIE,EAAM,GAAG5Q,OAAQ1H,KAAKoY,IAAIE,EAAMA,EAAM7X,OAAS,GAAGiH,SAChF6yE,EAAU,MAAQA,EAAU,QAC9BF,EAAW,cAGbC,EAyCN,SAAwB9f,EAAWliD,GAGjC,IAAIgiE,EAAQhiE,EAAM7X,OAAS,EAAI6X,EAAM,GAAG5Q,MAAQ4Q,EAAM,GAAG5Q,MAAQ4Q,EAAM,GAAG5Q,MAAQ4Q,EAAM,GAAG5Q,MAGvF1H,KAAKoY,IAAIkiE,IAAU,GAAK9f,IAAcx6D,KAAKqE,MAAMm2D,KAEnD8f,EAAQ9f,EAAYx6D,KAAKqE,MAAMm2D,IAEjC,OAAO8f,CACT,CApDcE,CAAehgB,EAAWliD,GAGpC,MAAMmiE,EAAWzf,GAAMh7D,KAAKoY,IAAIkiE,IAO1BI,EAAa/+D,MAAM8+D,GAAY,EAAIz6E,KAAKqC,IAAIrC,KAAKC,KAAK,EAAID,KAAKqE,MAAMo2E,GAAW,IAAK,GAErF5zE,EAAU,CAACwzE,WAAUM,sBAAuBD,EAAYE,sBAAuBF,GAGrF,OAFA10E,OAAOe,OAAOF,EAASjI,KAAKiI,QAAQyR,MAAMyP,QAEnCvF,GAAag4C,EAAW/3C,EAAQ5b,EACzC,EAWAu3D,WAAAA,CAAY5D,EAAWjyD,EAAO+P,GAC5B,GAAkB,IAAdkiD,EACF,MAAO,IAET,MAAMv1D,EAASqT,EAAM/P,GAAOszD,aAAgBrB,EAAax6D,KAAKmqB,IAAI,GAAInqB,KAAKqE,MAAM22D,GAAMR,KACvF,MAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,IAAIxuC,SAAS/mB,IAAWsD,EAAQ,GAAM+P,EAAM7X,OACxDo6D,GAAWC,QAAQz6D,KAAKzB,KAAM47D,EAAWjyD,EAAO+P,GAElD,EACT,GAsBF,IAAAsiD,GAAe,CAACC,qBC/FHtzB,GAAYvhC,OAAO6/B,OAAO,MAC1BuB,GAAcphC,OAAO6/B,OAAO,MAOzC,SAASg1C,GAASjpD,EAAMtrB,GACtB,IAAKA,EACH,OAAOsrB,EAET,MAAM3rB,EAAOK,EAAIqgC,MAAM,KACvB,IAAK,IAAI3lC,EAAI,EAAGklE,EAAIjgE,EAAKxF,OAAQO,EAAIklE,IAAKllE,EAAG,CAC3C,MAAMmhD,EAAIl8C,EAAKjF,GACf4wB,EAAOA,EAAKuwB,KAAOvwB,EAAKuwB,GAAKn8C,OAAO6/B,OAAO,MAC7C,CACA,OAAOjU,CACT,CAEA,SAASjwB,GAAIm5E,EAAMl1C,EAAOj/B,GACxB,MAAqB,kBAAVi/B,EACFU,EAAMu0C,GAASC,EAAMl1C,GAAQj/B,GAE/B2/B,EAAMu0C,GAASC,EAAM,IAAKl1C,EACnC,CAMO,MAAMm1C,GACXp8E,WAAAA,CAAY+rC,EAAcswC,GACxBp8E,KAAKuH,eAAYjH,EACjBN,KAAKglB,gBAAkB,kBACvBhlB,KAAKklB,YAAc,kBACnBllB,KAAKsE,MAAQ,OACbtE,KAAK8P,SAAW,CAAC,EACjB9P,KAAKk0B,iBAAoB7e,GAAYA,EAAQ7U,MAAMivC,SAAShe,sBAC5DzxB,KAAK6U,SAAW,CAAC,EACjB7U,KAAKs2C,OAAS,CACZ,YACA,WACA,QACA,aACA,aAEFt2C,KAAKw5B,KAAO,CACV6iD,OAAQ,qDACRtzE,KAAM,GACN8b,MAAO,SACP6U,WAAY,IACZvV,OAAQ,MAEVnkB,KAAK+4C,MAAQ,CAAC,EACd/4C,KAAKs8E,qBAAuB,CAACxvE,EAAK7E,IAAY+yE,GAAc/yE,EAAQ+c,iBACpEhlB,KAAKu8E,iBAAmB,CAACzvE,EAAK7E,IAAY+yE,GAAc/yE,EAAQid,aAChEllB,KAAKw8E,WAAa,CAAC1vE,EAAK7E,IAAY+yE,GAAc/yE,EAAQ3D,OAC1DtE,KAAKoP,UAAY,IACjBpP,KAAK0oB,YAAc,CACjB1e,KAAM,UACN0f,WAAW,EACXgB,kBAAkB,GAEpB1qB,KAAK0zC,qBAAsB,EAC3B1zC,KAAK05C,QAAU,KACf15C,KAAKqlB,QAAU,KACfrlB,KAAKwR,SAAU,EACfxR,KAAKwkB,QAAU,CAAC,EAChBxkB,KAAK2zC,YAAa,EAClB3zC,KAAKiJ,WAAQ3I,EACbN,KAAKmM,OAAS,CAAC,EACfnM,KAAKimB,UAAW,EAChBjmB,KAAKgV,yBAA0B,EAE/BhV,KAAKyoC,SAASqD,GACd9rC,KAAK0wD,MAAM0rB,EACb,CAMAr5E,GAAAA,CAAIikC,EAAOj/B,GACT,OAAOhF,GAAI/C,KAAMgnC,EAAOj/B,EAC1B,CAKAnF,GAAAA,CAAIokC,GACF,OAAOi1C,GAASj8E,KAAMgnC,EACxB,CAMAyB,QAAAA,CAASzB,EAAOj/B,GACd,OAAOhF,GAAIylC,GAAaxB,EAAOj/B,EACjC,CAEA+gB,QAAAA,CAASke,EAAOj/B,GACd,OAAOhF,GAAI4lC,GAAW3B,EAAOj/B,EAC/B,CAmBAugC,KAAAA,CAAMtB,EAAO7pB,EAAMkrB,EAAaD,GAC9B,MAAMq0C,EAAcR,GAASj8E,KAAMgnC,GAC7B01C,EAAoBT,GAASj8E,KAAMqoC,GACnCs0C,EAAc,IAAMx/D,EAE1B/V,OAAOw1E,iBAAiBH,EAAa,CAEnC,CAACE,GAAc,CACb7zE,MAAO2zE,EAAYt/D,GACnB8mC,UAAU,GAGZ,CAAC9mC,GAAO,CACN6mC,YAAY,EACZphD,GAAAA,GACE,MAAM0pC,EAAQtsC,KAAK28E,GACb53E,EAAS23E,EAAkBt0C,GACjC,OAAIlhC,EAASolC,GACJllC,OAAOe,OAAO,CAAC,EAAGpD,EAAQunC,GAE5Bv9B,EAAeu9B,EAAOvnC,EAC/B,EACAhC,GAAAA,CAAI+F,GACF9I,KAAK28E,GAAe7zE,CACtB,IAGN,CAEA4nD,KAAAA,CAAMmsB,GACJA,EAAS77E,SAAS0vD,GAAUA,EAAM1wD,OACpC,EAIF,IAAAsH,GAA+B,IAAI60E,GAAS,CAC1C/3D,YAAcjH,IAAUA,EAAKmH,WAAW,MACxCD,WAAalH,GAAkB,WAATA,EACtB47B,MAAO,CACLggB,UAAW,eAEbrwC,YAAa,CACXtE,aAAa,EACbC,YAAY,IAEb,CH3KI,SAAiC/c,GACtCA,EAASvE,IAAI,YAAa,CACxB2C,WAAOpF,EACPS,SAAU,IACVuE,OAAQ,eACRrE,QAAIX,EACJ6D,UAAM7D,EACNsF,UAAMtF,EACN8D,QAAI9D,EACJK,UAAML,IAGRgH,EAASmhC,SAAS,YAAa,CAC7BswB,WAAW,EACX10C,YAAY,EACZD,YAAcjH,GAAkB,eAATA,GAAkC,eAATA,GAAkC,OAATA,IAG3E7V,EAASvE,IAAI,aAAc,CACzBk4E,OAAQ,CACNt6E,KAAM,QACNkH,WAAYozE,IAEdh8D,QAAS,CACPte,KAAM,SACNkH,WAAYoX,MAIhB3X,EAASmhC,SAAS,aAAc,CAC9BswB,UAAW,cAGbzxD,EAASvE,IAAI,cAAe,CAC1BmD,OAAQ,CACNqB,UAAW,CACTxG,SAAU,MAGdozB,OAAQ,CACN5sB,UAAW,CACTxG,SAAU,IAGd22C,KAAM,CACJpvC,WAAY,CACV2yE,OAAQ,CACN92E,KAAM,eAERoxC,QAAS,CACP50C,KAAM,UACNI,SAAU,KAIhB02C,KAAM,CACJnvC,WAAY,CACV2yE,OAAQ,CACN72E,GAAI,eAENmxC,QAAS,CACP50C,KAAM,UACN2E,OAAQ,SACRrE,GAAIka,GAAS,EAAJA,MAKnB,EIvEO,SAA8B7T,GACnCA,EAASvE,IAAI,SAAU,CACrBgzC,aAAa,EACbrmB,QAAS,CACPrb,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,IAGZ,ECRO,SAA4BlN,GACjCA,EAASvE,IAAI,QAAS,CACpBglB,SAAS,EACT5I,QAAQ,EACR/V,SAAS,EACTkW,aAAa,EASb+hC,OAAQ,QAER1sC,MAAM,EAMNonB,MAAO,EAGP3c,KAAM,CACJ2I,SAAS,EACT3C,UAAW,EACXwgB,iBAAiB,EACjBvM,WAAW,EACXxC,WAAY,EACZoH,UAAWA,CAACpxB,EAAM5E,IAAYA,EAAQmd,UACtC+d,UAAWA,CAACt2B,EAAM5E,IAAYA,EAAQ3D,MACtC6a,QAAQ,GAGVwH,OAAQ,CACNoB,SAAS,EACTib,KAAM,GACNE,WAAY,EACZzmB,MAAO,GAITkiB,MAAO,CAEL5W,SAAS,EAGTjD,KAAM,GAGN4K,QAAS,CACPrb,IAAK,EACLE,OAAQ,IAKZmF,MAAO,CACLqkB,YAAa,EACbC,YAAa,GACboB,QAAQ,EACRgF,gBAAiB,EACjBF,gBAAiB,GACjBxU,QAAS,EACT3H,SAAS,EACT2O,UAAU,EACV8K,gBAAiB,EACjBuC,YAAa,EAEblI,SAAUmgC,GAAMC,WAAWl0D,OAC3B+7D,MAAO,CAAC,EACRxsC,MAAO,CAAC,EACRsC,MAAO,SACP0J,WAAY,OAEZiB,mBAAmB,EACnBG,cAAe,4BACfD,gBAAiB,KAIrBn9B,EAASghC,MAAM,cAAe,QAAS,GAAI,SAC3ChhC,EAASghC,MAAM,aAAc,QAAS,GAAI,eAC1ChhC,EAASghC,MAAM,eAAgB,QAAS,GAAI,eAC5ChhC,EAASghC,MAAM,cAAe,QAAS,GAAI,SAE3ChhC,EAASmhC,SAAS,QAAS,CACzBswB,WAAW,EACX30C,YAAcjH,IAAUA,EAAKmH,WAAW,YAAcnH,EAAKmH,WAAW,UAAqB,aAATnH,GAAgC,WAATA,EACzGkH,WAAalH,GAAkB,eAATA,GAAkC,mBAATA,GAAsC,SAATA,IAG9E7V,EAASmhC,SAAS,SAAU,CAC1BswB,UAAW,UAGbzxD,EAASmhC,SAAS,cAAe,CAC/BrkB,YAAcjH,GAAkB,oBAATA,GAAuC,aAATA,EACrDkH,WAAalH,GAAkB,oBAATA,GAE1B,IClEO,SAASujB,GACd5zB,EACA+C,EACA4wB,EACAq8C,EACAt8C,GAEA,IAAIgtB,EAAY39C,EAAK2wB,GAQrB,OAPKgtB,IACHA,EAAY39C,EAAK2wB,GAAU1zB,EAAIi/C,YAAYvrB,GAAQ/jB,MACnDgkB,EAAGt9B,KAAKq9B,IAENgtB,EAAYsvB,IACdA,EAAUtvB,GAELsvB,CACT,CASO,SAAS5e,GACdpxD,EACA0sB,EACAujD,EACAjnE,GAGA,IAAIjG,GADJiG,EAAQA,GAAS,CAAC,GACDjG,KAAOiG,EAAMjG,MAAQ,CAAC,EACnC4wB,EAAK3qB,EAAM8qB,eAAiB9qB,EAAM8qB,gBAAkB,GAEpD9qB,EAAM0jB,OAASA,IACjB3pB,EAAOiG,EAAMjG,KAAO,CAAC,EACrB4wB,EAAK3qB,EAAM8qB,eAAiB,GAC5B9qB,EAAM0jB,KAAOA,GAGf1sB,EAAIg4B,OAEJh4B,EAAI0sB,KAAOA,EACX,IAAIsjD,EAAU,EACd,MAAMpzE,EAAOqzE,EAAcl7E,OAC3B,IAAIO,EAAWmoB,EAAW0V,EAAc+8C,EAAwBC,EAChE,IAAK76E,EAAI,EAAGA,EAAIsH,EAAMtH,IAIpB,GAHA46E,EAAQD,EAAc36E,QAGR9B,IAAV08E,GAAiC,OAAVA,GAAmBp1E,EAAQo1E,IAE/C,GAAIp1E,EAAQo1E,GAGjB,IAAKzyD,EAAI,EAAG0V,EAAO+8C,EAAMn7E,OAAQ0oB,EAAI0V,EAAM1V,IACzC0yD,EAAcD,EAAMzyD,QAEAjqB,IAAhB28E,GAA6C,OAAhBA,GAAyBr1E,EAAQq1E,KAChEH,EAAUp8C,GAAa5zB,EAAK+C,EAAM4wB,EAAIq8C,EAASG,SARnDH,EAAUp8C,GAAa5zB,EAAK+C,EAAM4wB,EAAIq8C,EAASE,GAcnDlwE,EAAIk4B,UAEJ,MAAMrE,EAAQF,EAAG5+B,OAAS,EAC1B,GAAI8+B,EAAQo8C,EAAcl7E,OAAQ,CAChC,IAAKO,EAAI,EAAGA,EAAIu+B,EAAOv+B,WACdyN,EAAK4wB,EAAGr+B,IAEjBq+B,EAAGtoB,OAAO,EAAGwoB,GAEf,OAAOm8C,CACT,CAUO,SAAS57C,GAAY1gC,EAAcugC,EAAetkB,GACvD,MAAMyX,EAAmB1zB,EAAM4zB,wBACzB8oD,EAAsB,IAAVzgE,EAAcrb,KAAKqC,IAAIgZ,EAAQ,EAAG,IAAO,EAC3D,OAAOrb,KAAKk3B,OAAOyI,EAAQm8C,GAAahpD,GAAoBA,EAAmBgpD,CACjF,CAKO,SAASppC,GAAY1iB,EAA4BtkB,IACjDA,GAAQskB,MAIbtkB,EAAMA,GAAOskB,EAAO7f,WAAW,OAE3BuzB,OAGJh4B,EAAIqwE,iBACJrwE,EAAIswE,UAAU,EAAG,EAAGhsD,EAAO3U,MAAO2U,EAAO5U,QACzC1P,EAAIk4B,UACN,CASO,SAAS+b,GACdj0C,EACA7E,EACAyG,EACAC,GAGAm/C,GAAgBhhD,EAAK7E,EAASyG,EAAGC,EAAG,KACtC,CAGO,SAASm/C,GACdhhD,EACA7E,EACAyG,EACAC,EACA8f,GAEA,IAAI9tB,EAAc08E,EAAiBC,EAAiBv0E,EAAcqqD,EAAsB32C,EAAe8gE,EAAkBC,EACzH,MAAM34D,EAAQ5c,EAAQ0c,WAChBrE,EAAWrY,EAAQqY,SACnBd,EAASvX,EAAQuX,OACvB,IAAIs6C,GAAOx5C,GAAY,GAAKg2D,GAE5B,GAAIzxD,GAA0B,kBAAVA,IAClBlkB,EAAOkkB,EAAMiwD,WACA,8BAATn0E,GAAiD,+BAATA,GAM1C,OALAmM,EAAIg4B,OACJh4B,EAAIowC,UAAUxuC,EAAGC,GACjB7B,EAAI4zD,OAAO5G,GACXhtD,EAAI2wE,UAAU54D,GAAQA,EAAMpI,MAAQ,GAAIoI,EAAMrI,OAAS,EAAGqI,EAAMpI,MAAOoI,EAAMrI,aAC7E1P,EAAIk4B,UAKR,KAAIjoB,MAAMyC,IAAWA,GAAU,GAA/B,CAMA,OAFA1S,EAAI04B,YAEI3gB,GAEN,QACM4J,EACF3hB,EAAI4wE,QAAQhvE,EAAGC,EAAG8f,EAAI,EAAGjP,EAAQ,EAAG,EAAGkB,IAEvC5T,EAAI4W,IAAIhV,EAAGC,EAAG6Q,EAAQ,EAAGkB,IAE3B5T,EAAIovC,YACJ,MACF,IAAK,WACHz/B,EAAQgS,EAAIA,EAAI,EAAIjP,EACpB1S,EAAI24B,OAAO/2B,EAAItN,KAAKwgB,IAAIk4C,GAAOr9C,EAAO9N,EAAIvN,KAAKsgB,IAAIo4C,GAAOt6C,GAC1Ds6C,GAAO0c,GACP1pE,EAAI44B,OAAOh3B,EAAItN,KAAKwgB,IAAIk4C,GAAOr9C,EAAO9N,EAAIvN,KAAKsgB,IAAIo4C,GAAOt6C,GAC1Ds6C,GAAO0c,GACP1pE,EAAI44B,OAAOh3B,EAAItN,KAAKwgB,IAAIk4C,GAAOr9C,EAAO9N,EAAIvN,KAAKsgB,IAAIo4C,GAAOt6C,GAC1D1S,EAAIovC,YACJ,MACF,IAAK,cAQHkX,EAAwB,KAAT5zC,EACfzW,EAAOyW,EAAS4zC,EAChBiqB,EAAUj8E,KAAKsgB,IAAIo4C,EAAMyc,IAAcxtE,EACvCw0E,EAAWn8E,KAAKsgB,IAAIo4C,EAAMyc,KAAe9nD,EAAIA,EAAI,EAAI2kC,EAAerqD,GACpEu0E,EAAUl8E,KAAKwgB,IAAIk4C,EAAMyc,IAAcxtE,EACvCy0E,EAAWp8E,KAAKwgB,IAAIk4C,EAAMyc,KAAe9nD,EAAIA,EAAI,EAAI2kC,EAAerqD,GACpE+D,EAAI4W,IAAIhV,EAAI6uE,EAAU5uE,EAAI2uE,EAASlqB,EAAc0G,EAAMv3C,GAAIu3C,EAAMz3C,IACjEvV,EAAI4W,IAAIhV,EAAI8uE,EAAU7uE,EAAI0uE,EAASjqB,EAAc0G,EAAMz3C,GAASy3C,GAChEhtD,EAAI4W,IAAIhV,EAAI6uE,EAAU5uE,EAAI2uE,EAASlqB,EAAc0G,EAAKA,EAAMz3C,IAC5DvV,EAAI4W,IAAIhV,EAAI8uE,EAAU7uE,EAAI0uE,EAASjqB,EAAc0G,EAAMz3C,GAASy3C,EAAMv3C,IACtEzV,EAAIovC,YACJ,MACF,IAAK,OACH,IAAK57B,EAAU,CACbvX,EAAO3H,KAAKu8E,QAAUn+D,EACtB/C,EAAQgS,EAAIA,EAAI,EAAI1lB,EACpB+D,EAAIw1C,KAAK5zC,EAAI+N,EAAO9N,EAAI5F,EAAM,EAAI0T,EAAO,EAAI1T,GAC7C,MAEF+wD,GAAOyc,GAET,IAAK,UACHgH,EAAWn8E,KAAKsgB,IAAIo4C,IAAQrrC,EAAIA,EAAI,EAAIjP,GACxC69D,EAAUj8E,KAAKsgB,IAAIo4C,GAAOt6C,EAC1B89D,EAAUl8E,KAAKwgB,IAAIk4C,GAAOt6C,EAC1Bg+D,EAAWp8E,KAAKwgB,IAAIk4C,IAAQrrC,EAAIA,EAAI,EAAIjP,GACxC1S,EAAI24B,OAAO/2B,EAAI6uE,EAAU5uE,EAAI2uE,GAC7BxwE,EAAI44B,OAAOh3B,EAAI8uE,EAAU7uE,EAAI0uE,GAC7BvwE,EAAI44B,OAAOh3B,EAAI6uE,EAAU5uE,EAAI2uE,GAC7BxwE,EAAI44B,OAAOh3B,EAAI8uE,EAAU7uE,EAAI0uE,GAC7BvwE,EAAIovC,YACJ,MACF,IAAK,WACH4d,GAAOyc,GAET,IAAK,QACHgH,EAAWn8E,KAAKsgB,IAAIo4C,IAAQrrC,EAAIA,EAAI,EAAIjP,GACxC69D,EAAUj8E,KAAKsgB,IAAIo4C,GAAOt6C,EAC1B89D,EAAUl8E,KAAKwgB,IAAIk4C,GAAOt6C,EAC1Bg+D,EAAWp8E,KAAKwgB,IAAIk4C,IAAQrrC,EAAIA,EAAI,EAAIjP,GACxC1S,EAAI24B,OAAO/2B,EAAI6uE,EAAU5uE,EAAI2uE,GAC7BxwE,EAAI44B,OAAOh3B,EAAI6uE,EAAU5uE,EAAI2uE,GAC7BxwE,EAAI24B,OAAO/2B,EAAI8uE,EAAU7uE,EAAI0uE,GAC7BvwE,EAAI44B,OAAOh3B,EAAI8uE,EAAU7uE,EAAI0uE,GAC7B,MACF,IAAK,OACHE,EAAWn8E,KAAKsgB,IAAIo4C,IAAQrrC,EAAIA,EAAI,EAAIjP,GACxC69D,EAAUj8E,KAAKsgB,IAAIo4C,GAAOt6C,EAC1B89D,EAAUl8E,KAAKwgB,IAAIk4C,GAAOt6C,EAC1Bg+D,EAAWp8E,KAAKwgB,IAAIk4C,IAAQrrC,EAAIA,EAAI,EAAIjP,GACxC1S,EAAI24B,OAAO/2B,EAAI6uE,EAAU5uE,EAAI2uE,GAC7BxwE,EAAI44B,OAAOh3B,EAAI6uE,EAAU5uE,EAAI2uE,GAC7BxwE,EAAI24B,OAAO/2B,EAAI8uE,EAAU7uE,EAAI0uE,GAC7BvwE,EAAI44B,OAAOh3B,EAAI8uE,EAAU7uE,EAAI0uE,GAC7BvjB,GAAOyc,GACPgH,EAAWn8E,KAAKsgB,IAAIo4C,IAAQrrC,EAAIA,EAAI,EAAIjP,GACxC69D,EAAUj8E,KAAKsgB,IAAIo4C,GAAOt6C,EAC1B89D,EAAUl8E,KAAKwgB,IAAIk4C,GAAOt6C,EAC1Bg+D,EAAWp8E,KAAKwgB,IAAIk4C,IAAQrrC,EAAIA,EAAI,EAAIjP,GACxC1S,EAAI24B,OAAO/2B,EAAI6uE,EAAU5uE,EAAI2uE,GAC7BxwE,EAAI44B,OAAOh3B,EAAI6uE,EAAU5uE,EAAI2uE,GAC7BxwE,EAAI24B,OAAO/2B,EAAI8uE,EAAU7uE,EAAI0uE,GAC7BvwE,EAAI44B,OAAOh3B,EAAI8uE,EAAU7uE,EAAI0uE,GAC7B,MACF,IAAK,OACHA,EAAU5uD,EAAIA,EAAI,EAAIrtB,KAAKsgB,IAAIo4C,GAAOt6C,EACtC89D,EAAUl8E,KAAKwgB,IAAIk4C,GAAOt6C,EAC1B1S,EAAI24B,OAAO/2B,EAAI2uE,EAAS1uE,EAAI2uE,GAC5BxwE,EAAI44B,OAAOh3B,EAAI2uE,EAAS1uE,EAAI2uE,GAC5B,MACF,IAAK,OACHxwE,EAAI24B,OAAO/2B,EAAGC,GACd7B,EAAI44B,OAAOh3B,EAAItN,KAAKsgB,IAAIo4C,IAAQrrC,EAAIA,EAAI,EAAIjP,GAAS7Q,EAAIvN,KAAKwgB,IAAIk4C,GAAOt6C,GACzE,MACF,KAAK,EACH1S,EAAIovC,YAIRpvC,EAAIoB,OACAjG,EAAQ8b,YAAc,GACxBjX,EAAI64B,SAER,CASO,SAAS/a,GACdlL,EACA5K,EACAma,GAIA,OAFAA,EAASA,GAAU,IAEXna,GAAS4K,GAASA,EAAMhR,EAAIoG,EAAKN,KAAOya,GAAUvP,EAAMhR,EAAIoG,EAAKR,MAAQ2a,GACjFvP,EAAM/Q,EAAImG,EAAKT,IAAM4a,GAAUvP,EAAM/Q,EAAImG,EAAKP,OAAS0a,CACzD,CAEO,SAAS+W,GAASl5B,EAA+BgI,GACtDhI,EAAIg4B,OACJh4B,EAAI04B,YACJ14B,EAAIw1C,KAAKxtC,EAAKN,KAAMM,EAAKT,IAAKS,EAAKR,MAAQQ,EAAKN,KAAMM,EAAKP,OAASO,EAAKT,KACzEvH,EAAI6H,MACN,CAEO,SAASwxB,GAAWr5B,GACzBA,EAAIk4B,SACN,CAKO,SAASkZ,GACdpxC,EACA0wC,EACAz4C,EACA64E,EACA5zE,GAEA,IAAKwzC,EACH,OAAO1wC,EAAI44B,OAAO3gC,EAAO2J,EAAG3J,EAAO4J,GAErC,GAAa,WAAT3E,EAAmB,CACrB,MAAM6zE,GAAYrgC,EAAS9uC,EAAI3J,EAAO2J,GAAK,EAC3C5B,EAAI44B,OAAOm4C,EAAUrgC,EAAS7uC,GAC9B7B,EAAI44B,OAAOm4C,EAAU94E,EAAO4J,EAC9B,KAAoB,UAAT3E,MAAuB4zE,EAChC9wE,EAAI44B,OAAO8X,EAAS9uC,EAAG3J,EAAO4J,GAE9B7B,EAAI44B,OAAO3gC,EAAO2J,EAAG8uC,EAAS7uC,GAEhC7B,EAAI44B,OAAO3gC,EAAO2J,EAAG3J,EAAO4J,EAC9B,CAKO,SAAS0vC,GACdvxC,EACA0wC,EACAz4C,EACA64E,GAEA,IAAKpgC,EACH,OAAO1wC,EAAI44B,OAAO3gC,EAAO2J,EAAG3J,EAAO4J,GAErC7B,EAAIgxE,cACFF,EAAOpgC,EAASugC,KAAOvgC,EAASwgC,KAChCJ,EAAOpgC,EAASygC,KAAOzgC,EAAS0gC,KAChCN,EAAO74E,EAAOi5E,KAAOj5E,EAAOg5E,KAC5BH,EAAO74E,EAAOm5E,KAAOn5E,EAAOk5E,KAC5Bl5E,EAAO2J,EACP3J,EAAO4J,EACX,CAwBA,SAASwvE,GACPrxE,EACA4B,EACAC,EACA+W,EACAvc,GAEA,GAAIA,EAAKglD,eAAiBhlD,EAAKi1E,UAAW,CAQxC,MAAMC,EAAUvxE,EAAIi/C,YAAYrmC,GAC1BlR,EAAO9F,EAAI2vE,EAAQC,sBACnBhqE,EAAQ5F,EAAI2vE,EAAQE,uBACpBlqE,EAAM1F,EAAI0vE,EAAQG,wBAClBjqE,EAAS5F,EAAI0vE,EAAQI,yBACrBC,EAAcv1E,EAAKglD,eAAiB95C,EAAME,GAAU,EAAIA,EAE9DzH,EAAImY,YAAcnY,EAAIiY,UACtBjY,EAAI04B,YACJ14B,EAAIsY,UAAYjc,EAAKw1E,iBAAmB,EACxC7xE,EAAI24B,OAAOjxB,EAAMkqE,GACjB5xE,EAAI44B,OAAOpxB,EAAOoqE,GAClB5xE,EAAI64B,SAER,CAEA,SAASi5C,GAAa9xE,EAA+B3D,GACnD,MAAM01E,EAAW/xE,EAAIiY,UAErBjY,EAAIiY,UAAY5b,EAAK7E,MACrBwI,EAAIi4B,SAAS57B,EAAKqL,KAAMrL,EAAKkL,IAAKlL,EAAKsT,MAAOtT,EAAKqT,QACnD1P,EAAIiY,UAAY85D,CAClB,CAKO,SAAS34C,GACdp5B,EACAgY,EACApW,EACAC,EACA6qB,GAEA,IADArwB,EAAuBvH,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,GAAAA,UAAA,MAEvB,MAAMgwD,EAAQhqD,EAAQkd,GAAQA,EAAO,CAACA,GAChC6gB,EAASx8B,EAAKg7B,YAAc,GAA0B,KAArBh7B,EAAK86B,YAC5C,IAAI7hC,EAAWsjB,EAMf,IAJA5Y,EAAIg4B,OACJh4B,EAAI0sB,KAAOA,EAAKgH,OA7ElB,SAAuB1zB,EAA+B3D,GAChDA,EAAKw7B,aACP73B,EAAIowC,UAAU/zC,EAAKw7B,YAAY,GAAIx7B,EAAKw7B,YAAY,IAGjDzoB,EAAc/S,EAAKmX,WACtBxT,EAAI4zD,OAAOv3D,EAAKmX,UAGdnX,EAAK7E,QACPwI,EAAIiY,UAAY5b,EAAK7E,OAGnB6E,EAAKs6B,YACP32B,EAAI22B,UAAYt6B,EAAKs6B,WAGnBt6B,EAAKy6B,eACP92B,EAAI82B,aAAez6B,EAAKy6B,aAE5B,CA0DEk7C,CAAchyE,EAAK3D,GAEd/G,EAAI,EAAGA,EAAIwvD,EAAM/vD,SAAUO,EAC9BsjB,EAAOksC,EAAMxvD,GAET+G,EAAKk7B,UACPu6C,GAAa9xE,EAAK3D,EAAKk7B,UAGrBsB,IACEx8B,EAAK86B,cACPn3B,EAAImY,YAAc9b,EAAK86B,aAGpB/nB,EAAc/S,EAAKg7B,eACtBr3B,EAAIsY,UAAYjc,EAAKg7B,aAGvBr3B,EAAIiyE,WAAWr5D,EAAMhX,EAAGC,EAAGxF,EAAKuZ,WAGlC5V,EAAIshD,SAAS1oC,EAAMhX,EAAGC,EAAGxF,EAAKuZ,UAC9By7D,GAAarxE,EAAK4B,EAAGC,EAAG+W,EAAMvc,GAE9BwF,GAAKwE,OAAOqmB,EAAKE,YAGnB5sB,EAAIk4B,SACN,CAOO,SAAS4d,GACd91C,EACAw1C,GAEA,MAAM,EAAC5zC,EAAC,EAAEC,EAAC,EAAE8f,EAAC,EAAEE,EAAC,OAAEnP,GAAU8iC,EAG7Bx1C,EAAI4W,IAAIhV,EAAI8Q,EAAOqiC,QAASlzC,EAAI6Q,EAAOqiC,QAASriC,EAAOqiC,QAAS,IAAMt/B,GAAIA,IAAI,GAG9EzV,EAAI44B,OAAOh3B,EAAGC,EAAIggB,EAAInP,EAAOuiC,YAG7Bj1C,EAAI4W,IAAIhV,EAAI8Q,EAAOuiC,WAAYpzC,EAAIggB,EAAInP,EAAOuiC,WAAYviC,EAAOuiC,WAAYx/B,GAAIF,IAAS,GAG1FvV,EAAI44B,OAAOh3B,EAAI+f,EAAIjP,EAAOwiC,YAAarzC,EAAIggB,GAG3C7hB,EAAI4W,IAAIhV,EAAI+f,EAAIjP,EAAOwiC,YAAarzC,EAAIggB,EAAInP,EAAOwiC,YAAaxiC,EAAOwiC,YAAa3/B,GAAS,GAAG,GAGhGvV,EAAI44B,OAAOh3B,EAAI+f,EAAG9f,EAAI6Q,EAAOsiC,UAG7Bh1C,EAAI4W,IAAIhV,EAAI+f,EAAIjP,EAAOsiC,SAAUnzC,EAAI6Q,EAAOsiC,SAAUtiC,EAAOsiC,SAAU,GAAIz/B,IAAS,GAGpFvV,EAAI44B,OAAOh3B,EAAI8Q,EAAOqiC,QAASlzC,EACjC,CCxgBA,MAAMqwE,GAAc,uCACdC,GAAa,wEAcZ,SAASC,GAAap2E,EAAwBC,GACnD,MAAMo2E,GAAW,GAAKr2E,GAAOs2E,MAAMJ,IACnC,IAAKG,GAA0B,WAAfA,EAAQ,GACtB,OAAc,IAAPp2E,EAKT,OAFAD,GAASq2E,EAAQ,GAETA,EAAQ,IACd,IAAK,KACH,OAAOr2E,EACT,IAAK,IACHA,GAAS,IAMb,OAAOC,EAAOD,CAChB,CAEA,MAAMu2E,GAAgBlkE,IAAgBA,GAAK,EAQpC,SAAS4+B,GAAkBjxC,EAAwCF,GACxE,MAAM6tB,EAAM,CAAC,EACP6oD,EAAWp4E,EAAS0B,GACpBvB,EAAOi4E,EAAWl4E,OAAOC,KAAKuB,GAASA,EACvC22E,EAAOr4E,EAAS4B,GAClBw2E,EACEt6E,GAAQ+J,EAAejG,EAAM9D,GAAO8D,EAAMF,EAAM5D,KAChDA,GAAQ8D,EAAM9D,GAChB,IAAM8D,EAEV,IAAK,MAAM9D,KAAQqC,EACjBovB,EAAIzxB,GAAQq6E,GAAaE,EAAKv6E,IAEhC,OAAOyxB,CACT,CAUO,SAAS+qB,GAAO14C,GACrB,OAAOixC,GAAkBjxC,EAAO,CAACuL,IAAK,IAAKC,MAAO,IAAKC,OAAQ,IAAKC,KAAM,KAC5E,CASO,SAASktC,GAAc54C,GAC5B,OAAOixC,GAAkBjxC,EAAO,CAAC,UAAW,WAAY,aAAc,eACxE,CAUO,SAASmnB,GAAUnnB,GACxB,MAAM4S,EAAM8lC,GAAO14C,GAKnB,OAHA4S,EAAIe,MAAQf,EAAIlH,KAAOkH,EAAIpH,MAC3BoH,EAAIc,OAASd,EAAIrH,IAAMqH,EAAInH,OAEpBmH,CACT,CAUO,SAAS+d,GAAOxxB,EAA4BsxB,GACjDtxB,EAAUA,GAAW,CAAC,EACtBsxB,EAAWA,GAAYjyB,GAASkyB,KAEhC,IAAIzwB,EAAOgG,EAAe9G,EAAQc,KAAMwwB,EAASxwB,MAE7B,kBAATA,IACTA,EAAOkqE,SAASlqE,EAAM,KAExB,IAAI8b,EAAQ9V,EAAe9G,EAAQ4c,MAAO0U,EAAS1U,OAC/CA,KAAW,GAAKA,GAAOu6D,MAAMH,MAC/B7wE,QAAQC,KAAK,kCAAoCwW,EAAQ,KACzDA,OAAQvkB,GAGV,MAAMk5B,EAAO,CACX6iD,OAAQttE,EAAe9G,EAAQo0E,OAAQ9iD,EAAS8iD,QAChD3iD,WAAYwlD,GAAanwE,EAAe9G,EAAQyxB,WAAYH,EAASG,YAAa3wB,GAClFA,OACA8b,QACAV,OAAQpV,EAAe9G,EAAQkc,OAAQoV,EAASpV,QAChDqc,OAAQ,IAIV,OADAhH,EAAKgH,ODlHA,SAAsBhH,GAC3B,OAAKA,GAAQtd,EAAcsd,EAAKzwB,OAASmT,EAAcsd,EAAK6iD,QACnD,MAGD7iD,EAAK3U,MAAQ2U,EAAK3U,MAAQ,IAAM,KACrC2U,EAAKrV,OAASqV,EAAKrV,OAAS,IAAM,IACnCqV,EAAKzwB,KAAO,MACZywB,EAAK6iD,MACT,CCyGgBmD,CAAahmD,GACpBA,CACT,CAaO,SAASt0B,GAAQu6E,EAAwBpqE,EAAkB1L,EAAgB+1E,GAChF,IACIt9E,EAAWsH,EAAcZ,EADzB62E,GAAY,EAGhB,IAAKv9E,EAAI,EAAGsH,EAAO+1E,EAAO59E,OAAQO,EAAIsH,IAAQtH,EAE5C,GADA0G,EAAQ22E,EAAOr9E,QACD9B,IAAVwI,SAGYxI,IAAZ+U,GAA0C,oBAAVvM,IAClCA,EAAQA,EAAMuM,GACdsqE,GAAY,QAEAr/E,IAAVqJ,GAAuB/B,EAAQkB,KACjCA,EAAQA,EAAMa,EAAQb,EAAMjH,QAC5B89E,GAAY,QAEAr/E,IAAVwI,GAIF,OAHI42E,IAASC,IACXD,EAAKC,WAAY,GAEZ72E,CAGb,CAQO,SAASyzB,GAAUqjD,EAAuC7jD,EAAwBzc,GACvF,MAAM,IAACje,EAAA,IAAKoC,GAAOm8E,EACb5uD,EAASnO,EAAYkZ,GAAQt4B,EAAMpC,GAAO,GAC1Cw+E,EAAWA,CAAC/2E,EAAe1F,IAAgBkc,GAAyB,IAAVxW,EAAc,EAAIA,EAAQ1F,EAC1F,MAAO,CACL/B,IAAKw+E,EAASx+E,GAAMD,KAAKoY,IAAIwX,IAC7BvtB,IAAKo8E,EAASp8E,EAAKutB,GAEvB,CAUO,SAASzb,GAAcuqE,EAAuBzqE,GACnD,OAAOjO,OAAOe,OAAOf,OAAO6/B,OAAO64C,GAAgBzqE,EACrD,CCnLO,SAAS07B,GAId3/B,GAKA,IAJA+E,EAAWvU,UAAAC,OAAA,QAAAvB,IAAAsB,UAAC,GAADA,UAAC,GAAD,CAAC,IAEZ23B,EAA4B33B,UAAAC,OAAA,EAAAD,UAAA,QAAAtB,EAC5By/E,EAAAn+E,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,GAAAA,UAAA,GAAY,IAAMwP,EAAO,GAEzB,MAAM4uE,GAJQp+E,UAAAC,OAAA,EAAAD,UAAA,QAAAtB,IAIwB8Q,EACd,qBAAbmoB,IACTA,EAAW0mD,GAAS,YAAa7uE,IAEnC,MAAM0E,EAA6B,CACjC,CAACoqE,OAAOC,aAAc,SACtBzpE,YAAY,EACZ0pE,QAAShvE,EACTivE,YAAaL,EACbjnB,UAAWx/B,EACX2uB,WAAY63B,EACZj3D,SAAWke,GAAqB+J,GAAgB,CAAC/J,KAAU51B,GAAS+E,EAAU6pE,EAAiBzmD,IAEjG,OAAO,IAAI+mD,MAAMxqE,EAAO,CAItByqE,eAAeA,CAAAx7E,EAAQC,YACdD,EAAOC,UACPD,EAAOy7E,aACPpvE,EAAO,GAAGpM,IACV,GAMTpC,IAAIA,CAAAmC,EAAQC,IACHy7E,GAAQ17E,EAAQC,GACrB,IAoUR,SACEA,EACAmR,EACA/E,EACA6jB,GAEA,IAAInsB,EACJ,IAAK,MAAMuvC,KAAUliC,EAEnB,GADArN,EAAQm3E,GAASS,GAAQroC,EAAQrzC,GAAOoM,GACnB,qBAAVtI,EACT,OAAO63E,GAAiB37E,EAAM8D,GAC1B83E,GAAkBxvE,EAAQ6jB,EAAOjwB,EAAM8D,GACvCA,CAGV,CAnVc+3E,CAAqB77E,EAAMmR,EAAU/E,EAAQrM,KAOvD+7E,yBAAyBA,CAAA/7E,EAAQC,IACxB+7E,QAAQD,yBAAyB/7E,EAAOq7E,QAAQ,GAAIp7E,GAM7DsiC,eAAiBA,IACRy5C,QAAQz5C,eAAel2B,EAAO,IAMvC/N,IAAIA,CAAA0B,EAAQC,IACHg8E,GAAqBj8E,GAAQqoB,SAASpoB,GAM/Ci8E,QAAQl8E,GACCi8E,GAAqBj8E,GAM9BhC,GAAAA,CAAIgC,EAAQC,EAAc8D,GACxB,MAAMo4E,EAAUn8E,EAAOo8E,WAAap8E,EAAOo8E,SAAWpB,KAGtD,OAFAh7E,EAAOC,GAAQk8E,EAAQl8E,GAAQ8D,SACxB/D,EAAOy7E,OACP,CACT,GAEJ,CAUO,SAAS5vC,GAId3b,EACA5f,EACA+rE,EACAvwC,GAEA,MAAM/6B,EAA4B,CAChCY,YAAY,EACZw3B,OAAQjZ,EACRosD,SAAUhsE,EACVisE,UAAWF,EACX/zD,OAAQ,IAAI2hB,IACZlD,aAAcA,GAAa7W,EAAO4b,GAClC3V,WAAapuB,GAAmB8jC,GAAe3b,EAAOnoB,EAAKs0E,EAAUvwC,GACrE/nB,SAAWke,GAAqB4J,GAAe3b,EAAMnM,SAASke,GAAQ3xB,EAAS+rE,EAAUvwC,IAE3F,OAAO,IAAIyvC,MAAMxqE,EAAO,CAItByqE,eAAeA,CAAAx7E,EAAQC,YACdD,EAAOC,UACPiwB,EAAMjwB,IACN,GAMTpC,IAAG,CAACmC,EAAQC,EAAcu8E,IACjBd,GAAQ17E,EAAQC,GACrB,IAiFR,SACED,EACAC,EACAu8E,GAEA,MAAM,OAACrzC,EAAM,SAAEmzC,EAAQ,UAAEC,EAAWx1C,aAActD,GAAezjC,EACjE,IAAI+D,EAAQolC,EAAOlpC,GAGfwrC,GAAW1nC,IAAU0/B,EAAY8H,aAAatrC,KAChD8D,EAYJ,SACE9D,EACAw8E,EACAz8E,EACAw8E,GAEA,MAAM,OAACrzC,EAAA,SAAQmzC,EAAA,UAAUC,EAAS,OAAEj0D,GAAUtoB,EAC9C,GAAIsoB,EAAOhqB,IAAI2B,GACb,MAAM,IAAI4jB,MAAM,uBAAyBnY,MAAMtM,KAAKkpB,GAAQ6a,KAAK,MAAQ,KAAOljC,GAElFqoB,EAAOjqB,IAAI4B,GACX,IAAI8D,EAAQ04E,EAASH,EAAUC,GAAaC,GAC5Cl0D,EAAOvpB,OAAOkB,GACV27E,GAAiB37E,EAAM8D,KAEzBA,EAAQ83E,GAAkB1yC,EAAOkyC,QAASlyC,EAAQlpC,EAAM8D,IAE1D,OAAOA,CACT,CA9BY24E,CAAmBz8E,EAAM8D,EAAO/D,EAAQw8E,IAE9C35E,EAAQkB,IAAUA,EAAMjH,SAC1BiH,EA6BJ,SACE9D,EACA8D,EACA/D,EACAwrC,GAEA,MAAM,OAACrC,EAAM,SAAEmzC,EAAQ,UAAEC,EAAWx1C,aAActD,GAAezjC,EAEjE,GAA8B,qBAAnBs8E,EAAS13E,OAAyB4mC,EAAYvrC,GACvD,OAAO8D,EAAMu4E,EAAS13E,MAAQb,EAAMjH,QAC/B,GAAIqF,EAAS4B,EAAM,IAAK,CAE7B,MAAMkP,EAAMlP,EACNsI,EAAS88B,EAAOkyC,QAAQh0E,QAAOi7D,GAAKA,IAAMrvD,IAChDlP,EAAQ,GACR,IAAK,MAAM3G,KAAQ6V,EAAK,CACtB,MAAMm4B,EAAWywC,GAAkBxvE,EAAQ88B,EAAQlpC,EAAM7C,GACzD2G,EAAM3F,KAAKytC,GAAeT,EAAUkxC,EAAUC,GAAaA,EAAUt8E,GAAOwjC,GAC9E,EAEF,OAAO1/B,CACT,CAlDY44E,CAAc18E,EAAM8D,EAAO/D,EAAQyjC,EAAY+H,cAErDowC,GAAiB37E,EAAM8D,KAEzBA,EAAQ8nC,GAAe9nC,EAAOu4E,EAAUC,GAAaA,EAAUt8E,GAAOwjC,IAExE,OAAO1/B,CACT,CArGc64E,CAAoB58E,EAAQC,EAAMu8E,KAO5CT,yBAAyBA,CAAA/7E,EAAQC,IACxBD,EAAO+mC,aAAaoB,QACvB6zC,QAAQ19E,IAAI4xB,EAAOjwB,GAAQ,CAACg/C,YAAY,EAAMD,cAAc,QAAQzjD,EACpEygF,QAAQD,yBAAyB7rD,EAAOjwB,GAM9CsiC,eAAiBA,IACRy5C,QAAQz5C,eAAerS,GAMhC5xB,IAAIA,CAAA0B,EAAQC,IACH+7E,QAAQ19E,IAAI4xB,EAAOjwB,GAM5Bi8E,QAAUA,IACDF,QAAQE,QAAQhsD,GAMzBlyB,IAAG,CAACgC,EAAQC,EAAM8D,KAChBmsB,EAAMjwB,GAAQ8D,SACP/D,EAAOC,IACP,IAGb,CAKO,SAAS8mC,GACd7W,GAEY,IADZ3tB,EAA+B1F,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,GAAAA,UAAA,IAACorC,YAAY,EAAMC,WAAW,GAE7D,MAAM,YAAC7oB,EAAc9c,EAAS0lC,WAAU,WAAE3oB,EAAa/c,EAAS2lC,UAAS,SAAE20C,EAAWt6E,EAAS4lC,SAAWjY,EAC1G,MAAO,CACLiY,QAAS00C,EACT50C,WAAY5oB,EACZ6oB,UAAW5oB,EACXisB,aAAcE,GAAWpsB,GAAeA,EAAc,IAAMA,EAC5DmsB,YAAaC,GAAWnsB,GAAcA,EAAa,IAAMA,EAE7D,CAEA,MAAMq8D,GAAUA,CAACroC,EAAgBl7B,IAAiBk7B,EAASA,EAAS7M,GAAYruB,GAAQA,EAClFwjE,GAAmBA,CAAC37E,EAAc8D,IAAmB5B,EAAS4B,IAAmB,aAAT9D,IAC1C,OAAjCoC,OAAOkgC,eAAex+B,IAAmBA,EAAM/I,cAAgBqH,QAElE,SAASq5E,GACP17E,EACAC,EACAE,GAEA,GAAIkC,OAAO4hB,UAAU8sD,eAAer0E,KAAKsD,EAAQC,IAAkB,gBAATA,EACxD,OAAOD,EAAOC,GAGhB,MAAM8D,EAAQ5D,IAGd,OADAH,EAAOC,GAAQ8D,EACRA,CACT,CAmEA,SAAS+4E,GACPtoD,EACAv0B,EACA8D,GAEA,OAAO0nC,GAAWjX,GAAYA,EAASv0B,EAAM8D,GAASywB,CACxD,CAEA,MAAMuoD,GAAWA,CAACp6E,EAAwB4N,KAA8B,IAAR5N,EAAe4N,EAC5D,kBAAR5N,EAAmB6K,GAAiB+C,EAAQ5N,QAAOpH,EAE9D,SAASyhF,GACPh/E,EACAi/E,EACAt6E,EACAu6E,EACAn5E,GAEA,IAAK,MAAMwM,KAAU0sE,EAAc,CACjC,MAAMh7C,EAAQ86C,GAASp6E,EAAK4N,GAC5B,GAAI0xB,EAAO,CACTjkC,EAAIK,IAAI4jC,GACR,MAAMzN,EAAWsoD,GAAgB76C,EAAM+xB,UAAWrxD,EAAKoB,GACvD,GAAwB,qBAAbywB,GAA4BA,IAAa7xB,GAAO6xB,IAAa0oD,EAGtE,OAAO1oD,OAEJ,IAAc,IAAVyN,GAA6C,qBAAnBi7C,GAAkCv6E,IAAQu6E,EAG7E,OAAO,IAEX,CACA,OAAO,CACT,CAEA,SAASrB,GACPoB,EACA7xC,EACAnrC,EACA8D,GAEA,MAAMo5E,EAAa/xC,EAASkwC,YACtB9mD,EAAWsoD,GAAgB1xC,EAAS4oB,UAAW/zD,EAAM8D,GACrDq5E,EAAY,IAAIH,KAAiBE,GACjCn/E,EAAM,IAAIisC,IAChBjsC,EAAIK,IAAI0F,GACR,IAAIpB,EAAM06E,GAAiBr/E,EAAKo/E,EAAWn9E,EAAMu0B,GAAYv0B,EAAM8D,GACnE,OAAY,OAARpB,KAGoB,qBAAb6xB,GAA4BA,IAAav0B,IAClD0C,EAAM06E,GAAiBr/E,EAAKo/E,EAAW5oD,EAAU7xB,EAAKoB,GAC1C,OAARpB,KAICqpC,GAAgBtgC,MAAMtM,KAAKpB,GAAM,CAAC,IAAKm/E,EAAY3oD,GACxD,IAgBJ,SACE4W,EACAnrC,EACA8D,GAEA,MAAMwM,EAAS66B,EAAS+X,aAClBljD,KAAQsQ,IACZA,EAAOtQ,GAAQ,CAAC,GAElB,MAAMD,EAASuQ,EAAOtQ,GACtB,GAAI4C,EAAQ7C,IAAWmC,EAAS4B,GAE9B,OAAOA,EAET,OAAO/D,GAAU,CAAC,CACpB,CA/BUs9E,CAAalyC,EAAUnrC,EAAgB8D,KACjD,CAEA,SAASs5E,GACPr/E,EACAo/E,EACAz6E,EACA6xB,EACAp3B,GAEA,KAAOuF,GACLA,EAAMq6E,GAAUh/E,EAAKo/E,EAAWz6E,EAAK6xB,EAAUp3B,GAEjD,OAAOuF,CACT,CAoCA,SAASu4E,GAASv4E,EAAa0J,GAC7B,IAAK,MAAM41B,KAAS51B,EAAQ,CAC1B,IAAK41B,EACH,SAEF,MAAMl+B,EAAQk+B,EAAMt/B,GACpB,GAAqB,qBAAVoB,EACT,OAAOA,CAEX,CACF,CAEA,SAASk4E,GAAqBj8E,GAC5B,IAAIsC,EAAOtC,EAAOy7E,MAIlB,OAHKn5E,IACHA,EAAOtC,EAAOy7E,MAKlB,SAAkCpvE,GAChC,MAAMrO,EAAM,IAAIisC,IAChB,IAAK,MAAMhI,KAAS51B,EAClB,IAAK,MAAM1J,KAAON,OAAOC,KAAK2/B,GAAO56B,QAAOm3C,IAAMA,EAAEj/B,WAAW,OAC7DvhB,EAAIK,IAAIsE,GAGZ,OAAO+I,MAAMtM,KAAKpB,EACpB,CAb0Bu/E,CAAyBv9E,EAAOq7E,UAEjD/4E,CACT,CAYO,SAAS2f,GACd1c,EACAuF,EACAvO,EACAoQ,GAEA,MAAM,OAACpG,GAAUhB,GACX,IAAC5C,EAAM,KAAO1H,KAAKkN,SACnB/B,EAAS,IAAIsF,MAAoBiB,GACvC,IAAItP,EAAWsH,EAAcC,EAAexH,EAE5C,IAAKC,EAAI,EAAGsH,EAAOgI,EAAOtP,EAAIsH,IAAQtH,EACpCuH,EAAQvH,EAAId,EACZa,EAAO0N,EAAKlG,GACZwB,EAAO/I,GAAK,CACVwM,EAAGtD,EAAOmG,MAAMc,GAAiBpQ,EAAMuF,GAAMiC,IAGjD,OAAOwB,CACT,CClcA,MAAMo3E,GAAUpvE,OAAOovE,SAAW,MAG5BC,GAAWA,CAAC/iE,EAAuBrd,IAAmCA,EAAIqd,EAAO5d,SAAW4d,EAAOrd,GAAGyd,MAAQJ,EAAOrd,GACrHqgF,GAAgBrzE,GAAuC,MAAdA,EAAoB,IAAM,IAElE,SAASszE,GACd97D,EACA+7D,EACAC,EACA1uE,GAUA,MAAMspC,EAAW52B,EAAW/G,KAAO8iE,EAAc/7D,EAC3CgvD,EAAU+M,EACVlkE,EAAOmkE,EAAW/iE,KAAO8iE,EAAcC,EACvCC,EAAMvyB,GAAsBslB,EAASp4B,GACrCslC,EAAMxyB,GAAsB7xC,EAAMm3D,GAExC,IAAImN,EAAMF,GAAOA,EAAMC,GACnBE,EAAMF,GAAOD,EAAMC,GAGvBC,EAAMhmE,MAAMgmE,GAAO,EAAIA,EACvBC,EAAMjmE,MAAMimE,GAAO,EAAIA,EAEvB,MAAMC,EAAK/uE,EAAI6uE,EACTG,EAAKhvE,EAAI8uE,EAEf,MAAO,CACLxlC,SAAU,CACR9uC,EAAGknE,EAAQlnE,EAAIu0E,GAAMxkE,EAAK/P,EAAI8uC,EAAS9uC,GACvCC,EAAGinE,EAAQjnE,EAAIs0E,GAAMxkE,EAAK9P,EAAI6uC,EAAS7uC,IAEzC8P,KAAM,CACJ/P,EAAGknE,EAAQlnE,EAAIw0E,GAAMzkE,EAAK/P,EAAI8uC,EAAS9uC,GACvCC,EAAGinE,EAAQjnE,EAAIu0E,GAAMzkE,EAAK9P,EAAI6uC,EAAS7uC,IAG7C,CAsEO,SAASw0E,GAAoB1jE,GAAmD,IAA5BrQ,EAAAxN,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,GAAAA,UAAA,GAAuB,IAChF,MAAMwhF,EAAYX,GAAarzE,GACzBi0E,EAAY5jE,EAAO5d,OACnByhF,EAAmB7yE,MAAM4yE,GAAWn1E,KAAK,GACzCq1E,EAAe9yE,MAAM4yE,GAG3B,IAAIjhF,EAAGohF,EAAkCC,EACrCC,EAAalB,GAAS/iE,EAAQ,GAElC,IAAKrd,EAAI,EAAGA,EAAIihF,IAAajhF,EAI3B,GAHAohF,EAAcC,EACdA,EAAeC,EACfA,EAAalB,GAAS/iE,EAAQrd,EAAI,GAC7BqhF,EAAL,CAIA,GAAIC,EAAY,CACd,MAAMC,EAAaD,EAAWt0E,GAAaq0E,EAAar0E,GAGxDk0E,EAAOlhF,GAAoB,IAAfuhF,GAAoBD,EAAWN,GAAaK,EAAaL,IAAcO,EAAa,EAElGJ,EAAGnhF,GAAMohF,EACJE,EACEt5E,GAAKk5E,EAAOlhF,EAAI,MAAQgI,GAAKk5E,EAAOlhF,IAAO,GACzCkhF,EAAOlhF,EAAI,GAAKkhF,EAAOlhF,IAAM,EAFpBkhF,EAAOlhF,EAAI,GADNkhF,EAAOlhF,IAzFlC,SAAwBqd,EAAuB6jE,EAAkBC,GAC/D,MAAMF,EAAY5jE,EAAO5d,OAEzB,IAAI+hF,EAAgBC,EAAeC,EAAcC,EAA0BN,EACvEC,EAAalB,GAAS/iE,EAAQ,GAClC,IAAK,IAAIrd,EAAI,EAAGA,EAAIihF,EAAY,IAAKjhF,EACnCqhF,EAAeC,EACfA,EAAalB,GAAS/iE,EAAQrd,EAAI,GAC7BqhF,GAAiBC,IAIlBjoB,GAAa6nB,EAAOlhF,GAAI,EAAGmgF,IAC7BgB,EAAGnhF,GAAKmhF,EAAGnhF,EAAI,GAAK,GAItBwhF,EAASL,EAAGnhF,GAAKkhF,EAAOlhF,GACxByhF,EAAQN,EAAGnhF,EAAI,GAAKkhF,EAAOlhF,GAC3B2hF,EAAmB3iF,KAAKmqB,IAAIq4D,EAAQ,GAAKxiF,KAAKmqB,IAAIs4D,EAAO,GACrDE,GAAoB,IAIxBD,EAAO,EAAI1iF,KAAKkqB,KAAKy4D,GACrBR,EAAGnhF,GAAKwhF,EAASE,EAAOR,EAAOlhF,GAC/BmhF,EAAGnhF,EAAI,GAAKyhF,EAAQC,EAAOR,EAAOlhF,KAEtC,CAmEE4hF,CAAevkE,EAAQ6jE,EAAQC,GAjEjC,SAAyB9jE,EAAuB8jE,GAA0C,IAA5Bn0E,EAAAxN,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,GAAAA,UAAA,GAAuB,IACnF,MAAMwhF,EAAYX,GAAarzE,GACzBi0E,EAAY5jE,EAAO5d,OACzB,IAAI65E,EAAe8H,EAAkCC,EACjDC,EAAalB,GAAS/iE,EAAQ,GAElC,IAAK,IAAIrd,EAAI,EAAGA,EAAIihF,IAAajhF,EAAG,CAIlC,GAHAohF,EAAcC,EACdA,EAAeC,EACfA,EAAalB,GAAS/iE,EAAQrd,EAAI,IAC7BqhF,EACH,SAGF,MAAM9jE,EAAS8jE,EAAar0E,GACtBwQ,EAAS6jE,EAAaL,GACxBI,IACF9H,GAAS/7D,EAAS6jE,EAAYp0E,IAAc,EAC5Cq0E,EAAa,MAAD73E,OAAOwD,IAAeuQ,EAAS+7D,EAC3C+H,EAAa,MAAD73E,OAAOw3E,IAAexjE,EAAS87D,EAAQ6H,EAAGnhF,IAEpDshF,IACFhI,GAASgI,EAAWt0E,GAAauQ,GAAU,EAC3C8jE,EAAa,MAAD73E,OAAOwD,IAAeuQ,EAAS+7D,EAC3C+H,EAAa,MAAD73E,OAAOw3E,IAAexjE,EAAS87D,EAAQ6H,EAAGnhF,GAE1D,CACF,CAwCE6hF,CAAgBxkE,EAAQ8jE,EAAIn0E,EAC9B,CAEA,SAAS80E,GAAgBvtB,EAAYt1D,EAAaoC,GAChD,OAAOrC,KAAKqC,IAAIrC,KAAKC,IAAIs1D,EAAIlzD,GAAMpC,EACrC,CA2BO,SAASu+C,GACdngC,EACAxX,EACA6M,EACAlP,EACAwJ,GAEA,IAAIhN,EAAWsH,EAAcgW,EAAoBykE,EAOjD,GAJIl8E,EAAQme,WACV3G,EAASA,EAAOrT,QAAQuqD,IAAQA,EAAG92C,QAGE,aAAnC5X,EAAQm2C,uBACV+kC,GAAoB1jE,EAAQrQ,OACvB,CACL,IAAIyC,EAAOjM,EAAO6Z,EAAOA,EAAO5d,OAAS,GAAK4d,EAAO,GACrD,IAAKrd,EAAI,EAAGsH,EAAO+V,EAAO5d,OAAQO,EAAIsH,IAAQtH,EAC5Csd,EAAQD,EAAOrd,GACf+hF,EAAgBzB,GACd7wE,EACA6N,EACAD,EAAOre,KAAKC,IAAIe,EAAI,EAAGsH,GAAQ9D,EAAO,EAAI,IAAM8D,GAChDzB,EAAQk2C,SAEVz+B,EAAMq+D,KAAOoG,EAAc3mC,SAAS9uC,EACpCgR,EAAMu+D,KAAOkG,EAAc3mC,SAAS7uC,EACpC+Q,EAAMs+D,KAAOmG,EAAc1lE,KAAK/P,EAChCgR,EAAMw+D,KAAOiG,EAAc1lE,KAAK9P,EAChCkD,EAAO6N,EAIPzX,EAAQu4C,iBA3Dd,SAAyB/gC,EAAuB3K,GAC9C,IAAI1S,EAAGsH,EAAMgW,EAAO0kE,EAAQC,EACxBC,EAAa15D,GAAenL,EAAO,GAAI3K,GAC3C,IAAK1S,EAAI,EAAGsH,EAAO+V,EAAO5d,OAAQO,EAAIsH,IAAQtH,EAC5CiiF,EAAaD,EACbA,EAASE,EACTA,EAAaliF,EAAIsH,EAAO,GAAKkhB,GAAenL,EAAOrd,EAAI,GAAI0S,GACtDsvE,IAGL1kE,EAAQD,EAAOrd,GACXiiF,IACF3kE,EAAMq+D,KAAOmG,GAAgBxkE,EAAMq+D,KAAMjpE,EAAKN,KAAMM,EAAKR,OACzDoL,EAAMu+D,KAAOiG,GAAgBxkE,EAAMu+D,KAAMnpE,EAAKT,IAAKS,EAAKP,SAEtD+vE,IACF5kE,EAAMs+D,KAAOkG,GAAgBxkE,EAAMs+D,KAAMlpE,EAAKN,KAAMM,EAAKR,OACzDoL,EAAMw+D,KAAOgG,GAAgBxkE,EAAMw+D,KAAMppE,EAAKT,IAAKS,EAAKP,SAG9D,CAwCIisC,CAAgB/gC,EAAQ3K,EAE5B,CC9MO,SAAS68B,KACd,MAAyB,qBAAXjwC,QAA8C,qBAAbgyB,QACjD,CAKO,SAASa,GAAegwD,GAC7B,IAAIjvE,EAASivE,EAAQC,WAIrB,OAHIlvE,GAAgC,wBAAtBA,EAAOw/D,aACnBx/D,EAAUA,EAAsBmvE,MAE3BnvE,CACT,CAOA,SAASovE,GAAcC,EAA6B3xD,EAAmB4xD,GACrE,IAAIC,EAYJ,MAX0B,kBAAfF,GACTE,EAAgB5R,SAAS0R,EAAY,KAEJ,IAA7BA,EAAW3nE,QAAQ,OAErB6nE,EAAgBA,EAAiB,IAAO7xD,EAAKwxD,WAAWI,KAG1DC,EAAgBF,EAGXE,CACT,CAEA,MAAMC,GAAoB7vE,GACxBA,EAAQ8vE,cAAcC,YAAYF,iBAAiB7vE,EAAS,MAM9D,MAAM+Z,GAAY,CAAC,MAAO,QAAS,SAAU,QAC7C,SAASi2D,GAAmBC,EAA6BrgE,EAAesgE,GACtE,MAAM3tD,EAAS,CAAC,EAChB2tD,EAASA,EAAS,IAAMA,EAAS,GACjC,IAAK,IAAI/iF,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAMsqB,EAAMsC,GAAU5sB,GACtBo1B,EAAO9K,GAAO26B,WAAW69B,EAAOrgE,EAAQ,IAAM6H,EAAMy4D,KAAY,CAClE,CAGA,OAFA3tD,EAAO/a,MAAQ+a,EAAOhjB,KAAOgjB,EAAOljB,MACpCkjB,EAAOhb,OAASgb,EAAOnjB,IAAMmjB,EAAOjjB,OAC7BijB,CACT,CAEA,MAAM4tD,GAAeA,CAAC12E,EAAWC,EAAW5J,KACzC2J,EAAI,GAAKC,EAAI,MAAQ5J,IAAWA,EAAwBsgF,YAuCpD,SAASh5D,GACdppB,EACAzC,GAEA,GAAI,WAAYyC,EACd,OAAOA,EAGT,MAAM,OAACmuB,EAAA,wBAAQgD,GAA2B5zB,EACpCqkB,EAAQigE,GAAiB1zD,GACzBk0D,EAAgC,eAApBzgE,EAAM4Q,UAClB8vD,EAAWN,GAAmBpgE,EAAO,WACrC2gE,EAAUP,GAAmBpgE,EAAO,SAAU,UAC9C,EAACnW,EAAA,EAAGC,EAAA,IAAGie,GA7Cf,SACEtH,EACA8L,GAMA,MAAMq0D,EAAUngE,EAAkBmgE,QAC5BzoD,EAAUyoD,GAAWA,EAAQ5jF,OAAS4jF,EAAQ,GAAKngE,GACnD,QAACrF,EAAA,QAASC,GAAW8c,EAC3B,IACItuB,EAAGC,EADHie,GAAM,EAEV,GAAIw4D,GAAanlE,EAASC,EAASoF,EAAEvgB,QACnC2J,EAAIuR,EACJtR,EAAIuR,MACC,CACL,MAAMoiC,EAAOlxB,EAAOs0D,wBACpBh3E,EAAIsuB,EAAO2oD,QAAUrjC,EAAK9tC,KAC1B7F,EAAIquB,EAAO4oD,QAAUtjC,EAAKjuC,IAC1BuY,GAAM,EAER,MAAO,CAACle,IAAGC,IAAGie,MAChB,CAsBsBi5D,CAAkB5iF,EAAOmuB,GACvCisD,EAAUkI,EAAS/wE,MAAQoY,GAAO44D,EAAQhxE,MAC1C8oE,EAAUiI,EAASlxE,KAAOuY,GAAO44D,EAAQnxE,KAE/C,IAAI,MAACoI,EAAA,OAAOD,GAAUhc,EAKtB,OAJI8kF,IACF7oE,GAAS8oE,EAAS9oE,MAAQ+oE,EAAQ/oE,MAClCD,GAAU+oE,EAAS/oE,OAASgpE,EAAQhpE,QAE/B,CACL9N,EAAGtN,KAAKk3B,OAAO5pB,EAAI2uE,GAAW5gE,EAAQ2U,EAAO3U,MAAQ2X,GACrDzlB,EAAGvN,KAAKk3B,OAAO3pB,EAAI2uE,GAAW9gE,EAAS4U,EAAO5U,OAAS4X,GAE3D,CA6BA,MAAM0xD,GAAU3qE,GAAc/Z,KAAKk3B,MAAU,GAAJnd,GAAU,GAG5C,SAASuW,GACdN,EACA20D,EACAC,EACAzhE,GAEA,MAAMM,EAAQigE,GAAiB1zD,GACzB0K,EAAUmpD,GAAmBpgE,EAAO,UACpCnC,EAAWgiE,GAAc7/D,EAAMnC,SAAU0O,EAAQ,gBAAkBilD,GACnE1zD,EAAY+hE,GAAc7/D,EAAMlC,UAAWyO,EAAQ,iBAAmBilD,GACtE4P,EAxCR,SAA0B70D,EAA2B3U,EAAeD,GAClE,IAAIkG,EAAkBC,EAEtB,QAAcriB,IAAVmc,QAAkCnc,IAAXkc,EAAsB,CAC/C,MAAM8X,EAAYlD,GAAUmD,GAAenD,GAC3C,GAAKkD,EAGE,CACL,MAAMguB,EAAOhuB,EAAUoxD,wBACjBQ,EAAiBpB,GAAiBxwD,GAClC6xD,EAAkBlB,GAAmBiB,EAAgB,SAAU,SAC/DE,EAAmBnB,GAAmBiB,EAAgB,WAC5DzpE,EAAQ6lC,EAAK7lC,MAAQ2pE,EAAiB3pE,MAAQ0pE,EAAgB1pE,MAC9DD,EAAS8lC,EAAK9lC,OAAS4pE,EAAiB5pE,OAAS2pE,EAAgB3pE,OACjEkG,EAAWgiE,GAAcwB,EAAexjE,SAAU4R,EAAW,eAC7D3R,EAAY+hE,GAAcwB,EAAevjE,UAAW2R,EAAW,qBAV/D7X,EAAQ2U,EAAOqD,YACfjY,EAAS4U,EAAOi1D,aAYpB,MAAO,CACL5pE,QACAD,SACAkG,SAAUA,GAAY2zD,GACtB1zD,UAAWA,GAAa0zD,GAE5B,CAewBiQ,CAAiBl1D,EAAQ20D,EAASC,GACxD,IAAI,MAACvpE,EAAA,OAAOD,GAAUypE,EAEtB,GAAwB,gBAApBphE,EAAM4Q,UAA6B,CACrC,MAAM+vD,EAAUP,GAAmBpgE,EAAO,SAAU,SAC9C0gE,EAAWN,GAAmBpgE,EAAO,WAC3CpI,GAAS8oE,EAAS9oE,MAAQ+oE,EAAQ/oE,MAClCD,GAAU+oE,EAAS/oE,OAASgpE,EAAQhpE,OAEtCC,EAAQrb,KAAKqC,IAAI,EAAGgZ,EAAQqf,EAAQrf,OACpCD,EAASpb,KAAKqC,IAAI,EAAG8gB,EAAc9H,EAAQ8H,EAAc/H,EAASsf,EAAQtf,QAC1EC,EAAQqpE,GAAO1kF,KAAKC,IAAIob,EAAOiG,EAAUujE,EAAcvjE,WACvDlG,EAASspE,GAAO1kF,KAAKC,IAAImb,EAAQmG,EAAWsjE,EAActjE,YACtDlG,IAAUD,IAGZA,EAASspE,GAAOrpE,EAAQ,IAU1B,YAPmCnc,IAAZylF,QAAsCzlF,IAAb0lF,IAE1BzhE,GAAe0hE,EAAczpE,QAAUA,EAASypE,EAAczpE,SAClFA,EAASypE,EAAczpE,OACvBC,EAAQqpE,GAAO1kF,KAAKqE,MAAM+W,EAAS+H,KAG9B,CAAC9H,QAAOD,SACjB,CAQO,SAASo3B,GACdpzC,EACA+lF,EACAC,GAEA,MAAMC,EAAaF,GAAc,EAC3BG,EAAetlF,KAAKqE,MAAMjF,EAAMgc,OAASiqE,GACzCE,EAAcvlF,KAAKqE,MAAMjF,EAAMic,MAAQgqE,GAE7CjmF,EAAMgc,OAASpb,KAAKqE,MAAMjF,EAAMgc,QAChChc,EAAMic,MAAQrb,KAAKqE,MAAMjF,EAAMic,OAE/B,MAAM2U,EAAS5wB,EAAM4wB,OAUrB,OALIA,EAAOvM,QAAU2hE,IAAgBp1D,EAAOvM,MAAMrI,SAAW4U,EAAOvM,MAAMpI,SACxE2U,EAAOvM,MAAMrI,OAAS,GAAH5Q,OAAMpL,EAAMgc,OAAM,MACrC4U,EAAOvM,MAAMpI,MAAQ,GAAH7Q,OAAMpL,EAAMic,MAAK,QAGjCjc,EAAM4zB,0BAA4BqyD,GAC/Br1D,EAAO5U,SAAWkqE,GAClBt1D,EAAO3U,QAAUkqE,KACtBnmF,EAAM4zB,wBAA0BqyD,EAChCr1D,EAAO5U,OAASkqE,EAChBt1D,EAAO3U,MAAQkqE,EACfnmF,EAAMsM,IAAI85E,aAAaH,EAAY,EAAG,EAAGA,EAAY,EAAG,IACjD,EAGX,CAOa,MAAA9zD,GAAgC,WAC3C,IAAIk0D,GAAmB,EACvB,IACE,MAAM5+E,EAAU,CACd,WAAI2qB,GAEF,OADAi0D,GAAmB,GACZ,CACT,GAGEl1C,OACFjwC,OAAO4vB,iBAAiB,OAAQ,KAAMrpB,GACtCvG,OAAO8vB,oBAAoB,OAAQ,KAAMvpB,GAE7C,CAAE,MAAOqd,IAGT,OAAOuhE,CACT,CAlB6C,GA8BtC,SAASlxD,GACd1gB,EACA4yB,GAEA,MAAM/+B,EAzOD,SAAkBihB,EAAiB8d,GACxC,OAAOi9C,GAAiB/6D,GAAI+8D,iBAAiBj/C,EAC/C,CAuOgB3yB,CAASD,EAAS4yB,GAC1Bs3C,EAAUr2E,GAASA,EAAMs2E,MAAM,qBACrC,OAAOD,GAAWA,EAAQ,QAAK7+E,CACjC,CC9RO,SAAS6/C,GAAa/a,EAAWC,EAAWnxB,EAAWlK,GAC5D,MAAO,CACL0E,EAAG02B,EAAG12B,EAAIwF,GAAKmxB,EAAG32B,EAAI02B,EAAG12B,GACzBC,EAAGy2B,EAAGz2B,EAAIuF,GAAKmxB,EAAG12B,EAAIy2B,EAAGz2B,GAE7B,CAKO,SAASsxC,GACd7a,EACAC,EACAnxB,EAAWlK,GAEX,MAAO,CACL0E,EAAG02B,EAAG12B,EAAIwF,GAAKmxB,EAAG32B,EAAI02B,EAAG12B,GACzBC,EAAY,WAAT3E,EAAoBkK,EAAI,GAAMkxB,EAAGz2B,EAAI02B,EAAG12B,EAC9B,UAAT3E,EAAmBkK,EAAI,EAAIkxB,EAAGz2B,EAAI02B,EAAG12B,EACnCuF,EAAI,EAAImxB,EAAG12B,EAAIy2B,EAAGz2B,EAE5B,CAKO,SAASuxC,GAAqB9a,EAAiBC,EAAiBnxB,EAAWlK,GAChF,MAAM+8E,EAAM,CAACr4E,EAAG02B,EAAG44C,KAAMrvE,EAAGy2B,EAAG84C,MACzB8I,EAAM,CAACt4E,EAAG22B,EAAG04C,KAAMpvE,EAAG02B,EAAG44C,MACzB9kE,EAAIgnC,GAAa/a,EAAI2hD,EAAK7yE,GAC1BC,EAAIgsC,GAAa4mC,EAAKC,EAAK9yE,GAC3B69B,EAAIoO,GAAa6mC,EAAK3hD,EAAInxB,GAC1Bk6B,EAAI+R,GAAahnC,EAAGhF,EAAGD,GACvBoR,EAAI66B,GAAahsC,EAAG49B,EAAG79B,GAC7B,OAAOisC,GAAa/R,EAAG9oB,EAAGpR,EAC5B,CChCA,MAAM+yE,GAAwB,SAASC,EAAezqE,GACpD,MAAO,CACL/N,EAAEA,GACOw4E,EAAQA,EAAQzqE,EAAQ/N,EAEjC++C,QAAAA,CAASh/B,GACPhS,EAAQgS,CACV,EACAgV,UAAU7J,GACM,WAAVA,EACKA,EAEQ,UAAVA,EAAoB,OAAS,QAEtCi0B,MAAMA,CAAAn/C,EAAG5F,IACA4F,EAAI5F,EAEbmkD,WAAWA,CAAAv+C,EAAGo9C,IACLp9C,EAAIo9C,EAGjB,EAEMq7B,GAAwB,WAC5B,MAAO,CACLz4E,EAAEA,GACOA,EAET++C,QAAAA,CAASh/B,GAAI,EAEbgV,UAAU7J,GACDA,EAETi0B,MAAMA,CAAAn/C,EAAG5F,IACA4F,EAAI5F,EAEbmkD,WAAWA,CAAAv+C,EAAG04E,IACL14E,EAGb,EAEO,SAASq+C,GAAcF,EAAcq6B,EAAezqE,GACzD,OAAOowC,EAAMo6B,GAAsBC,EAAOzqE,GAAS0qE,IACrD,CAEO,SAAS75B,GAAsBxgD,EAA+Bu6E,GACnE,IAAIxiE,EAA4ByiE,EACd,QAAdD,GAAqC,QAAdA,IACzBxiE,EAAQ/X,EAAIskB,OAAOvM,MACnByiE,EAAW,CACTziE,EAAMiiE,iBAAiB,aACvBjiE,EAAM0iE,oBAAoB,cAG5B1iE,EAAM2iE,YAAY,YAAaH,EAAW,aACzCv6E,EAAiD26E,kBAAoBH,EAE1E,CAEO,SAASj5B,GAAqBvhD,EAA+Bw6E,QACjDhnF,IAAbgnF,WACMx6E,EAAiD26E,kBACzD36E,EAAIskB,OAAOvM,MAAM2iE,YAAY,YAAaF,EAAS,GAAIA,EAAS,IAEpE,CC/DA,SAASI,GAAW7/C,GAClB,MAAiB,UAAbA,EACK,CACL8/C,QAAS1lE,GACT2lE,QAASvQ,GACTnS,UAAW7e,IAGR,CACLshC,QAAS5qC,GACT6qC,QAASA,CAACzuE,EAAGhF,IAAMgF,EAAIhF,EACvB+wD,UAAWx2D,GAAKA,EAEpB,CAEA,SAASm5E,GAAiBxsE,GAAkC,IAAlC,MAAC/Z,EAAK,IAAE+H,EAAG,MAAEqI,EAAK,KAAE9L,EAAI,MAAEif,GAAMxJ,EACxD,MAAO,CACL/Z,MAAOA,EAAQoQ,EACfrI,IAAKA,EAAMqI,EACX9L,KAAMA,IAASyD,EAAM/H,EAAQ,GAAKoQ,IAAU,EAC5CmT,QAEJ,CA4CO,SAAS4kC,GAAcvjC,EAASzG,EAAQ4hC,GAC7C,IAAKA,EACH,MAAO,CAACn7B,GAGV,MAAM,SAAC2hB,EAAUvmC,MAAOwmF,EAAYz+E,IAAK0+E,GAAY1mC,EAC/C3vC,EAAQ+N,EAAO5d,QACf,QAAC+lF,EAAA,QAASD,EAAA,UAASziB,GAAawiB,GAAW7/C,IAC3C,MAACvmC,EAAA,IAAO+H,EAAA,KAAKzD,EAAA,MAAMif,GAlD3B,SAAoBqB,EAASzG,EAAQ4hC,GACnC,MAAM,SAACxZ,EAAUvmC,MAAOwmF,EAAYz+E,IAAK0+E,GAAY1mC,GAC/C,QAACsmC,EAAO,UAAEziB,GAAawiB,GAAW7/C,GAClCn2B,EAAQ+N,EAAO5d,OAErB,IACIO,EAAGsH,GADH,MAACpI,EAAK,IAAE+H,EAAA,KAAKzD,GAAQsgB,EAGzB,GAAItgB,EAAM,CAGR,IAFAtE,GAASoQ,EACTrI,GAAOqI,EACFtP,EAAI,EAAGsH,EAAOgI,EAAOtP,EAAIsH,GACvBi+E,EAAQziB,EAAUzlD,EAAOne,EAAQoQ,GAAOm2B,IAAYigD,EAAYC,KADjC3lF,EAIpCd,IACA+H,IAEF/H,GAASoQ,EACTrI,GAAOqI,EAMT,OAHIrI,EAAM/H,IACR+H,GAAOqI,GAEF,CAACpQ,QAAO+H,MAAKzD,OAAMif,MAAOqB,EAAQrB,MAC3C,CAwBoCmjE,CAAW9hE,EAASzG,EAAQ4hC,GAExD7pB,EAAS,GACf,IAEI1uB,EAAO4W,EAAOuoE,EAFdC,GAAS,EACTC,EAAW,KAGf,MAEMC,EAAcA,IAAMF,GAFEP,EAAQG,EAAYG,EAAWn/E,IAA6C,IAAnC8+E,EAAQE,EAAYG,GAGnFI,EAAaA,KAAOH,GAF6B,IAA7BN,EAAQG,EAAUj/E,IAAgB6+E,EAAQI,EAAUE,EAAWn/E,GAIzF,IAAK,IAAI1G,EAAId,EAAOuQ,EAAOvQ,EAAOc,GAAKiH,IAAOjH,EAC5Csd,EAAQD,EAAOrd,EAAIsP,GAEfgO,EAAMG,OAIV/W,EAAQo8D,EAAUxlD,EAAMmoB,IAEpB/+B,IAAUm/E,IAIdC,EAASP,EAAQ7+E,EAAOg/E,EAAYC,GAEnB,OAAbI,GAAqBC,MACvBD,EAA0C,IAA/BP,EAAQ9+E,EAAOg/E,GAAoB1lF,EAAIyP,GAGnC,OAAbs2E,GAAqBE,MACvB7wD,EAAOr0B,KAAK0kF,GAAiB,CAACvmF,MAAO6mF,EAAU9+E,IAAKjH,EAAGwD,OAAM8L,QAAOmT,WACpEsjE,EAAW,MAEbt2E,EAAOzP,EACP6lF,EAAYn/E,IAOd,OAJiB,OAAbq/E,GACF3wD,EAAOr0B,KAAK0kF,GAAiB,CAACvmF,MAAO6mF,EAAU9+E,MAAKzD,OAAM8L,QAAOmT,WAG5D2S,CACT,CAYO,SAASuoB,GAAer6B,EAAM27B,GACnC,MAAM7pB,EAAS,GACT6nB,EAAW35B,EAAK25B,SAEtB,IAAK,IAAIj9C,EAAI,EAAGA,EAAIi9C,EAASx9C,OAAQO,IAAK,CACxC,MAAMkmF,EAAM7+B,GAAcpK,EAASj9C,GAAIsjB,EAAKjG,OAAQ4hC,GAChDinC,EAAIzmF,QACN21B,EAAOr0B,QAAQmlF,EAEnB,CACA,OAAO9wD,CACT,CAsFO,SAASqoB,GAAiBn6B,EAAM6iE,GACrC,MAAM9oE,EAASiG,EAAKjG,OACd2G,EAAWV,EAAKzd,QAAQme,SACxB1U,EAAQ+N,EAAO5d,OAErB,IAAK6P,EACH,MAAO,GAGT,MAAM9L,IAAS8f,EAAK/f,OACd,MAACrE,EAAA,IAAO+H,GA3FhB,SAAyBoW,EAAQ/N,EAAO9L,EAAMwgB,GAC5C,IAAI9kB,EAAQ,EACR+H,EAAMqI,EAAQ,EAElB,GAAI9L,IAASwgB,EAEX,KAAO9kB,EAAQoQ,IAAU+N,EAAOne,GAAOue,MACrCve,IAKJ,KAAOA,EAAQoQ,GAAS+N,EAAOne,GAAOue,MACpCve,IAWF,IAPAA,GAASoQ,EAEL9L,IAEFyD,GAAO/H,GAGF+H,EAAM/H,GAASme,EAAOpW,EAAMqI,GAAOmO,MACxCxW,IAMF,OAFAA,GAAOqI,EAEA,CAACpQ,QAAO+H,MACjB,CA2DuBm/E,CAAgB/oE,EAAQ/N,EAAO9L,EAAMwgB,GAE1D,IAAiB,IAAbA,EACF,OAAOqiE,GAAc/iE,EAAM,CAAC,CAACpkB,QAAO+H,MAAKzD,SAAQ6Z,EAAQ8oE,GAK3D,OAAOE,GAAc/iE,EA1DvB,SAAuBjG,EAAQne,EAAOmC,EAAKmC,GACzC,MAAM8L,EAAQ+N,EAAO5d,OACf21B,EAAS,GACf,IAEInuB,EAFAsT,EAAOrb,EACPuQ,EAAO4N,EAAOne,GAGlB,IAAK+H,EAAM/H,EAAQ,EAAG+H,GAAO5F,IAAO4F,EAAK,CACvC,MAAM7F,EAAMic,EAAOpW,EAAMqI,GACrBlO,EAAIqc,MAAQrc,EAAIG,KACbkO,EAAKgO,OACRja,GAAO,EACP4xB,EAAOr0B,KAAK,CAAC7B,MAAOA,EAAQoQ,EAAOrI,KAAMA,EAAM,GAAKqI,EAAO9L,SAE3DtE,EAAQqb,EAAOnZ,EAAIG,KAAO0F,EAAM,OAGlCsT,EAAOtT,EACHwI,EAAKgO,OACPve,EAAQ+H,IAGZwI,EAAOrO,CACT,CAMA,OAJa,OAATmZ,GACF6a,EAAOr0B,KAAK,CAAC7B,MAAOA,EAAQoQ,EAAOrI,IAAKsT,EAAOjL,EAAO9L,SAGjD4xB,CACT,CA4B6BkxD,CAAcjpE,EAAQne,EAFrC+H,EAAM/H,EAAQ+H,EAAMqI,EAAQrI,IACjBqc,EAAK0C,WAAuB,IAAV9mB,GAAe+H,IAAQqI,EAAQ,GACI+N,EAAQ8oE,EACtF,CAQA,SAASE,GAAc/iE,EAAM25B,EAAU5/B,EAAQ8oE,GAC7C,OAAKA,GAAmBA,EAAertD,YAAezb,EAaxD,SAAyBiG,EAAM25B,EAAU5/B,EAAQ8oE,GAC/C,MAAMI,EAAejjE,EAAK3e,OAAOwK,aAC3Bq3E,EAAYC,GAAUnjE,EAAKzd,UAC1B8d,cAAe9b,EAAchC,SAAS,SAACme,IAAaV,EACrDhU,EAAQ+N,EAAO5d,OACf21B,EAAS,GACf,IAAIsxD,EAAYF,EACZtnF,EAAQ+9C,EAAS,GAAG/9C,MACpBc,EAAId,EAER,SAASynF,EAAS1hB,EAAG/hD,EAAGlR,EAAG40E,GACzB,MAAMC,EAAM7iE,GAAY,EAAI,EAC5B,GAAIihD,IAAM/hD,EAAV,CAKA,IADA+hD,GAAK31D,EACE+N,EAAO4nD,EAAI31D,GAAOmO,MACvBwnD,GAAK4hB,EAEP,KAAOxpE,EAAO6F,EAAI5T,GAAOmO,MACvByF,GAAK2jE,EAEH5hB,EAAI31D,IAAU4T,EAAI5T,IACpB8lB,EAAOr0B,KAAK,CAAC7B,MAAO+lE,EAAI31D,EAAOrI,IAAKic,EAAI5T,EAAO9L,KAAMwO,EAAGyQ,MAAOmkE,IAC/DF,EAAYE,EACZ1nF,EAAQgkB,EAAI5T,GAEhB,CAEA,IAAK,MAAMwU,KAAWm5B,EAAU,CAC9B/9C,EAAQ8kB,EAAW9kB,EAAQ4kB,EAAQ5kB,MACnC,IACIujB,EADAhT,EAAO4N,EAAOne,EAAQoQ,GAE1B,IAAKtP,EAAId,EAAQ,EAAGc,GAAK8jB,EAAQ7c,IAAKjH,IAAK,CACzC,MAAMu0D,EAAKl3C,EAAOrd,EAAIsP,GACtBmT,EAAQgkE,GAAUN,EAAertD,WAAW3lB,GAAcozE,EAAc,CACtEhoF,KAAM,UACNuoF,GAAIr3E,EACJuzB,GAAIuxB,EACJwyB,aAAc/mF,EAAI,GAAKsP,EACvB03E,YAAahnF,EAAIsP,EACjBzH,mBAEEo/E,GAAaxkE,EAAOikE,IACtBC,EAASznF,EAAOc,EAAI,EAAG8jB,EAAQtgB,KAAMkjF,GAEvCj3E,EAAO8kD,EACPmyB,EAAYjkE,CACd,CACIvjB,EAAQc,EAAI,GACd2mF,EAASznF,EAAOc,EAAI,EAAG8jB,EAAQtgB,KAAMkjF,EAEzC,CAEA,OAAOtxD,CACT,CAlES8xD,CAAgB5jE,EAAM25B,EAAU5/B,EAAQ8oE,GAFtClpC,CAGX,CAmEA,SAASwpC,GAAU5gF,GACjB,MAAO,CACL+c,gBAAiB/c,EAAQ+c,gBACzBu4B,eAAgBt1C,EAAQs1C,eACxBxa,WAAY96B,EAAQ86B,WACpBE,iBAAkBh7B,EAAQg7B,iBAC1BmZ,gBAAiBn0C,EAAQm0C,gBACzBr4B,YAAa9b,EAAQ8b,YACrBmB,YAAajd,EAAQid,YAEzB,CAEA,SAASmkE,GAAaxkE,EAAOikE,GAC3B,IAAKA,EACH,OAAO,EAET,MAAMhzE,EAAQ,GACRyzE,EAAW,SAAS7hF,EAAKoB,GAC7B,OAAKiyE,GAAoBjyE,IAGpBgN,EAAMsX,SAAStkB,IAClBgN,EAAM3S,KAAK2F,GAENgN,EAAMkH,QAAQlU,IALZA,CAMX,EACA,OAAOsyE,KAAKC,UAAUx2D,EAAO0kE,KAAcnO,KAAKC,UAAUyN,EAAWS,EACvE","sources":["../node_modules/chart.js/src/core/core.animator.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.pie.js","../node_modules/chart.js/src/controllers/controller.radar.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/core/core.adapters.ts","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/platform/platform.base.js","../node_modules/chart.js/src/platform/platform.basic.js","../node_modules/chart.js/src/platform/platform.dom.js","../node_modules/chart.js/src/core/core.element.ts","../node_modules/chart.js/src/core/core.scale.autoskip.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.typedRegistry.js","../node_modules/chart.js/src/core/core.registry.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.config.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/platform/index.js","../node_modules/chart.js/src/elements/element.arc.ts","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.ts","../node_modules/chart.js/src/elements/element.bar.js","../node_modules/chart.js/src/plugins/plugin.colors.ts","../node_modules/chart.js/src/plugins/plugin.decimation.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","../node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","../node_modules/chart.js/src/plugins/plugin.filler/index.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/chart.js/src/plugins/plugin.subtitle.js","../node_modules/chart.js/src/plugins/plugin.tooltip.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/chart.js/src/scales/scale.timeseries.js","../node_modules/chart.js/src/index.ts","../node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/src/helpers/helpers.core.ts","../node_modules/chart.js/src/helpers/helpers.math.ts","../node_modules/chart.js/src/helpers/helpers.collection.ts","../node_modules/chart.js/src/helpers/helpers.extras.ts","../node_modules/chart.js/src/helpers/helpers.easing.ts","../node_modules/chart.js/src/helpers/helpers.color.ts","../node_modules/chart.js/src/core/core.animations.defaults.js","../node_modules/chart.js/src/helpers/helpers.intl.ts","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.layouts.defaults.js","../node_modules/chart.js/src/core/core.scale.defaults.js","../node_modules/chart.js/src/helpers/helpers.canvas.ts","../node_modules/chart.js/src/helpers/helpers.options.ts","../node_modules/chart.js/src/helpers/helpers.config.ts","../node_modules/chart.js/src/helpers/helpers.curve.ts","../node_modules/chart.js/src/helpers/helpers.dom.ts","../node_modules/chart.js/src/helpers/helpers.interpolation.ts","../node_modules/chart.js/src/helpers/helpers.rtl.ts","../node_modules/chart.js/src/helpers/helpers.segment.js"],"sourcesContent":["import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n"],"names":["Animator","constructor","this","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","requestAnimFrame","call","window","_update","arguments","length","Date","now","remaining","running","items","item","i","draw","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","color","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","resolve","_fn","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","isObject","animationOptions","Object","keys","defaults","animation","animatedProps","getOwnPropertyNames","key","option","isArray","properties","_animateOptions","values","newOptions","options","$shared","assign","$animations","resolveTargetOptions","animations","_createAnimations","anim","all","awaitAll","then","props","charAt","value","size","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isNumberFinite","sign","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","concat","id","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","scales","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","fill","isPluginEnabled","console","warn","updateIndex","dataset","getDataset","chooseId","x","y","r","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","data","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","iAxisKey","vAxisKey","adata","Array","convertObjectDataToArray","isExtensible","listenArrayEvents","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","createStack","hidden","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","t","b","l","top","right","bottom","left","disabled","toClip","clip","defaultClip","elements","area","chartArea","drawActiveElementsOnTop","element","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","createContext","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","_arrayUnique","sort","a","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","base","borderProps","enableBorderRadius","parseEdge","orig","v1","v2","startEnd","v","setInflateAmount","_ref","ratio","inflateAmount","_defineProperty","BarController","obj","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","isNullOrUndef","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","skipNull","val","isNaN","indexOf","_getStackCount","_getStackIndex","name","pixels","barThickness","_startPixel","_endPixel","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","numbers","_index_","offset","grid","_value_","beginAtZero","BubbleController","radius","points","point","iPixel","vPixel","skip","DoughnutController","innerRadius","outerRadius","offsetX","offsetY","getter","_getRotation","toRadians","rotation","_getCircumference","circumference","_getRotationExtents","TAU","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","toPercentage","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","formatNumber","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","_scriptable","_indexable","startsWith","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","onClick","e","legendItem","toggleDataVisibility","LineController","line","_dataset","animationsDisabled","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","_parseObjectDataRadialScale","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","interaction","abstract","Error","DateAdapterBase","override","members","prototype","init","formats","format","diff","startOf","endOf","adapters","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","_isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getNearestItems","getProps","getAngleFromPoint","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","setLayoutDims","layouts","params","wrap","stackWeight","includes","_stack","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","getMargins","marginForPositions","positions","margin","fitBoxes","boxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","supportsEventListenerOptions","passive","removeListener","nodeListContains","nodeList","node","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","ret","autoSkip","tickOpts","determinedMaxTicks","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","result","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","len","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","round","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","toFont","lineHeight","titleAlign","align","_toLeftRightCenter","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","finiteOrDefault","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","callback","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","title","toDegrees","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","_measureText","gcLen","garbageCollect","valueAt","idx","pixel","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","backdrop","tickTextAlign","showLabelBackdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","clipArea","renderTextOptions","renderText","unclipArea","drawTitle","titleX","titleY","_alignStartEnd","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","itemDefaults","merge","defaultRoutes","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","routeDefaults","descriptors","describe","registerDefaults","overrides","unregister","Registry","controllers","_typedRegistries","_len","_key","_each","_len2","_key2","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","_get","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len10","_key10","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","_capitalize","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","local","allPlugins","_ref2","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","_ref3","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","_len11","scaleOptions","_key11","toLowerCase","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","boundDs","d","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","mergeIf","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","isFunction","hasFunction","needContext","subResolver","_attachContext","descriptorDefaults","resolverCache","_createResolver","p","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","_isDomSupported","getElementById","instances","getChart","c","moveNumericKeys","intKey","getSizeForArea","field","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_ref4","_elementsEqual","pluginId","replay","hoverOptions","hover","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","onHover","parseBorderRadius$1","angleDelta","o","borderRadius","_readValueToProps","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","closePath","fullCircles","borderJoinStyle","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","_isBetween","halfAngle","halfRadius","translate","radiusOffset","drawArc","setStyle","lineCap","borderCapStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segments","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","_updateBezierControlPoints","_computeSegments","interpolate","_boundSegments","_interpolate","_steppedInterpolation","_bezierInterpolation","_pointInLine","_getInterpolationMethod","interpolated","inRange$1","hitRadius","capBezierPoints","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","drawPoint","getBarBounds","bar","half","skipOrLimit","boundingRects","bounds","maxW","maxH","toTRBL","parseBorderWidth","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","addRectPath","addRoundedRectPath","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","k","plugin_colors","forceOverride","_args","chartOptions","colorizer","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","pointCount","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_normalizeAngle","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_ref5","_pointsFromSegments","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","fillOption","parseFillOption","parseFloat","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","_boundSegment","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","getRtlAdapter","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","overrideTextDirection","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","drawLegendBox","_textX","strikethrough","fillText","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","itemsEqual","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","xSet","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","noop","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_ref6","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_fallback","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","relativeLabelSize","minSpacing","_ref7","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","niceNum","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","tickValue","generateTicks$1","_setMinAndMaxByKey","LinearScale","Ticks","formatters","numeric","log10Floor","log10","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","_ref8","minExp","exp","startExp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","_longestText","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","logarithmic","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","rotate","animate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","_lookup","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","lim","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","f","hex","h1","h2","eq","g","isShort","HUE_RE","hsl2rgbn","s","n","hsv2rgbn","hwb2rgbn","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","exec","hwb2rgb","hsv2rgb","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","nameParse","unpacked","tkeys","ok","nk","parseInt","unpack","RGB_RE","modHSL","tmp","clone","fromObject","functionParse","rgbParse","Color","hexParse","_rgb","_valid","rgbString","hslString","c2","w2","w1","rgb1","rgb2","clearer","greyscale","opaquer","negate","lighten","darken","saturate","desaturate","deg","toString","defaultValue","dimension","endsWith","thisArg","loopable","a0","a1","klen","isValidKey","_merger","tval","sval","merger","current","_mergerIf","hasOwnProperty","keyResolvers","part","_splitKey","_getKeyResolver","toUpperCase","PITAU","INFINITY","RAD_PER_DEG","QUARTER_PI","TWO_THIRDS_PI","roundedRange","niceRange","fraction","rounded","degrees","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","_angleDiff","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","cmp","mid","ti","arrayEvents","_chartjs","object","stub","requestAnimationFrame","argsToUse","ticking","timeout","clearTimeout","setTimeout","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","atEdge","elasticIn","elasticOut","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","colors","intlCache","num","JSON","stringify","Intl","NumberFormat","getNumberFormat","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","getScope$1","root","Defaults","_appliers","family","hoverBackgroundColor","hoverBorderColor","hoverColor","scopeObject","targetScopeObject","privateName","defineProperties","appliers","longest","arrayOfThings","thing","nestedThing","halfWidth","resetTransform","clearRect","xOffset","yOffset","xOffsetW","yOffsetW","drawImage","ellipse","SQRT1_2","flip","midpoint","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","drawBackdrop","oldColor","setRenderOpts","strokeText","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","objProps","read","toFontString","inputs","info","cacheable","minmax","keepZero","parentContext","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_scopes","_rootScopes","Proxy","deleteProperty","_keys","_cached","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getKeysFromAllScopes","ownKeys","storage","_storage","subProxy","_context","_subProxy","receiver","getValue","_resolveScriptable","_resolveArray","_resolveWithContext","_allKeys","resolveFallback","getScope","addScopes","parentScopes","parentFallback","rootScopes","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","getValueAxis","splineCurve","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","monotoneCompute","capControlPoint","controlPoints","inArea","inAreaPrev","inAreaNext","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","ownerDocument","defaultView","getPositionedStyle","styles","suffix","useOffsetPos","shadowRoot","borderBox","paddings","borders","touches","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","bbWidth","bbHeight","containerSize","containerStyle","containerBorder","containerPadding","clientHeight","getContainerSize","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","passiveSupported","getPropertyValue","cp1","cp2","getRightToLeftAdapter","rectX","getLeftToRightAdapter","_itemWidth","direction","original","getPropertyPriority","setProperty","prevTextDirection","propertyFn","between","compare","normalizeSegment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","sub","segmentOptions","findStartAndEnd","splitByStyles","solidSegments","chartContext","baseStyle","readStyle","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","replacer"],"sourceRoot":""}